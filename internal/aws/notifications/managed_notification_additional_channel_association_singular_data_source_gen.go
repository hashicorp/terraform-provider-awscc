// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package notifications

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_notifications_managed_notification_additional_channel_association", managedNotificationAdditionalChannelAssociationDataSource)
}

// managedNotificationAdditionalChannelAssociationDataSource returns the Terraform awscc_notifications_managed_notification_additional_channel_association data source.
// This Terraform data source corresponds to the CloudFormation AWS::Notifications::ManagedNotificationAdditionalChannelAssociation resource.
func managedNotificationAdditionalChannelAssociationDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: ChannelArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "ARN identifier of the channel.\nExample: arn:aws:chatbot::123456789012:chat-configuration/slack-channel/security-ops",
		//	  "pattern": "^arn:aws:(chatbot|consoleapp|notifications-contacts):[a-zA-Z0-9-]*:[0-9]{12}:[a-zA-Z0-9-_.@]+/[a-zA-Z0-9/_.@:-]+$",
		//	  "type": "string"
		//	}
		"channel_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "ARN identifier of the channel.\nExample: arn:aws:chatbot::123456789012:chat-configuration/slack-channel/security-ops",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ManagedNotificationConfigurationArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "ARN identifier of the Managed Notification.\nExample: arn:aws:notifications::381491923782:managed-notification-configuration/category/AWS-Health/sub-category/Billing",
		//	  "pattern": "^arn:[-.a-z0-9]{1,63}:notifications::[0-9]{12}:managed-notification-configuration/category/[a-zA-Z0-9-]{3,64}/sub-category/[a-zA-Z0-9-]{3,64}$",
		//	  "type": "string"
		//	}
		"managed_notification_configuration_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "ARN identifier of the Managed Notification.\nExample: arn:aws:notifications::381491923782:managed-notification-configuration/category/AWS-Health/sub-category/Billing",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::Notifications::ManagedNotificationAdditionalChannelAssociation",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::Notifications::ManagedNotificationAdditionalChannelAssociation").WithTerraformTypeName("awscc_notifications_managed_notification_additional_channel_association")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"channel_arn":                            "ChannelArn",
		"managed_notification_configuration_arn": "ManagedNotificationConfigurationArn",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
