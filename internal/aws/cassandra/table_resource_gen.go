// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/resource/main.go; DO NOT EDIT.

package cassandra

import (
	"context"
	"regexp"

	"github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/boolplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64default"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/listplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/objectplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/setplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
	fwvalidators "github.com/hashicorp/terraform-provider-awscc/internal/validators"
)

func init() {
	registry.AddResourceFactory("awscc_cassandra_table", tableResource)
}

// tableResource returns the Terraform awscc_cassandra_table resource.
// This Terraform resource corresponds to the CloudFormation AWS::Cassandra::Table resource.
func tableResource(ctx context.Context) (resource.Resource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: AutoScalingSpecifications
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Represents the read and write settings used for AutoScaling.",
		//	  "properties": {
		//	    "ReadCapacityAutoScaling": {
		//	      "additionalProperties": false,
		//	      "description": "Represents configuration for auto scaling.",
		//	      "properties": {
		//	        "AutoScalingDisabled": {
		//	          "default": false,
		//	          "type": "boolean"
		//	        },
		//	        "MaximumUnits": {
		//	          "minimum": 1,
		//	          "type": "integer"
		//	        },
		//	        "MinimumUnits": {
		//	          "minimum": 1,
		//	          "type": "integer"
		//	        },
		//	        "ScalingPolicy": {
		//	          "additionalProperties": false,
		//	          "description": "Represents scaling policy.",
		//	          "properties": {
		//	            "TargetTrackingScalingPolicyConfiguration": {
		//	              "additionalProperties": false,
		//	              "description": "Represents configuration for target tracking scaling policy.",
		//	              "properties": {
		//	                "DisableScaleIn": {
		//	                  "default": "false",
		//	                  "type": "boolean"
		//	                },
		//	                "ScaleInCooldown": {
		//	                  "default": 0,
		//	                  "type": "integer"
		//	                },
		//	                "ScaleOutCooldown": {
		//	                  "default": 0,
		//	                  "type": "integer"
		//	                },
		//	                "TargetValue": {
		//	                  "type": "integer"
		//	                }
		//	              },
		//	              "required": [
		//	                "TargetValue"
		//	              ],
		//	              "type": "object"
		//	            }
		//	          },
		//	          "type": "object"
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "WriteCapacityAutoScaling": {
		//	      "additionalProperties": false,
		//	      "description": "Represents configuration for auto scaling.",
		//	      "properties": {
		//	        "AutoScalingDisabled": {
		//	          "default": false,
		//	          "type": "boolean"
		//	        },
		//	        "MaximumUnits": {
		//	          "minimum": 1,
		//	          "type": "integer"
		//	        },
		//	        "MinimumUnits": {
		//	          "minimum": 1,
		//	          "type": "integer"
		//	        },
		//	        "ScalingPolicy": {
		//	          "additionalProperties": false,
		//	          "description": "Represents scaling policy.",
		//	          "properties": {
		//	            "TargetTrackingScalingPolicyConfiguration": {
		//	              "additionalProperties": false,
		//	              "description": "Represents configuration for target tracking scaling policy.",
		//	              "properties": {
		//	                "DisableScaleIn": {
		//	                  "default": "false",
		//	                  "type": "boolean"
		//	                },
		//	                "ScaleInCooldown": {
		//	                  "default": 0,
		//	                  "type": "integer"
		//	                },
		//	                "ScaleOutCooldown": {
		//	                  "default": 0,
		//	                  "type": "integer"
		//	                },
		//	                "TargetValue": {
		//	                  "type": "integer"
		//	                }
		//	              },
		//	              "required": [
		//	                "TargetValue"
		//	              ],
		//	              "type": "object"
		//	            }
		//	          },
		//	          "type": "object"
		//	        }
		//	      },
		//	      "type": "object"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"auto_scaling_specifications": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: ReadCapacityAutoScaling
				"read_capacity_auto_scaling": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: AutoScalingDisabled
						"auto_scaling_disabled": schema.BoolAttribute{ /*START ATTRIBUTE*/
							Optional: true,
							Computed: true,
							Default:  booldefault.StaticBool(false),
							PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
								boolplanmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
						// Property: MaximumUnits
						"maximum_units": schema.Int64Attribute{ /*START ATTRIBUTE*/
							Optional: true,
							Computed: true,
							Validators: []validator.Int64{ /*START VALIDATORS*/
								int64validator.AtLeast(1),
							}, /*END VALIDATORS*/
							PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
								int64planmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
						// Property: MinimumUnits
						"minimum_units": schema.Int64Attribute{ /*START ATTRIBUTE*/
							Optional: true,
							Computed: true,
							Validators: []validator.Int64{ /*START VALIDATORS*/
								int64validator.AtLeast(1),
							}, /*END VALIDATORS*/
							PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
								int64planmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
						// Property: ScalingPolicy
						"scaling_policy": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: TargetTrackingScalingPolicyConfiguration
								"target_tracking_scaling_policy_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: DisableScaleIn
										"disable_scale_in": schema.BoolAttribute{ /*START ATTRIBUTE*/
											Optional: true,
											Computed: true,
											Default:  booldefault.StaticBool(false),
											PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
												boolplanmodifier.UseStateForUnknown(),
											}, /*END PLAN MODIFIERS*/
										}, /*END ATTRIBUTE*/
										// Property: ScaleInCooldown
										"scale_in_cooldown": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Optional: true,
											Computed: true,
											Default:  int64default.StaticInt64(0),
											PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
												int64planmodifier.UseStateForUnknown(),
											}, /*END PLAN MODIFIERS*/
										}, /*END ATTRIBUTE*/
										// Property: ScaleOutCooldown
										"scale_out_cooldown": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Optional: true,
											Computed: true,
											Default:  int64default.StaticInt64(0),
											PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
												int64planmodifier.UseStateForUnknown(),
											}, /*END PLAN MODIFIERS*/
										}, /*END ATTRIBUTE*/
										// Property: TargetValue
										"target_value": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Optional: true,
											Computed: true,
											Validators: []validator.Int64{ /*START VALIDATORS*/
												fwvalidators.NotNullInt64(),
											}, /*END VALIDATORS*/
											PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
												int64planmodifier.UseStateForUnknown(),
											}, /*END PLAN MODIFIERS*/
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Description: "Represents configuration for target tracking scaling policy.",
									Optional:    true,
									Computed:    true,
									PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
										objectplanmodifier.UseStateForUnknown(),
									}, /*END PLAN MODIFIERS*/
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Description: "Represents scaling policy.",
							Optional:    true,
							Computed:    true,
							PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
								objectplanmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "Represents configuration for auto scaling.",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
						objectplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: WriteCapacityAutoScaling
				"write_capacity_auto_scaling": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: AutoScalingDisabled
						"auto_scaling_disabled": schema.BoolAttribute{ /*START ATTRIBUTE*/
							Optional: true,
							Computed: true,
							Default:  booldefault.StaticBool(false),
							PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
								boolplanmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
						// Property: MaximumUnits
						"maximum_units": schema.Int64Attribute{ /*START ATTRIBUTE*/
							Optional: true,
							Computed: true,
							Validators: []validator.Int64{ /*START VALIDATORS*/
								int64validator.AtLeast(1),
							}, /*END VALIDATORS*/
							PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
								int64planmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
						// Property: MinimumUnits
						"minimum_units": schema.Int64Attribute{ /*START ATTRIBUTE*/
							Optional: true,
							Computed: true,
							Validators: []validator.Int64{ /*START VALIDATORS*/
								int64validator.AtLeast(1),
							}, /*END VALIDATORS*/
							PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
								int64planmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
						// Property: ScalingPolicy
						"scaling_policy": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: TargetTrackingScalingPolicyConfiguration
								"target_tracking_scaling_policy_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: DisableScaleIn
										"disable_scale_in": schema.BoolAttribute{ /*START ATTRIBUTE*/
											Optional: true,
											Computed: true,
											Default:  booldefault.StaticBool(false),
											PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
												boolplanmodifier.UseStateForUnknown(),
											}, /*END PLAN MODIFIERS*/
										}, /*END ATTRIBUTE*/
										// Property: ScaleInCooldown
										"scale_in_cooldown": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Optional: true,
											Computed: true,
											Default:  int64default.StaticInt64(0),
											PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
												int64planmodifier.UseStateForUnknown(),
											}, /*END PLAN MODIFIERS*/
										}, /*END ATTRIBUTE*/
										// Property: ScaleOutCooldown
										"scale_out_cooldown": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Optional: true,
											Computed: true,
											Default:  int64default.StaticInt64(0),
											PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
												int64planmodifier.UseStateForUnknown(),
											}, /*END PLAN MODIFIERS*/
										}, /*END ATTRIBUTE*/
										// Property: TargetValue
										"target_value": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Optional: true,
											Computed: true,
											Validators: []validator.Int64{ /*START VALIDATORS*/
												fwvalidators.NotNullInt64(),
											}, /*END VALIDATORS*/
											PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
												int64planmodifier.UseStateForUnknown(),
											}, /*END PLAN MODIFIERS*/
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Description: "Represents configuration for target tracking scaling policy.",
									Optional:    true,
									Computed:    true,
									PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
										objectplanmodifier.UseStateForUnknown(),
									}, /*END PLAN MODIFIERS*/
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Description: "Represents scaling policy.",
							Optional:    true,
							Computed:    true,
							PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
								objectplanmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "Represents configuration for auto scaling.",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
						objectplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Represents the read and write settings used for AutoScaling.",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
			// AutoScalingSpecifications is a write-only property.
		}, /*END ATTRIBUTE*/
		// Property: BillingMode
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "properties": {
		//	    "Mode": {
		//	      "default": "ON_DEMAND",
		//	      "description": "Capacity mode for the specified table",
		//	      "enum": [
		//	        "PROVISIONED",
		//	        "ON_DEMAND"
		//	      ],
		//	      "type": "string"
		//	    },
		//	    "ProvisionedThroughput": {
		//	      "additionalProperties": false,
		//	      "description": "Throughput for the specified table, which consists of values for ReadCapacityUnits and WriteCapacityUnits",
		//	      "properties": {
		//	        "ReadCapacityUnits": {
		//	          "minimum": 1,
		//	          "type": "integer"
		//	        },
		//	        "WriteCapacityUnits": {
		//	          "minimum": 1,
		//	          "type": "integer"
		//	        }
		//	      },
		//	      "required": [
		//	        "ReadCapacityUnits",
		//	        "WriteCapacityUnits"
		//	      ],
		//	      "type": "object"
		//	    }
		//	  },
		//	  "required": [
		//	    "Mode"
		//	  ],
		//	  "type": "object"
		//	}
		"billing_mode": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: Mode
				"mode": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "Capacity mode for the specified table",
					Optional:    true,
					Computed:    true,
					Default:     stringdefault.StaticString("ON_DEMAND"),
					Validators: []validator.String{ /*START VALIDATORS*/
						stringvalidator.OneOf(
							"PROVISIONED",
							"ON_DEMAND",
						),
					}, /*END VALIDATORS*/
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: ProvisionedThroughput
				"provisioned_throughput": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: ReadCapacityUnits
						"read_capacity_units": schema.Int64Attribute{ /*START ATTRIBUTE*/
							Optional: true,
							Computed: true,
							Validators: []validator.Int64{ /*START VALIDATORS*/
								int64validator.AtLeast(1),
								fwvalidators.NotNullInt64(),
							}, /*END VALIDATORS*/
							PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
								int64planmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
						// Property: WriteCapacityUnits
						"write_capacity_units": schema.Int64Attribute{ /*START ATTRIBUTE*/
							Optional: true,
							Computed: true,
							Validators: []validator.Int64{ /*START VALIDATORS*/
								int64validator.AtLeast(1),
								fwvalidators.NotNullInt64(),
							}, /*END VALIDATORS*/
							PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
								int64planmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "Throughput for the specified table, which consists of values for ReadCapacityUnits and WriteCapacityUnits",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
						objectplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Optional: true,
			Computed: true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: CdcSpecification
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Represents the CDC configuration for the table",
		//	  "properties": {
		//	    "Status": {
		//	      "description": "Indicates whether CDC is enabled or disabled for the table",
		//	      "enum": [
		//	        "ENABLED",
		//	        "DISABLED"
		//	      ],
		//	      "type": "string"
		//	    },
		//	    "ViewType": {
		//	      "default": "NEW_AND_OLD_IMAGES",
		//	      "description": "Specifies what data should be captured in the change data stream",
		//	      "enum": [
		//	        "NEW_IMAGE",
		//	        "OLD_IMAGE",
		//	        "KEYS_ONLY",
		//	        "NEW_AND_OLD_IMAGES"
		//	      ],
		//	      "type": "string"
		//	    }
		//	  },
		//	  "required": [
		//	    "Status"
		//	  ],
		//	  "type": "object"
		//	}
		"cdc_specification": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: Status
				"status": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "Indicates whether CDC is enabled or disabled for the table",
					Optional:    true,
					Computed:    true,
					Validators: []validator.String{ /*START VALIDATORS*/
						stringvalidator.OneOf(
							"ENABLED",
							"DISABLED",
						),
						fwvalidators.NotNullString(),
					}, /*END VALIDATORS*/
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: ViewType
				"view_type": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "Specifies what data should be captured in the change data stream",
					Optional:    true,
					Computed:    true,
					Default:     stringdefault.StaticString("NEW_AND_OLD_IMAGES"),
					Validators: []validator.String{ /*START VALIDATORS*/
						stringvalidator.OneOf(
							"NEW_IMAGE",
							"OLD_IMAGE",
							"KEYS_ONLY",
							"NEW_AND_OLD_IMAGES",
						),
					}, /*END VALIDATORS*/
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Represents the CDC configuration for the table",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ClientSideTimestampsEnabled
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Indicates whether client side timestamps are enabled (true) or disabled (false) on the table. False by default, once it is enabled it cannot be disabled again.",
		//	  "type": "boolean"
		//	}
		"client_side_timestamps_enabled": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "Indicates whether client side timestamps are enabled (true) or disabled (false) on the table. False by default, once it is enabled it cannot be disabled again.",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
				boolplanmodifier.UseStateForUnknown(),
				boolplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ClusteringKeyColumns
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Clustering key columns of the table",
		//	  "insertionOrder": true,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "properties": {
		//	      "Column": {
		//	        "additionalProperties": false,
		//	        "properties": {
		//	          "ColumnName": {
		//	            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$",
		//	            "type": "string"
		//	          },
		//	          "ColumnType": {
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "ColumnName",
		//	          "ColumnType"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "OrderBy": {
		//	        "default": "ASC",
		//	        "enum": [
		//	          "ASC",
		//	          "DESC"
		//	        ],
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Column"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"clustering_key_columns": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Column
					"column": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: ColumnName
							"column_name": schema.StringAttribute{ /*START ATTRIBUTE*/
								Optional: true,
								Computed: true,
								Validators: []validator.String{ /*START VALIDATORS*/
									stringvalidator.RegexMatches(regexp.MustCompile("^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$"), ""),
									fwvalidators.NotNullString(),
								}, /*END VALIDATORS*/
								PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
									stringplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
							// Property: ColumnType
							"column_type": schema.StringAttribute{ /*START ATTRIBUTE*/
								Optional: true,
								Computed: true,
								Validators: []validator.String{ /*START VALIDATORS*/
									fwvalidators.NotNullString(),
								}, /*END VALIDATORS*/
								PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
									stringplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Optional: true,
						Computed: true,
						Validators: []validator.Object{ /*START VALIDATORS*/
							fwvalidators.NotNullObject(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
							objectplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: OrderBy
					"order_by": schema.StringAttribute{ /*START ATTRIBUTE*/
						Optional: true,
						Computed: true,
						Default:  stringdefault.StaticString("ASC"),
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.OneOf(
								"ASC",
								"DESC",
							),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "Clustering key columns of the table",
			Optional:    true,
			Computed:    true,
			Validators: []validator.List{ /*START VALIDATORS*/
				listvalidator.UniqueValues(),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
				listplanmodifier.UseStateForUnknown(),
				listplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: DefaultTimeToLive
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.",
		//	  "minimum": 0,
		//	  "type": "integer"
		//	}
		"default_time_to_live": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.",
			Optional:    true,
			Computed:    true,
			Validators: []validator.Int64{ /*START VALIDATORS*/
				int64validator.AtLeast(0),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
				int64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: EncryptionSpecification
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Represents the settings used to enable server-side encryption",
		//	  "properties": {
		//	    "EncryptionType": {
		//	      "default": "AWS_OWNED_KMS_KEY",
		//	      "description": "Server-side encryption type",
		//	      "enum": [
		//	        "AWS_OWNED_KMS_KEY",
		//	        "CUSTOMER_MANAGED_KMS_KEY"
		//	      ],
		//	      "type": "string"
		//	    },
		//	    "KmsKeyIdentifier": {
		//	      "description": "The AWS KMS customer master key (CMK) that should be used for the AWS KMS encryption. To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. ",
		//	      "type": "string"
		//	    }
		//	  },
		//	  "required": [
		//	    "EncryptionType"
		//	  ],
		//	  "type": "object"
		//	}
		"encryption_specification": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: EncryptionType
				"encryption_type": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "Server-side encryption type",
					Optional:    true,
					Computed:    true,
					Default:     stringdefault.StaticString("AWS_OWNED_KMS_KEY"),
					Validators: []validator.String{ /*START VALIDATORS*/
						stringvalidator.OneOf(
							"AWS_OWNED_KMS_KEY",
							"CUSTOMER_MANAGED_KMS_KEY",
						),
					}, /*END VALIDATORS*/
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: KmsKeyIdentifier
				"kms_key_identifier": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "The AWS KMS customer master key (CMK) that should be used for the AWS KMS encryption. To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. ",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Represents the settings used to enable server-side encryption",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: KeyspaceName
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Name for Cassandra keyspace",
		//	  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$",
		//	  "type": "string"
		//	}
		"keyspace_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Name for Cassandra keyspace",
			Required:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.RegexMatches(regexp.MustCompile("^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$"), ""),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.RequiresReplace(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: PartitionKeyColumns
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Partition key columns of the table",
		//	  "insertionOrder": true,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "properties": {
		//	      "ColumnName": {
		//	        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$",
		//	        "type": "string"
		//	      },
		//	      "ColumnType": {
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "ColumnName",
		//	      "ColumnType"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "minItems": 1,
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"partition_key_columns": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: ColumnName
					"column_name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Required: true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.RegexMatches(regexp.MustCompile("^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$"), ""),
						}, /*END VALIDATORS*/
					}, /*END ATTRIBUTE*/
					// Property: ColumnType
					"column_type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Required: true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "Partition key columns of the table",
			Required:    true,
			Validators: []validator.List{ /*START VALIDATORS*/
				listvalidator.SizeAtLeast(1),
				listvalidator.UniqueValues(),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
				listplanmodifier.RequiresReplace(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: PointInTimeRecoveryEnabled
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Indicates whether point in time recovery is enabled (true) or disabled (false) on the table",
		//	  "type": "boolean"
		//	}
		"point_in_time_recovery_enabled": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "Indicates whether point in time recovery is enabled (true) or disabled (false) on the table",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
				boolplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: RegularColumns
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Non-key columns of the table",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "properties": {
		//	      "ColumnName": {
		//	        "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$",
		//	        "type": "string"
		//	      },
		//	      "ColumnType": {
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "ColumnName",
		//	      "ColumnType"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"regular_columns": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: ColumnName
					"column_name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Optional: true,
						Computed: true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.RegexMatches(regexp.MustCompile("^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$"), ""),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: ColumnType
					"column_type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Optional: true,
						Computed: true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "Non-key columns of the table",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ReplicaSpecifications
		// CloudFormation resource type schema:
		//
		//	{
		//	  "insertionOrder": true,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "Represents replica specifications.",
		//	    "properties": {
		//	      "ReadCapacityAutoScaling": {
		//	        "additionalProperties": false,
		//	        "description": "Represents configuration for auto scaling.",
		//	        "properties": {
		//	          "AutoScalingDisabled": {
		//	            "default": false,
		//	            "type": "boolean"
		//	          },
		//	          "MaximumUnits": {
		//	            "minimum": 1,
		//	            "type": "integer"
		//	          },
		//	          "MinimumUnits": {
		//	            "minimum": 1,
		//	            "type": "integer"
		//	          },
		//	          "ScalingPolicy": {
		//	            "additionalProperties": false,
		//	            "description": "Represents scaling policy.",
		//	            "properties": {
		//	              "TargetTrackingScalingPolicyConfiguration": {
		//	                "additionalProperties": false,
		//	                "description": "Represents configuration for target tracking scaling policy.",
		//	                "properties": {
		//	                  "DisableScaleIn": {
		//	                    "default": "false",
		//	                    "type": "boolean"
		//	                  },
		//	                  "ScaleInCooldown": {
		//	                    "default": 0,
		//	                    "type": "integer"
		//	                  },
		//	                  "ScaleOutCooldown": {
		//	                    "default": 0,
		//	                    "type": "integer"
		//	                  },
		//	                  "TargetValue": {
		//	                    "type": "integer"
		//	                  }
		//	                },
		//	                "required": [
		//	                  "TargetValue"
		//	                ],
		//	                "type": "object"
		//	              }
		//	            },
		//	            "type": "object"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "ReadCapacityUnits": {
		//	        "type": "integer"
		//	      },
		//	      "Region": {
		//	        "maxLength": 25,
		//	        "minLength": 2,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Region"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "minItems": 1,
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"replica_specifications": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: ReadCapacityAutoScaling
					"read_capacity_auto_scaling": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: AutoScalingDisabled
							"auto_scaling_disabled": schema.BoolAttribute{ /*START ATTRIBUTE*/
								Optional: true,
								Computed: true,
								Default:  booldefault.StaticBool(false),
								PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
									boolplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
							// Property: MaximumUnits
							"maximum_units": schema.Int64Attribute{ /*START ATTRIBUTE*/
								Optional: true,
								Computed: true,
								Validators: []validator.Int64{ /*START VALIDATORS*/
									int64validator.AtLeast(1),
								}, /*END VALIDATORS*/
								PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
									int64planmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
							// Property: MinimumUnits
							"minimum_units": schema.Int64Attribute{ /*START ATTRIBUTE*/
								Optional: true,
								Computed: true,
								Validators: []validator.Int64{ /*START VALIDATORS*/
									int64validator.AtLeast(1),
								}, /*END VALIDATORS*/
								PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
									int64planmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
							// Property: ScalingPolicy
							"scaling_policy": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: TargetTrackingScalingPolicyConfiguration
									"target_tracking_scaling_policy_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: DisableScaleIn
											"disable_scale_in": schema.BoolAttribute{ /*START ATTRIBUTE*/
												Optional: true,
												Computed: true,
												Default:  booldefault.StaticBool(false),
												PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
													boolplanmodifier.UseStateForUnknown(),
												}, /*END PLAN MODIFIERS*/
											}, /*END ATTRIBUTE*/
											// Property: ScaleInCooldown
											"scale_in_cooldown": schema.Int64Attribute{ /*START ATTRIBUTE*/
												Optional: true,
												Computed: true,
												Default:  int64default.StaticInt64(0),
												PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
													int64planmodifier.UseStateForUnknown(),
												}, /*END PLAN MODIFIERS*/
											}, /*END ATTRIBUTE*/
											// Property: ScaleOutCooldown
											"scale_out_cooldown": schema.Int64Attribute{ /*START ATTRIBUTE*/
												Optional: true,
												Computed: true,
												Default:  int64default.StaticInt64(0),
												PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
													int64planmodifier.UseStateForUnknown(),
												}, /*END PLAN MODIFIERS*/
											}, /*END ATTRIBUTE*/
											// Property: TargetValue
											"target_value": schema.Int64Attribute{ /*START ATTRIBUTE*/
												Optional: true,
												Computed: true,
												Validators: []validator.Int64{ /*START VALIDATORS*/
													fwvalidators.NotNullInt64(),
												}, /*END VALIDATORS*/
												PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
													int64planmodifier.UseStateForUnknown(),
												}, /*END PLAN MODIFIERS*/
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
										Description: "Represents configuration for target tracking scaling policy.",
										Optional:    true,
										Computed:    true,
										PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
											objectplanmodifier.UseStateForUnknown(),
										}, /*END PLAN MODIFIERS*/
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Description: "Represents scaling policy.",
								Optional:    true,
								Computed:    true,
								PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
									objectplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Description: "Represents configuration for auto scaling.",
						Optional:    true,
						Computed:    true,
						PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
							objectplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: ReadCapacityUnits
					"read_capacity_units": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Optional: true,
						Computed: true,
						PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
							int64planmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: Region
					"region": schema.StringAttribute{ /*START ATTRIBUTE*/
						Optional: true,
						Computed: true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(2, 25),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Optional: true,
			Computed: true,
			Validators: []validator.List{ /*START VALIDATORS*/
				listvalidator.SizeAtLeast(1),
				listvalidator.UniqueValues(),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
				listplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
			// ReplicaSpecifications is a write-only property.
		}, /*END ATTRIBUTE*/
		// Property: TableName
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Name for Cassandra table",
		//	  "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$",
		//	  "type": "string"
		//	}
		"table_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Name for Cassandra table",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.RegexMatches(regexp.MustCompile("^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$"), ""),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "An array of key-value pairs to apply to this resource",
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "A key-value pair to apply to the resource",
		//	    "properties": {
		//	      "Key": {
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "maxLength": 256,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Value",
		//	      "Key"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "maxItems": 50,
		//	  "minItems": 0,
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Optional: true,
						Computed: true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(1, 128),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Optional: true,
						Computed: true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(1, 256),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "An array of key-value pairs to apply to this resource",
			Optional:    true,
			Computed:    true,
			Validators: []validator.List{ /*START VALIDATORS*/
				listvalidator.SizeBetween(0, 50),
				listvalidator.UniqueValues(),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
				listplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	// Corresponds to CloudFormation primaryIdentifier.
	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Computed:    true,
		PlanModifiers: []planmodifier.String{
			stringplanmodifier.UseStateForUnknown(),
		},
	}

	schema := schema.Schema{
		Description: "Resource schema for AWS::Cassandra::Table",
		Version:     1,
		Attributes:  attributes,
	}

	var opts generic.ResourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::Cassandra::Table").WithTerraformTypeName("awscc_cassandra_table")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"auto_scaling_disabled":          "AutoScalingDisabled",
		"auto_scaling_specifications":    "AutoScalingSpecifications",
		"billing_mode":                   "BillingMode",
		"cdc_specification":              "CdcSpecification",
		"client_side_timestamps_enabled": "ClientSideTimestampsEnabled",
		"clustering_key_columns":         "ClusteringKeyColumns",
		"column":                         "Column",
		"column_name":                    "ColumnName",
		"column_type":                    "ColumnType",
		"default_time_to_live":           "DefaultTimeToLive",
		"disable_scale_in":               "DisableScaleIn",
		"encryption_specification":       "EncryptionSpecification",
		"encryption_type":                "EncryptionType",
		"key":                            "Key",
		"keyspace_name":                  "KeyspaceName",
		"kms_key_identifier":             "KmsKeyIdentifier",
		"maximum_units":                  "MaximumUnits",
		"minimum_units":                  "MinimumUnits",
		"mode":                           "Mode",
		"order_by":                       "OrderBy",
		"partition_key_columns":          "PartitionKeyColumns",
		"point_in_time_recovery_enabled": "PointInTimeRecoveryEnabled",
		"provisioned_throughput":         "ProvisionedThroughput",
		"read_capacity_auto_scaling":     "ReadCapacityAutoScaling",
		"read_capacity_units":            "ReadCapacityUnits",
		"region":                         "Region",
		"regular_columns":                "RegularColumns",
		"replica_specifications":         "ReplicaSpecifications",
		"scale_in_cooldown":              "ScaleInCooldown",
		"scale_out_cooldown":             "ScaleOutCooldown",
		"scaling_policy":                 "ScalingPolicy",
		"status":                         "Status",
		"table_name":                     "TableName",
		"tags":                           "Tags",
		"target_tracking_scaling_policy_configuration": "TargetTrackingScalingPolicyConfiguration",
		"target_value":                "TargetValue",
		"value":                       "Value",
		"view_type":                   "ViewType",
		"write_capacity_auto_scaling": "WriteCapacityAutoScaling",
		"write_capacity_units":        "WriteCapacityUnits",
	})

	opts = opts.WithWriteOnlyPropertyPaths([]string{
		"/properties/AutoScalingSpecifications",
		"/properties/ReplicaSpecifications",
	})
	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	v, err := generic.NewResource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
