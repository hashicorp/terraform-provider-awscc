// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package rds

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceTypeFactory("awscc_rds_global_cluster", globalClusterDataSourceType)
}

// globalClusterDataSourceType returns the Terraform awscc_rds_global_cluster data source type.
// This Terraform data source type corresponds to the CloudFormation AWS::RDS::GlobalCluster resource type.
func globalClusterDataSourceType(ctx context.Context) (tfsdk.DataSourceType, error) {
	attributes := map[string]tfsdk.Attribute{
		"deletion_protection": {
			// Property: DeletionProtection
			// CloudFormation resource type schema:
			// {
			//   "description": "The deletion protection setting for the new global database. The global database can't be deleted when deletion protection is enabled.",
			//   "type": "boolean"
			// }
			Description: "The deletion protection setting for the new global database. The global database can't be deleted when deletion protection is enabled.",
			Type:        types.BoolType,
			Computed:    true,
		},
		"engine": {
			// Property: Engine
			// CloudFormation resource type schema:
			// {
			//   "description": "The name of the database engine to be used for this DB cluster. Valid Values: aurora (for MySQL 5.6-compatible Aurora), aurora-mysql (for MySQL 5.7-compatible Aurora).\nIf you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster.",
			//   "enum": [
			//     "aurora",
			//     "aurora-mysql",
			//     "aurora-postgresql"
			//   ],
			//   "type": "string"
			// }
			Description: "The name of the database engine to be used for this DB cluster. Valid Values: aurora (for MySQL 5.6-compatible Aurora), aurora-mysql (for MySQL 5.7-compatible Aurora).\nIf you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster.",
			Type:        types.StringType,
			Computed:    true,
		},
		"engine_version": {
			// Property: EngineVersion
			// CloudFormation resource type schema:
			// {
			//   "description": "The version number of the database engine to use. If you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster.",
			//   "type": "string"
			// }
			Description: "The version number of the database engine to use. If you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster.",
			Type:        types.StringType,
			Computed:    true,
		},
		"global_cluster_identifier": {
			// Property: GlobalClusterIdentifier
			// CloudFormation resource type schema:
			// {
			//   "description": "The cluster identifier of the new global database cluster. This parameter is stored as a lowercase string.",
			//   "pattern": "",
			//   "type": "string"
			// }
			Description: "The cluster identifier of the new global database cluster. This parameter is stored as a lowercase string.",
			Type:        types.StringType,
			Computed:    true,
		},
		"source_db_cluster_identifier": {
			// Property: SourceDBClusterIdentifier
			// CloudFormation resource type schema:
			// {
			//   "description": "The Amazon Resource Name (ARN) to use as the primary cluster of the global database. This parameter is optional. This parameter is stored as a lowercase string.",
			//   "oneOf": [
			//     {},
			//     {}
			//   ],
			//   "type": "string"
			// }
			Description: "The Amazon Resource Name (ARN) to use as the primary cluster of the global database. This parameter is optional. This parameter is stored as a lowercase string.",
			Type:        types.StringType,
			Computed:    true,
		},
		"storage_encrypted": {
			// Property: StorageEncrypted
			// CloudFormation resource type schema:
			// {
			//   "description": " The storage encryption setting for the new global database cluster.\nIf you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster.",
			//   "type": "boolean"
			// }
			Description: " The storage encryption setting for the new global database cluster.\nIf you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster.",
			Type:        types.BoolType,
			Computed:    true,
		},
	}

	attributes["id"] = tfsdk.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Required:    true,
	}

	schema := tfsdk.Schema{
		Description: "Data Source schema for AWS::RDS::GlobalCluster",
		Version:     1,
		Attributes:  attributes,
	}

	var opts DataSourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::RDS::GlobalCluster").WithTerraformTypeName("awscc_rds_global_cluster")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"deletion_protection":          "DeletionProtection",
		"engine":                       "Engine",
		"engine_version":               "EngineVersion",
		"global_cluster_identifier":    "GlobalClusterIdentifier",
		"source_db_cluster_identifier": "SourceDBClusterIdentifier",
		"storage_encrypted":            "StorageEncrypted",
	})

	singularDataSourceType, err := NewSingularDataSourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "awscc_rds_global_cluster", "schema", hclog.Fmt("%v", schema))

	return singularDataSourceType, nil
}
