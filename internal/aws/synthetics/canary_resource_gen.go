// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/resource/main.go; DO NOT EDIT.

package synthetics

import (
	"context"
	"regexp"

	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/boolplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/listplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/mapplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/objectplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
	fwvalidators "github.com/hashicorp/terraform-provider-awscc/internal/validators"
)

func init() {
	registry.AddResourceFactory("awscc_synthetics_canary", canaryResource)
}

// canaryResource returns the Terraform awscc_synthetics_canary resource.
// This Terraform resource corresponds to the CloudFormation AWS::Synthetics::Canary resource.
func canaryResource(ctx context.Context) (resource.Resource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: ArtifactConfig
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Provide artifact configuration",
		//	  "properties": {
		//	    "S3Encryption": {
		//	      "additionalProperties": false,
		//	      "description": "Encryption configuration for uploading artifacts to S3",
		//	      "properties": {
		//	        "EncryptionMode": {
		//	          "description": "Encryption mode for encrypting artifacts when uploading to S3. Valid values: SSE_S3 and SSE_KMS.",
		//	          "type": "string"
		//	        },
		//	        "KmsKeyArn": {
		//	          "description": "KMS key Arn for encrypting artifacts when uploading to S3. You must specify KMS key Arn for SSE_KMS encryption mode only.",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "type": "object"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"artifact_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: S3Encryption
				"s3_encryption": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: EncryptionMode
						"encryption_mode": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "Encryption mode for encrypting artifacts when uploading to S3. Valid values: SSE_S3 and SSE_KMS.",
							Optional:    true,
							Computed:    true,
							PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
								stringplanmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
						// Property: KmsKeyArn
						"kms_key_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "KMS key Arn for encrypting artifacts when uploading to S3. You must specify KMS key Arn for SSE_KMS encryption mode only.",
							Optional:    true,
							Computed:    true,
							PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
								stringplanmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "Encryption configuration for uploading artifacts to S3",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
						objectplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Provide artifact configuration",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ArtifactS3Location
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Provide the s3 bucket output location for test results",
		//	  "pattern": "^(s3|S3)://",
		//	  "type": "string"
		//	}
		"artifact_s3_location": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Provide the s3 bucket output location for test results",
			Required:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.RegexMatches(regexp.MustCompile("^(s3|S3)://"), ""),
			}, /*END VALIDATORS*/
		}, /*END ATTRIBUTE*/
		// Property: Code
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Provide the canary script source",
		//	  "oneOf": [
		//	    {
		//	      "required": [
		//	        "S3Bucket",
		//	        "S3Key"
		//	      ]
		//	    },
		//	    {
		//	      "required": [
		//	        "Script"
		//	      ]
		//	    }
		//	  ],
		//	  "properties": {
		//	    "Handler": {
		//	      "type": "string"
		//	    },
		//	    "S3Bucket": {
		//	      "type": "string"
		//	    },
		//	    "S3Key": {
		//	      "type": "string"
		//	    },
		//	    "S3ObjectVersion": {
		//	      "type": "string"
		//	    },
		//	    "Script": {
		//	      "type": "string"
		//	    },
		//	    "SourceLocationArn": {
		//	      "type": "string"
		//	    }
		//	  },
		//	  "required": [
		//	    "Handler"
		//	  ],
		//	  "type": "object"
		//	}
		"code": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: Handler
				"handler": schema.StringAttribute{ /*START ATTRIBUTE*/
					Required: true,
				}, /*END ATTRIBUTE*/
				// Property: S3Bucket
				"s3_bucket": schema.StringAttribute{ /*START ATTRIBUTE*/
					Optional: true,
					Computed: true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
					// S3Bucket is a write-only property.
				}, /*END ATTRIBUTE*/
				// Property: S3Key
				"s3_key": schema.StringAttribute{ /*START ATTRIBUTE*/
					Optional: true,
					Computed: true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
					// S3Key is a write-only property.
				}, /*END ATTRIBUTE*/
				// Property: S3ObjectVersion
				"s3_object_version": schema.StringAttribute{ /*START ATTRIBUTE*/
					Optional: true,
					Computed: true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
					// S3ObjectVersion is a write-only property.
				}, /*END ATTRIBUTE*/
				// Property: Script
				"script": schema.StringAttribute{ /*START ATTRIBUTE*/
					Optional: true,
					Computed: true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
					// Script is a write-only property.
				}, /*END ATTRIBUTE*/
				// Property: SourceLocationArn
				"source_location_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
					Computed: true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Provide the canary script source",
			Required:    true,
		}, /*END ATTRIBUTE*/
		// Property: DeleteLambdaResourcesOnCanaryDeletion
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Deletes associated lambda resources created by Synthetics if set to True. Default is False",
		//	  "type": "boolean"
		//	}
		"delete_lambda_resources_on_canary_deletion": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "Deletes associated lambda resources created by Synthetics if set to True. Default is False",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
				boolplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
			// DeleteLambdaResourcesOnCanaryDeletion is a write-only property.
		}, /*END ATTRIBUTE*/
		// Property: ExecutionRoleArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Lambda Execution role used to run your canaries",
		//	  "type": "string"
		//	}
		"execution_role_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Lambda Execution role used to run your canaries",
			Required:    true,
		}, /*END ATTRIBUTE*/
		// Property: FailureRetentionPeriod
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Retention period of failed canary runs represented in number of days",
		//	  "type": "integer"
		//	}
		"failure_retention_period": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "Retention period of failed canary runs represented in number of days",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
				int64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Id
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Id of the canary",
		//	  "type": "string"
		//	}
		"canary_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Id of the canary",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Name
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Name of the canary.",
		//	  "pattern": "^[0-9a-z_\\-]{1,255}$",
		//	  "type": "string"
		//	}
		"name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Name of the canary.",
			Required:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.RegexMatches(regexp.MustCompile("^[0-9a-z_\\-]{1,255}$"), ""),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.RequiresReplace(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ProvisionedResourceCleanup
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Setting to control if provisioned resources created by Synthetics are deleted alongside the canary. Default is AUTOMATIC.",
		//	  "enum": [
		//	    "AUTOMATIC",
		//	    "OFF"
		//	  ],
		//	  "type": "string"
		//	}
		"provisioned_resource_cleanup": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Setting to control if provisioned resources created by Synthetics are deleted alongside the canary. Default is AUTOMATIC.",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.OneOf(
					"AUTOMATIC",
					"OFF",
				),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ResourcesToReplicateTags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "List of resources which canary tags should be replicated to.",
		//	  "items": {
		//	    "description": "Specifies which resources canary tags should be replicated to.",
		//	    "enum": [
		//	      "lambda-function"
		//	    ],
		//	    "type": "string"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"resources_to_replicate_tags": schema.ListAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "List of resources which canary tags should be replicated to.",
			Optional:    true,
			Computed:    true,
			Validators: []validator.List{ /*START VALIDATORS*/
				listvalidator.UniqueValues(),
				listvalidator.ValueStringsAre(
					stringvalidator.OneOf(
						"lambda-function",
					),
				),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
				listplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
			// ResourcesToReplicateTags is a write-only property.
		}, /*END ATTRIBUTE*/
		// Property: RunConfig
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Provide canary run configuration",
		//	  "properties": {
		//	    "ActiveTracing": {
		//	      "description": "Enable active tracing if set to true",
		//	      "type": "boolean"
		//	    },
		//	    "EnvironmentVariables": {
		//	      "additionalProperties": false,
		//	      "description": "Environment variable key-value pairs.",
		//	      "patternProperties": {
		//	        "": {
		//	          "type": "string"
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "MemoryInMB": {
		//	      "description": "Provide maximum memory available for canary in MB",
		//	      "type": "integer"
		//	    },
		//	    "TimeoutInSeconds": {
		//	      "description": "Provide maximum canary timeout per run in seconds",
		//	      "type": "integer"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"run_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: ActiveTracing
				"active_tracing": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "Enable active tracing if set to true",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
						boolplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: EnvironmentVariables
				"environment_variables": // Pattern: ""
				schema.MapAttribute{     /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Description: "Environment variable key-value pairs.",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Map{ /*START PLAN MODIFIERS*/
						mapplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
					// EnvironmentVariables is a write-only property.
				}, /*END ATTRIBUTE*/
				// Property: MemoryInMB
				"memory_in_mb": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "Provide maximum memory available for canary in MB",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
						int64planmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: TimeoutInSeconds
				"timeout_in_seconds": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "Provide maximum canary timeout per run in seconds",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
						int64planmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Provide canary run configuration",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: RuntimeVersion
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Runtime version of Synthetics Library",
		//	  "type": "string"
		//	}
		"runtime_version": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Runtime version of Synthetics Library",
			Required:    true,
		}, /*END ATTRIBUTE*/
		// Property: Schedule
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Frequency to run your canaries",
		//	  "properties": {
		//	    "DurationInSeconds": {
		//	      "type": "string"
		//	    },
		//	    "Expression": {
		//	      "type": "string"
		//	    }
		//	  },
		//	  "required": [
		//	    "Expression"
		//	  ],
		//	  "type": "object"
		//	}
		"schedule": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: DurationInSeconds
				"duration_in_seconds": schema.StringAttribute{ /*START ATTRIBUTE*/
					Optional: true,
					Computed: true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: Expression
				"expression": schema.StringAttribute{ /*START ATTRIBUTE*/
					Required: true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Frequency to run your canaries",
			Required:    true,
		}, /*END ATTRIBUTE*/
		// Property: StartCanaryAfterCreation
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Runs canary if set to True. Default is False",
		//	  "type": "boolean"
		//	}
		"start_canary_after_creation": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "Runs canary if set to True. Default is False",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
				boolplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
			// StartCanaryAfterCreation is a write-only property.
		}, /*END ATTRIBUTE*/
		// Property: State
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "State of the canary",
		//	  "type": "string"
		//	}
		"state": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "State of the canary",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: SuccessRetentionPeriod
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Retention period of successful canary runs represented in number of days",
		//	  "type": "integer"
		//	}
		"success_retention_period": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "Retention period of successful canary runs represented in number of days",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
				int64planmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "A key-value pair to associate with a resource.",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
		//	        "maxLength": 256,
		//	        "minLength": 0,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Value",
		//	      "Key"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": false
		//	}
		"tags": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(1, 128),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(0, 256),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Optional: true,
			Computed: true,
			PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
				listplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: VPCConfig
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Provide VPC Configuration if enabled.",
		//	  "properties": {
		//	    "SecurityGroupIds": {
		//	      "items": {
		//	        "type": "string"
		//	      },
		//	      "type": "array"
		//	    },
		//	    "SubnetIds": {
		//	      "items": {
		//	        "type": "string"
		//	      },
		//	      "type": "array"
		//	    },
		//	    "VpcId": {
		//	      "type": "string"
		//	    }
		//	  },
		//	  "required": [
		//	    "SubnetIds",
		//	    "SecurityGroupIds"
		//	  ],
		//	  "type": "object"
		//	}
		"vpc_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: SecurityGroupIds
				"security_group_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Optional:    true,
					Computed:    true,
					Validators: []validator.List{ /*START VALIDATORS*/
						fwvalidators.NotNullList(),
					}, /*END VALIDATORS*/
					PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
						listplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: SubnetIds
				"subnet_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Optional:    true,
					Computed:    true,
					Validators: []validator.List{ /*START VALIDATORS*/
						fwvalidators.NotNullList(),
					}, /*END VALIDATORS*/
					PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
						listplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: VpcId
				"vpc_id": schema.StringAttribute{ /*START ATTRIBUTE*/
					Optional: true,
					Computed: true,
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Provide VPC Configuration if enabled.",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: VisualReference
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Visual reference configuration for visual testing",
		//	  "properties": {
		//	    "BaseCanaryRunId": {
		//	      "description": "Canary run id to be used as base reference for visual testing",
		//	      "type": "string"
		//	    },
		//	    "BaseScreenshots": {
		//	      "description": "List of screenshots used as base reference for visual testing",
		//	      "items": {
		//	        "properties": {
		//	          "IgnoreCoordinates": {
		//	            "description": "List of coordinates of rectangles to be ignored during visual testing",
		//	            "items": {
		//	              "description": "Coordinates of a rectangle to be ignored during visual testing",
		//	              "type": "string"
		//	            },
		//	            "type": "array"
		//	          },
		//	          "ScreenshotName": {
		//	            "description": "Name of the screenshot to be used as base reference for visual testing",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "ScreenshotName"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "type": "array"
		//	    }
		//	  },
		//	  "required": [
		//	    "BaseCanaryRunId"
		//	  ],
		//	  "type": "object"
		//	}
		"visual_reference": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: BaseCanaryRunId
				"base_canary_run_id": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "Canary run id to be used as base reference for visual testing",
					Optional:    true,
					Computed:    true,
					Validators: []validator.String{ /*START VALIDATORS*/
						fwvalidators.NotNullString(),
					}, /*END VALIDATORS*/
					PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
						stringplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: BaseScreenshots
				"base_screenshots": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: IgnoreCoordinates
							"ignore_coordinates": schema.ListAttribute{ /*START ATTRIBUTE*/
								ElementType: types.StringType,
								Description: "List of coordinates of rectangles to be ignored during visual testing",
								Optional:    true,
								Computed:    true,
								PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
									listplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
							// Property: ScreenshotName
							"screenshot_name": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Name of the screenshot to be used as base reference for visual testing",
								Optional:    true,
								Computed:    true,
								Validators: []validator.String{ /*START VALIDATORS*/
									fwvalidators.NotNullString(),
								}, /*END VALIDATORS*/
								PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
									stringplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "List of screenshots used as base reference for visual testing",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
						listplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Visual reference configuration for visual testing",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
			// VisualReference is a write-only property.
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	// Corresponds to CloudFormation primaryIdentifier.
	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Computed:    true,
		PlanModifiers: []planmodifier.String{
			stringplanmodifier.UseStateForUnknown(),
		},
	}

	schema := schema.Schema{
		Description: "Resource Type definition for AWS::Synthetics::Canary",
		Version:     1,
		Attributes:  attributes,
	}

	var opts generic.ResourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::Synthetics::Canary").WithTerraformTypeName("awscc_synthetics_canary")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"active_tracing":       "ActiveTracing",
		"artifact_config":      "ArtifactConfig",
		"artifact_s3_location": "ArtifactS3Location",
		"base_canary_run_id":   "BaseCanaryRunId",
		"base_screenshots":     "BaseScreenshots",
		"canary_id":            "Id",
		"code":                 "Code",
		"delete_lambda_resources_on_canary_deletion": "DeleteLambdaResourcesOnCanaryDeletion",
		"duration_in_seconds":                        "DurationInSeconds",
		"encryption_mode":                            "EncryptionMode",
		"environment_variables":                      "EnvironmentVariables",
		"execution_role_arn":                         "ExecutionRoleArn",
		"expression":                                 "Expression",
		"failure_retention_period":                   "FailureRetentionPeriod",
		"handler":                                    "Handler",
		"ignore_coordinates":                         "IgnoreCoordinates",
		"key":                                        "Key",
		"kms_key_arn":                                "KmsKeyArn",
		"memory_in_mb":                               "MemoryInMB",
		"name":                                       "Name",
		"provisioned_resource_cleanup":               "ProvisionedResourceCleanup",
		"resources_to_replicate_tags":                "ResourcesToReplicateTags",
		"run_config":                                 "RunConfig",
		"runtime_version":                            "RuntimeVersion",
		"s3_bucket":                                  "S3Bucket",
		"s3_encryption":                              "S3Encryption",
		"s3_key":                                     "S3Key",
		"s3_object_version":                          "S3ObjectVersion",
		"schedule":                                   "Schedule",
		"screenshot_name":                            "ScreenshotName",
		"script":                                     "Script",
		"security_group_ids":                         "SecurityGroupIds",
		"source_location_arn":                        "SourceLocationArn",
		"start_canary_after_creation":                "StartCanaryAfterCreation",
		"state":                                      "State",
		"subnet_ids":                                 "SubnetIds",
		"success_retention_period":                   "SuccessRetentionPeriod",
		"tags":                                       "Tags",
		"timeout_in_seconds":                         "TimeoutInSeconds",
		"value":                                      "Value",
		"visual_reference":                           "VisualReference",
		"vpc_config":                                 "VPCConfig",
		"vpc_id":                                     "VpcId",
	})

	opts = opts.WithWriteOnlyPropertyPaths([]string{
		"/properties/Code/S3Bucket",
		"/properties/Code/S3Key",
		"/properties/Code/S3ObjectVersion",
		"/properties/Code/Script",
		"/properties/DeleteLambdaResourcesOnCanaryDeletion",
		"/properties/StartCanaryAfterCreation",
		"/properties/ResourcesToReplicateTags",
		"/properties/RunConfig/EnvironmentVariables",
		"/properties/VisualReference",
	})
	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	v, err := generic.NewResource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
