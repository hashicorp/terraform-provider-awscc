// Code generated by generators/resource/main.go; DO NOT EDIT.

package ec2

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"

	"github.com/hashicorp/terraform-provider-awscc/internal/validate"
)

func init() {
	registry.AddResourceTypeFactory("awscc_ec2_spot_fleet", spotFleetResourceType)
}

// spotFleetResourceType returns the Terraform awscc_ec2_spot_fleet resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::EC2::SpotFleet resource type.
func spotFleetResourceType(ctx context.Context) (tfsdk.ResourceType, error) {
	attributes := map[string]tfsdk.Attribute{
		"id": {
			// Property: Id
			// CloudFormation resource type schema:
			// {
			//   "type": "string"
			// }
			Type:     types.StringType,
			Computed: true,
		},
		"spot_fleet_request_config_data": {
			// Property: SpotFleetRequestConfigData
			// CloudFormation resource type schema:
			// {
			//   "additionalProperties": false,
			//   "properties": {
			//     "AllocationStrategy": {
			//       "enum": [
			//         "capacityOptimized",
			//         "capacityOptimizedPrioritized",
			//         "diversified",
			//         "lowestPrice"
			//       ],
			//       "type": "string"
			//     },
			//     "Context": {
			//       "type": "string"
			//     },
			//     "ExcessCapacityTerminationPolicy": {
			//       "enum": [
			//         "Default",
			//         "NoTermination",
			//         "default",
			//         "noTermination"
			//       ],
			//       "type": "string"
			//     },
			//     "IamFleetRole": {
			//       "type": "string"
			//     },
			//     "InstanceInterruptionBehavior": {
			//       "enum": [
			//         "hibernate",
			//         "stop",
			//         "terminate"
			//       ],
			//       "type": "string"
			//     },
			//     "InstancePoolsToUseCount": {
			//       "type": "integer"
			//     },
			//     "LaunchSpecifications": {
			//       "items": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "BlockDeviceMappings": {
			//             "items": {
			//               "additionalProperties": false,
			//               "properties": {
			//                 "DeviceName": {
			//                   "type": "string"
			//                 },
			//                 "Ebs": {
			//                   "additionalProperties": false,
			//                   "properties": {
			//                     "DeleteOnTermination": {
			//                       "type": "boolean"
			//                     },
			//                     "Encrypted": {
			//                       "type": "boolean"
			//                     },
			//                     "Iops": {
			//                       "type": "integer"
			//                     },
			//                     "SnapshotId": {
			//                       "type": "string"
			//                     },
			//                     "VolumeSize": {
			//                       "type": "integer"
			//                     },
			//                     "VolumeType": {
			//                       "enum": [
			//                         "gp2",
			//                         "gp3",
			//                         "io1",
			//                         "io2",
			//                         "sc1",
			//                         "st1",
			//                         "standard"
			//                       ],
			//                       "type": "string"
			//                     }
			//                   },
			//                   "type": "object"
			//                 },
			//                 "NoDevice": {
			//                   "type": "string"
			//                 },
			//                 "VirtualName": {
			//                   "type": "string"
			//                 }
			//               },
			//               "required": [
			//                 "DeviceName"
			//               ],
			//               "type": "object"
			//             },
			//             "type": "array",
			//             "uniqueItems": true
			//           },
			//           "EbsOptimized": {
			//             "type": "boolean"
			//           },
			//           "IamInstanceProfile": {
			//             "additionalProperties": false,
			//             "properties": {
			//               "Arn": {
			//                 "type": "string"
			//               }
			//             },
			//             "type": "object"
			//           },
			//           "ImageId": {
			//             "type": "string"
			//           },
			//           "InstanceType": {
			//             "type": "string"
			//           },
			//           "KernelId": {
			//             "type": "string"
			//           },
			//           "KeyName": {
			//             "type": "string"
			//           },
			//           "Monitoring": {
			//             "additionalProperties": false,
			//             "properties": {
			//               "Enabled": {
			//                 "type": "boolean"
			//               }
			//             },
			//             "type": "object"
			//           },
			//           "NetworkInterfaces": {
			//             "items": {
			//               "additionalProperties": false,
			//               "properties": {
			//                 "AssociatePublicIpAddress": {
			//                   "type": "boolean"
			//                 },
			//                 "DeleteOnTermination": {
			//                   "type": "boolean"
			//                 },
			//                 "Description": {
			//                   "type": "string"
			//                 },
			//                 "DeviceIndex": {
			//                   "type": "integer"
			//                 },
			//                 "Groups": {
			//                   "items": {
			//                     "type": "string"
			//                   },
			//                   "type": "array",
			//                   "uniqueItems": true
			//                 },
			//                 "Ipv6AddressCount": {
			//                   "type": "integer"
			//                 },
			//                 "Ipv6Addresses": {
			//                   "items": {
			//                     "additionalProperties": false,
			//                     "properties": {
			//                       "Ipv6Address": {
			//                         "type": "string"
			//                       }
			//                     },
			//                     "required": [
			//                       "Ipv6Address"
			//                     ],
			//                     "type": "object"
			//                   },
			//                   "type": "array",
			//                   "uniqueItems": true
			//                 },
			//                 "NetworkInterfaceId": {
			//                   "type": "string"
			//                 },
			//                 "PrivateIpAddresses": {
			//                   "items": {
			//                     "additionalProperties": false,
			//                     "properties": {
			//                       "Primary": {
			//                         "type": "boolean"
			//                       },
			//                       "PrivateIpAddress": {
			//                         "type": "string"
			//                       }
			//                     },
			//                     "required": [
			//                       "PrivateIpAddress"
			//                     ],
			//                     "type": "object"
			//                   },
			//                   "type": "array",
			//                   "uniqueItems": true
			//                 },
			//                 "SecondaryPrivateIpAddressCount": {
			//                   "type": "integer"
			//                 },
			//                 "SubnetId": {
			//                   "type": "string"
			//                 }
			//               },
			//               "type": "object"
			//             },
			//             "type": "array",
			//             "uniqueItems": true
			//           },
			//           "Placement": {
			//             "additionalProperties": false,
			//             "properties": {
			//               "AvailabilityZone": {
			//                 "type": "string"
			//               },
			//               "GroupName": {
			//                 "type": "string"
			//               },
			//               "Tenancy": {
			//                 "enum": [
			//                   "dedicated",
			//                   "default",
			//                   "host"
			//                 ],
			//                 "type": "string"
			//               }
			//             },
			//             "type": "object"
			//           },
			//           "RamdiskId": {
			//             "type": "string"
			//           },
			//           "SecurityGroups": {
			//             "items": {
			//               "additionalProperties": false,
			//               "properties": {
			//                 "GroupId": {
			//                   "type": "string"
			//                 }
			//               },
			//               "required": [
			//                 "GroupId"
			//               ],
			//               "type": "object"
			//             },
			//             "type": "array",
			//             "uniqueItems": true
			//           },
			//           "SpotPrice": {
			//             "type": "string"
			//           },
			//           "SubnetId": {
			//             "type": "string"
			//           },
			//           "TagSpecifications": {
			//             "items": {
			//               "additionalProperties": false,
			//               "properties": {
			//                 "ResourceType": {
			//                   "enum": [
			//                     "client-vpn-endpoint",
			//                     "customer-gateway",
			//                     "dedicated-host",
			//                     "dhcp-options",
			//                     "egress-only-internet-gateway",
			//                     "elastic-gpu",
			//                     "elastic-ip",
			//                     "export-image-task",
			//                     "export-instance-task",
			//                     "fleet",
			//                     "fpga-image",
			//                     "host-reservation",
			//                     "image",
			//                     "import-image-task",
			//                     "import-snapshot-task",
			//                     "instance",
			//                     "internet-gateway",
			//                     "key-pair",
			//                     "launch-template",
			//                     "local-gateway-route-table-vpc-association",
			//                     "natgateway",
			//                     "network-acl",
			//                     "network-insights-analysis",
			//                     "network-insights-path",
			//                     "network-interface",
			//                     "placement-group",
			//                     "reserved-instances",
			//                     "route-table",
			//                     "security-group",
			//                     "snapshot",
			//                     "spot-fleet-request",
			//                     "spot-instances-request",
			//                     "subnet",
			//                     "traffic-mirror-filter",
			//                     "traffic-mirror-session",
			//                     "traffic-mirror-target",
			//                     "transit-gateway",
			//                     "transit-gateway-attachment",
			//                     "transit-gateway-connect-peer",
			//                     "transit-gateway-multicast-domain",
			//                     "transit-gateway-route-table",
			//                     "volume",
			//                     "vpc",
			//                     "vpc-flow-log",
			//                     "vpc-peering-connection",
			//                     "vpn-connection",
			//                     "vpn-gateway"
			//                   ],
			//                   "type": "string"
			//                 },
			//                 "Tags": {
			//                   "items": {
			//                     "additionalProperties": false,
			//                     "properties": {
			//                       "Key": {
			//                         "type": "string"
			//                       },
			//                       "Value": {
			//                         "type": "string"
			//                       }
			//                     },
			//                     "required": [
			//                       "Value",
			//                       "Key"
			//                     ],
			//                     "type": "object"
			//                   },
			//                   "type": "array",
			//                   "uniqueItems": false
			//                 }
			//               },
			//               "type": "object"
			//             },
			//             "type": "array",
			//             "uniqueItems": true
			//           },
			//           "UserData": {
			//             "type": "string"
			//           },
			//           "WeightedCapacity": {
			//             "type": "number"
			//           }
			//         },
			//         "required": [
			//           "ImageId",
			//           "InstanceType"
			//         ],
			//         "type": "object"
			//       },
			//       "type": "array",
			//       "uniqueItems": true
			//     },
			//     "LaunchTemplateConfigs": {
			//       "items": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "LaunchTemplateSpecification": {
			//             "additionalProperties": false,
			//             "properties": {
			//               "LaunchTemplateId": {
			//                 "type": "string"
			//               },
			//               "LaunchTemplateName": {
			//                 "maxLength": 128,
			//                 "minLength": 3,
			//                 "pattern": "",
			//                 "type": "string"
			//               },
			//               "Version": {
			//                 "type": "string"
			//               }
			//             },
			//             "required": [
			//               "Version"
			//             ],
			//             "type": "object"
			//           },
			//           "Overrides": {
			//             "items": {
			//               "additionalProperties": false,
			//               "properties": {
			//                 "AvailabilityZone": {
			//                   "type": "string"
			//                 },
			//                 "InstanceType": {
			//                   "type": "string"
			//                 },
			//                 "SpotPrice": {
			//                   "type": "string"
			//                 },
			//                 "SubnetId": {
			//                   "type": "string"
			//                 },
			//                 "WeightedCapacity": {
			//                   "type": "number"
			//                 }
			//               },
			//               "type": "object"
			//             },
			//             "type": "array",
			//             "uniqueItems": true
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "type": "array",
			//       "uniqueItems": true
			//     },
			//     "LoadBalancersConfig": {
			//       "additionalProperties": false,
			//       "properties": {
			//         "ClassicLoadBalancersConfig": {
			//           "additionalProperties": false,
			//           "properties": {
			//             "ClassicLoadBalancers": {
			//               "items": {
			//                 "additionalProperties": false,
			//                 "properties": {
			//                   "Name": {
			//                     "type": "string"
			//                   }
			//                 },
			//                 "required": [
			//                   "Name"
			//                 ],
			//                 "type": "object"
			//               },
			//               "type": "array",
			//               "uniqueItems": true
			//             }
			//           },
			//           "required": [
			//             "ClassicLoadBalancers"
			//           ],
			//           "type": "object"
			//         },
			//         "TargetGroupsConfig": {
			//           "additionalProperties": false,
			//           "properties": {
			//             "TargetGroups": {
			//               "items": {
			//                 "additionalProperties": false,
			//                 "properties": {
			//                   "Arn": {
			//                     "type": "string"
			//                   }
			//                 },
			//                 "required": [
			//                   "Arn"
			//                 ],
			//                 "type": "object"
			//               },
			//               "type": "array",
			//               "uniqueItems": true
			//             }
			//           },
			//           "required": [
			//             "TargetGroups"
			//           ],
			//           "type": "object"
			//         }
			//       },
			//       "type": "object"
			//     },
			//     "OnDemandAllocationStrategy": {
			//       "type": "string"
			//     },
			//     "OnDemandMaxTotalPrice": {
			//       "type": "string"
			//     },
			//     "OnDemandTargetCapacity": {
			//       "type": "integer"
			//     },
			//     "ReplaceUnhealthyInstances": {
			//       "type": "boolean"
			//     },
			//     "SpotMaintenanceStrategies": {
			//       "additionalProperties": false,
			//       "properties": {
			//         "CapacityRebalance": {
			//           "additionalProperties": false,
			//           "properties": {
			//             "ReplacementStrategy": {
			//               "enum": [
			//                 "launch"
			//               ],
			//               "type": "string"
			//             }
			//           },
			//           "type": "object"
			//         }
			//       },
			//       "type": "object"
			//     },
			//     "SpotMaxTotalPrice": {
			//       "type": "string"
			//     },
			//     "SpotPrice": {
			//       "type": "string"
			//     },
			//     "TargetCapacity": {
			//       "type": "integer"
			//     },
			//     "TerminateInstancesWithExpiration": {
			//       "type": "boolean"
			//     },
			//     "Type": {
			//       "enum": [
			//         "maintain",
			//         "request"
			//       ],
			//       "type": "string"
			//     },
			//     "ValidFrom": {
			//       "type": "string"
			//     },
			//     "ValidUntil": {
			//       "type": "string"
			//     }
			//   },
			//   "required": [
			//     "IamFleetRole",
			//     "TargetCapacity"
			//   ],
			//   "type": "object"
			// }
			Attributes: tfsdk.SingleNestedAttributes(
				map[string]tfsdk.Attribute{
					"allocation_strategy": {
						// Property: AllocationStrategy
						Type:     types.StringType,
						Optional: true,
						Computed: true,
						Validators: []tfsdk.AttributeValidator{
							validate.StringInSlice([]string{
								"capacityOptimized",
								"capacityOptimizedPrioritized",
								"diversified",
								"lowestPrice",
							}),
						},
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // AllocationStrategy is a force-new property.
						},
					},
					"context": {
						// Property: Context
						Type:     types.StringType,
						Optional: true,
					},
					"excess_capacity_termination_policy": {
						// Property: ExcessCapacityTerminationPolicy
						Type:     types.StringType,
						Optional: true,
						Validators: []tfsdk.AttributeValidator{
							validate.StringInSlice([]string{
								"Default",
								"NoTermination",
								"default",
								"noTermination",
							}),
						},
					},
					"iam_fleet_role": {
						// Property: IamFleetRole
						Type:     types.StringType,
						Required: true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // IamFleetRole is a force-new property.
						},
					},
					"instance_interruption_behavior": {
						// Property: InstanceInterruptionBehavior
						Type:     types.StringType,
						Optional: true,
						Computed: true,
						Validators: []tfsdk.AttributeValidator{
							validate.StringInSlice([]string{
								"hibernate",
								"stop",
								"terminate",
							}),
						},
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // InstanceInterruptionBehavior is a force-new property.
						},
					},
					"instance_pools_to_use_count": {
						// Property: InstancePoolsToUseCount
						Type:     types.NumberType,
						Optional: true,
						Computed: true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // InstancePoolsToUseCount is a force-new property.
						},
					},
					"launch_specifications": {
						// Property: LaunchSpecifications
						Attributes: tfsdk.ListNestedAttributes(
							map[string]tfsdk.Attribute{
								"block_device_mappings": {
									// Property: BlockDeviceMappings
									Attributes: tfsdk.ListNestedAttributes(
										map[string]tfsdk.Attribute{
											"device_name": {
												// Property: DeviceName
												Type:     types.StringType,
												Required: true,
											},
											"ebs": {
												// Property: Ebs
												Attributes: tfsdk.SingleNestedAttributes(
													map[string]tfsdk.Attribute{
														"delete_on_termination": {
															// Property: DeleteOnTermination
															Type:     types.BoolType,
															Optional: true,
														},
														"encrypted": {
															// Property: Encrypted
															Type:     types.BoolType,
															Optional: true,
														},
														"iops": {
															// Property: Iops
															Type:     types.NumberType,
															Optional: true,
														},
														"snapshot_id": {
															// Property: SnapshotId
															Type:     types.StringType,
															Optional: true,
														},
														"volume_size": {
															// Property: VolumeSize
															Type:     types.NumberType,
															Optional: true,
														},
														"volume_type": {
															// Property: VolumeType
															Type:     types.StringType,
															Optional: true,
															Validators: []tfsdk.AttributeValidator{
																validate.StringInSlice([]string{
																	"gp2",
																	"gp3",
																	"io1",
																	"io2",
																	"sc1",
																	"st1",
																	"standard",
																}),
															},
														},
													},
												),
												Optional: true,
											},
											"no_device": {
												// Property: NoDevice
												Type:     types.StringType,
												Optional: true,
											},
											"virtual_name": {
												// Property: VirtualName
												Type:     types.StringType,
												Optional: true,
											},
										},
										tfsdk.ListNestedAttributesOptions{},
									),
									Optional: true,
									Validators: []tfsdk.AttributeValidator{
										validate.UniqueItems(),
									},
								},
								"ebs_optimized": {
									// Property: EbsOptimized
									Type:     types.BoolType,
									Optional: true,
								},
								"iam_instance_profile": {
									// Property: IamInstanceProfile
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"arn": {
												// Property: Arn
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"image_id": {
									// Property: ImageId
									Type:     types.StringType,
									Required: true,
								},
								"instance_type": {
									// Property: InstanceType
									Type:     types.StringType,
									Required: true,
								},
								"kernel_id": {
									// Property: KernelId
									Type:     types.StringType,
									Optional: true,
								},
								"key_name": {
									// Property: KeyName
									Type:     types.StringType,
									Optional: true,
								},
								"monitoring": {
									// Property: Monitoring
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"enabled": {
												// Property: Enabled
												Type:     types.BoolType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"network_interfaces": {
									// Property: NetworkInterfaces
									Attributes: tfsdk.ListNestedAttributes(
										map[string]tfsdk.Attribute{
											"associate_public_ip_address": {
												// Property: AssociatePublicIpAddress
												Type:     types.BoolType,
												Optional: true,
											},
											"delete_on_termination": {
												// Property: DeleteOnTermination
												Type:     types.BoolType,
												Optional: true,
											},
											"description": {
												// Property: Description
												Type:     types.StringType,
												Optional: true,
											},
											"device_index": {
												// Property: DeviceIndex
												Type:     types.NumberType,
												Optional: true,
											},
											"groups": {
												// Property: Groups
												Type:     types.ListType{ElemType: types.StringType},
												Optional: true,
												Validators: []tfsdk.AttributeValidator{
													validate.UniqueItems(),
												},
											},
											"ipv_6_address_count": {
												// Property: Ipv6AddressCount
												Type:     types.NumberType,
												Optional: true,
											},
											"ipv_6_addresses": {
												// Property: Ipv6Addresses
												Attributes: tfsdk.ListNestedAttributes(
													map[string]tfsdk.Attribute{
														"ipv_6_address": {
															// Property: Ipv6Address
															Type:     types.StringType,
															Required: true,
														},
													},
													tfsdk.ListNestedAttributesOptions{},
												),
												Optional: true,
												Validators: []tfsdk.AttributeValidator{
													validate.UniqueItems(),
												},
											},
											"network_interface_id": {
												// Property: NetworkInterfaceId
												Type:     types.StringType,
												Optional: true,
											},
											"private_ip_addresses": {
												// Property: PrivateIpAddresses
												Attributes: tfsdk.ListNestedAttributes(
													map[string]tfsdk.Attribute{
														"primary": {
															// Property: Primary
															Type:     types.BoolType,
															Optional: true,
														},
														"private_ip_address": {
															// Property: PrivateIpAddress
															Type:     types.StringType,
															Required: true,
														},
													},
													tfsdk.ListNestedAttributesOptions{},
												),
												Optional: true,
												Validators: []tfsdk.AttributeValidator{
													validate.UniqueItems(),
												},
											},
											"secondary_private_ip_address_count": {
												// Property: SecondaryPrivateIpAddressCount
												Type:     types.NumberType,
												Optional: true,
											},
											"subnet_id": {
												// Property: SubnetId
												Type:     types.StringType,
												Optional: true,
											},
										},
										tfsdk.ListNestedAttributesOptions{},
									),
									Optional: true,
									Validators: []tfsdk.AttributeValidator{
										validate.UniqueItems(),
									},
								},
								"placement": {
									// Property: Placement
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"availability_zone": {
												// Property: AvailabilityZone
												Type:     types.StringType,
												Optional: true,
											},
											"group_name": {
												// Property: GroupName
												Type:     types.StringType,
												Optional: true,
											},
											"tenancy": {
												// Property: Tenancy
												Type:     types.StringType,
												Optional: true,
												Validators: []tfsdk.AttributeValidator{
													validate.StringInSlice([]string{
														"dedicated",
														"default",
														"host",
													}),
												},
											},
										},
									),
									Optional: true,
								},
								"ramdisk_id": {
									// Property: RamdiskId
									Type:     types.StringType,
									Optional: true,
								},
								"security_groups": {
									// Property: SecurityGroups
									Attributes: tfsdk.ListNestedAttributes(
										map[string]tfsdk.Attribute{
											"group_id": {
												// Property: GroupId
												Type:     types.StringType,
												Required: true,
											},
										},
										tfsdk.ListNestedAttributesOptions{},
									),
									Optional: true,
									Validators: []tfsdk.AttributeValidator{
										validate.UniqueItems(),
									},
								},
								"spot_price": {
									// Property: SpotPrice
									Type:     types.StringType,
									Optional: true,
								},
								"subnet_id": {
									// Property: SubnetId
									Type:     types.StringType,
									Optional: true,
								},
								"tag_specifications": {
									// Property: TagSpecifications
									Attributes: tfsdk.ListNestedAttributes(
										map[string]tfsdk.Attribute{
											"resource_type": {
												// Property: ResourceType
												Type:     types.StringType,
												Optional: true,
												Validators: []tfsdk.AttributeValidator{
													validate.StringInSlice([]string{
														"client-vpn-endpoint",
														"customer-gateway",
														"dedicated-host",
														"dhcp-options",
														"egress-only-internet-gateway",
														"elastic-gpu",
														"elastic-ip",
														"export-image-task",
														"export-instance-task",
														"fleet",
														"fpga-image",
														"host-reservation",
														"image",
														"import-image-task",
														"import-snapshot-task",
														"instance",
														"internet-gateway",
														"key-pair",
														"launch-template",
														"local-gateway-route-table-vpc-association",
														"natgateway",
														"network-acl",
														"network-insights-analysis",
														"network-insights-path",
														"network-interface",
														"placement-group",
														"reserved-instances",
														"route-table",
														"security-group",
														"snapshot",
														"spot-fleet-request",
														"spot-instances-request",
														"subnet",
														"traffic-mirror-filter",
														"traffic-mirror-session",
														"traffic-mirror-target",
														"transit-gateway",
														"transit-gateway-attachment",
														"transit-gateway-connect-peer",
														"transit-gateway-multicast-domain",
														"transit-gateway-route-table",
														"volume",
														"vpc",
														"vpc-flow-log",
														"vpc-peering-connection",
														"vpn-connection",
														"vpn-gateway",
													}),
												},
											},
											"tags": {
												// Property: Tags
												Attributes: tfsdk.ListNestedAttributes(
													map[string]tfsdk.Attribute{
														"key": {
															// Property: Key
															Type:     types.StringType,
															Required: true,
														},
														"value": {
															// Property: Value
															Type:     types.StringType,
															Required: true,
														},
													},
													tfsdk.ListNestedAttributesOptions{},
												),
												Optional: true,
											},
										},
										tfsdk.ListNestedAttributesOptions{},
									),
									Optional: true,
									Validators: []tfsdk.AttributeValidator{
										validate.UniqueItems(),
									},
								},
								"user_data": {
									// Property: UserData
									Type:     types.StringType,
									Optional: true,
								},
								"weighted_capacity": {
									// Property: WeightedCapacity
									Type:     types.NumberType,
									Optional: true,
								},
							},
							tfsdk.ListNestedAttributesOptions{},
						),
						Optional: true,
						Computed: true,
						Validators: []tfsdk.AttributeValidator{
							validate.UniqueItems(),
						},
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // LaunchSpecifications is a force-new property.
						},
					},
					"launch_template_configs": {
						// Property: LaunchTemplateConfigs
						Attributes: tfsdk.ListNestedAttributes(
							map[string]tfsdk.Attribute{
								"launch_template_specification": {
									// Property: LaunchTemplateSpecification
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"launch_template_id": {
												// Property: LaunchTemplateId
												Type:     types.StringType,
												Optional: true,
											},
											"launch_template_name": {
												// Property: LaunchTemplateName
												Type:     types.StringType,
												Optional: true,
												Validators: []tfsdk.AttributeValidator{
													validate.StringLenBetween(3, 128),
												},
											},
											"version": {
												// Property: Version
												Type:     types.StringType,
												Required: true,
											},
										},
									),
									Optional: true,
								},
								"overrides": {
									// Property: Overrides
									Attributes: tfsdk.ListNestedAttributes(
										map[string]tfsdk.Attribute{
											"availability_zone": {
												// Property: AvailabilityZone
												Type:     types.StringType,
												Optional: true,
											},
											"instance_type": {
												// Property: InstanceType
												Type:     types.StringType,
												Optional: true,
											},
											"spot_price": {
												// Property: SpotPrice
												Type:     types.StringType,
												Optional: true,
											},
											"subnet_id": {
												// Property: SubnetId
												Type:     types.StringType,
												Optional: true,
											},
											"weighted_capacity": {
												// Property: WeightedCapacity
												Type:     types.NumberType,
												Optional: true,
											},
										},
										tfsdk.ListNestedAttributesOptions{},
									),
									Optional: true,
									Validators: []tfsdk.AttributeValidator{
										validate.UniqueItems(),
									},
								},
							},
							tfsdk.ListNestedAttributesOptions{},
						),
						Optional: true,
						Computed: true,
						Validators: []tfsdk.AttributeValidator{
							validate.UniqueItems(),
						},
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // LaunchTemplateConfigs is a force-new property.
						},
					},
					"load_balancers_config": {
						// Property: LoadBalancersConfig
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"classic_load_balancers_config": {
									// Property: ClassicLoadBalancersConfig
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"classic_load_balancers": {
												// Property: ClassicLoadBalancers
												Attributes: tfsdk.ListNestedAttributes(
													map[string]tfsdk.Attribute{
														"name": {
															// Property: Name
															Type:     types.StringType,
															Required: true,
														},
													},
													tfsdk.ListNestedAttributesOptions{},
												),
												Required: true,
												Validators: []tfsdk.AttributeValidator{
													validate.UniqueItems(),
												},
											},
										},
									),
									Optional: true,
								},
								"target_groups_config": {
									// Property: TargetGroupsConfig
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"target_groups": {
												// Property: TargetGroups
												Attributes: tfsdk.ListNestedAttributes(
													map[string]tfsdk.Attribute{
														"arn": {
															// Property: Arn
															Type:     types.StringType,
															Required: true,
														},
													},
													tfsdk.ListNestedAttributesOptions{},
												),
												Required: true,
												Validators: []tfsdk.AttributeValidator{
													validate.UniqueItems(),
												},
											},
										},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
						Computed: true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // LoadBalancersConfig is a force-new property.
						},
					},
					"on_demand_allocation_strategy": {
						// Property: OnDemandAllocationStrategy
						Type:     types.StringType,
						Optional: true,
						Computed: true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // OnDemandAllocationStrategy is a force-new property.
						},
					},
					"on_demand_max_total_price": {
						// Property: OnDemandMaxTotalPrice
						Type:     types.StringType,
						Optional: true,
						Computed: true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // OnDemandMaxTotalPrice is a force-new property.
						},
					},
					"on_demand_target_capacity": {
						// Property: OnDemandTargetCapacity
						Type:     types.NumberType,
						Optional: true,
						Computed: true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // OnDemandTargetCapacity is a force-new property.
						},
					},
					"replace_unhealthy_instances": {
						// Property: ReplaceUnhealthyInstances
						Type:     types.BoolType,
						Optional: true,
						Computed: true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // ReplaceUnhealthyInstances is a force-new property.
						},
					},
					"spot_maintenance_strategies": {
						// Property: SpotMaintenanceStrategies
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"capacity_rebalance": {
									// Property: CapacityRebalance
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"replacement_strategy": {
												// Property: ReplacementStrategy
												Type:     types.StringType,
												Optional: true,
												Validators: []tfsdk.AttributeValidator{
													validate.StringInSlice([]string{
														"launch",
													}),
												},
											},
										},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
						Computed: true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // SpotMaintenanceStrategies is a force-new property.
						},
					},
					"spot_max_total_price": {
						// Property: SpotMaxTotalPrice
						Type:     types.StringType,
						Optional: true,
						Computed: true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // SpotMaxTotalPrice is a force-new property.
						},
					},
					"spot_price": {
						// Property: SpotPrice
						Type:     types.StringType,
						Optional: true,
						Computed: true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // SpotPrice is a force-new property.
						},
					},
					"target_capacity": {
						// Property: TargetCapacity
						Type:     types.NumberType,
						Required: true,
					},
					"terminate_instances_with_expiration": {
						// Property: TerminateInstancesWithExpiration
						Type:     types.BoolType,
						Optional: true,
						Computed: true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // TerminateInstancesWithExpiration is a force-new property.
						},
					},
					"type": {
						// Property: Type
						Type:     types.StringType,
						Optional: true,
						Computed: true,
						Validators: []tfsdk.AttributeValidator{
							validate.StringInSlice([]string{
								"maintain",
								"request",
							}),
						},
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // Type is a force-new property.
						},
					},
					"valid_from": {
						// Property: ValidFrom
						Type:     types.StringType,
						Optional: true,
						Computed: true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // ValidFrom is a force-new property.
						},
					},
					"valid_until": {
						// Property: ValidUntil
						Type:     types.StringType,
						Optional: true,
						Computed: true,
						PlanModifiers: []tfsdk.AttributePlanModifier{
							tfsdk.RequiresReplace(), // ValidUntil is a force-new property.
						},
					},
				},
			),
			Required: true,
		},
	}

	schema := tfsdk.Schema{
		Description: "Resource Type definition for AWS::EC2::SpotFleet",
		Version:     1,
		Attributes:  attributes,
	}

	var opts ResourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::EC2::SpotFleet").WithTerraformTypeName("awscc_ec2_spot_fleet")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithSyntheticIDAttribute(false)
	opts = opts.WithAttributeNameMap(map[string]string{
		"allocation_strategy":                 "AllocationStrategy",
		"arn":                                 "Arn",
		"associate_public_ip_address":         "AssociatePublicIpAddress",
		"availability_zone":                   "AvailabilityZone",
		"block_device_mappings":               "BlockDeviceMappings",
		"capacity_rebalance":                  "CapacityRebalance",
		"classic_load_balancers":              "ClassicLoadBalancers",
		"classic_load_balancers_config":       "ClassicLoadBalancersConfig",
		"context":                             "Context",
		"delete_on_termination":               "DeleteOnTermination",
		"description":                         "Description",
		"device_index":                        "DeviceIndex",
		"device_name":                         "DeviceName",
		"ebs":                                 "Ebs",
		"ebs_optimized":                       "EbsOptimized",
		"enabled":                             "Enabled",
		"encrypted":                           "Encrypted",
		"excess_capacity_termination_policy":  "ExcessCapacityTerminationPolicy",
		"group_id":                            "GroupId",
		"group_name":                          "GroupName",
		"groups":                              "Groups",
		"iam_fleet_role":                      "IamFleetRole",
		"iam_instance_profile":                "IamInstanceProfile",
		"id":                                  "Id",
		"image_id":                            "ImageId",
		"instance_interruption_behavior":      "InstanceInterruptionBehavior",
		"instance_pools_to_use_count":         "InstancePoolsToUseCount",
		"instance_type":                       "InstanceType",
		"iops":                                "Iops",
		"ipv_6_address":                       "Ipv6Address",
		"ipv_6_address_count":                 "Ipv6AddressCount",
		"ipv_6_addresses":                     "Ipv6Addresses",
		"kernel_id":                           "KernelId",
		"key":                                 "Key",
		"key_name":                            "KeyName",
		"launch_specifications":               "LaunchSpecifications",
		"launch_template_configs":             "LaunchTemplateConfigs",
		"launch_template_id":                  "LaunchTemplateId",
		"launch_template_name":                "LaunchTemplateName",
		"launch_template_specification":       "LaunchTemplateSpecification",
		"load_balancers_config":               "LoadBalancersConfig",
		"monitoring":                          "Monitoring",
		"name":                                "Name",
		"network_interface_id":                "NetworkInterfaceId",
		"network_interfaces":                  "NetworkInterfaces",
		"no_device":                           "NoDevice",
		"on_demand_allocation_strategy":       "OnDemandAllocationStrategy",
		"on_demand_max_total_price":           "OnDemandMaxTotalPrice",
		"on_demand_target_capacity":           "OnDemandTargetCapacity",
		"overrides":                           "Overrides",
		"placement":                           "Placement",
		"primary":                             "Primary",
		"private_ip_address":                  "PrivateIpAddress",
		"private_ip_addresses":                "PrivateIpAddresses",
		"ramdisk_id":                          "RamdiskId",
		"replace_unhealthy_instances":         "ReplaceUnhealthyInstances",
		"replacement_strategy":                "ReplacementStrategy",
		"resource_type":                       "ResourceType",
		"secondary_private_ip_address_count":  "SecondaryPrivateIpAddressCount",
		"security_groups":                     "SecurityGroups",
		"snapshot_id":                         "SnapshotId",
		"spot_fleet_request_config_data":      "SpotFleetRequestConfigData",
		"spot_maintenance_strategies":         "SpotMaintenanceStrategies",
		"spot_max_total_price":                "SpotMaxTotalPrice",
		"spot_price":                          "SpotPrice",
		"subnet_id":                           "SubnetId",
		"tag_specifications":                  "TagSpecifications",
		"tags":                                "Tags",
		"target_capacity":                     "TargetCapacity",
		"target_groups":                       "TargetGroups",
		"target_groups_config":                "TargetGroupsConfig",
		"tenancy":                             "Tenancy",
		"terminate_instances_with_expiration": "TerminateInstancesWithExpiration",
		"type":                                "Type",
		"user_data":                           "UserData",
		"valid_from":                          "ValidFrom",
		"valid_until":                         "ValidUntil",
		"value":                               "Value",
		"version":                             "Version",
		"virtual_name":                        "VirtualName",
		"volume_size":                         "VolumeSize",
		"volume_type":                         "VolumeType",
		"weighted_capacity":                   "WeightedCapacity",
	})

	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	resourceType, err := NewResourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "awscc_ec2_spot_fleet", "schema", hclog.Fmt("%v", schema))

	return resourceType, nil
}
