// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package ec2

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_ec2_ipam", iPAMDataSource)
}

// iPAMDataSource returns the Terraform awscc_ec2_ipam data source.
// This Terraform data source corresponds to the CloudFormation AWS::EC2::IPAM resource.
func iPAMDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: Arn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Amazon Resource Name (ARN) of the IPAM.",
		//	  "type": "string"
		//	}
		"arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Amazon Resource Name (ARN) of the IPAM.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DefaultResourceDiscoveryAssociationId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Id of the default association to the default resource discovery, created with this IPAM.",
		//	  "type": "string"
		//	}
		"default_resource_discovery_association_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Id of the default association to the default resource discovery, created with this IPAM.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DefaultResourceDiscoveryId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Id of the default resource discovery, created with this IPAM.",
		//	  "type": "string"
		//	}
		"default_resource_discovery_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Id of the default resource discovery, created with this IPAM.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DefaultResourceDiscoveryOrganizationalUnitExclusions
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "A set of organizational unit (OU) exclusions for the default resource discovery, created with this IPAM.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "If your IPAM is integrated with AWS Organizations and you add an organizational unit (OU) exclusion, IPAM will not manage the IP addresses in accounts in that OU exclusion.",
		//	    "properties": {
		//	      "OrganizationsEntityPath": {
		//	        "description": "An AWS Organizations entity path. Build the path for the OU(s) using AWS Organizations IDs separated by a '/'. Include all child OUs by ending the path with '/*'.",
		//	        "minLength": 1,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "OrganizationsEntityPath"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"default_resource_discovery_organizational_unit_exclusions": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: OrganizationsEntityPath
					"organizations_entity_path": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "An AWS Organizations entity path. Build the path for the OU(s) using AWS Organizations IDs separated by a '/'. Include all child OUs by ending the path with '/*'.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "A set of organizational unit (OU) exclusions for the default resource discovery, created with this IPAM.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Description
		// CloudFormation resource type schema:
		//
		//	{
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: EnablePrivateGua
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Enable provisioning of GUA space in private pools.",
		//	  "type": "boolean"
		//	}
		"enable_private_gua": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "Enable provisioning of GUA space in private pools.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: IpamId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Id of the IPAM.",
		//	  "type": "string"
		//	}
		"ipam_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Id of the IPAM.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: MeteredAccount
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "A metered account is an account that is charged for active IP addresses managed in IPAM",
		//	  "enum": [
		//	    "ipam-owner",
		//	    "resource-owner"
		//	  ],
		//	  "type": "string"
		//	}
		"metered_account": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "A metered account is an account that is charged for active IP addresses managed in IPAM",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: OperatingRegions
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The regions IPAM is enabled for. Allows pools to be created in these regions, as well as enabling monitoring",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "The regions IPAM is enabled for. Allows pools to be created in these regions, as well as enabling monitoring",
		//	    "properties": {
		//	      "RegionName": {
		//	        "description": "The name of the region.",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "RegionName"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"operating_regions": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: RegionName
					"region_name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The name of the region.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "The regions IPAM is enabled for. Allows pools to be created in these regions, as well as enabling monitoring",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: PrivateDefaultScopeId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Id of the default scope for publicly routable IP space, created with this IPAM.",
		//	  "type": "string"
		//	}
		"private_default_scope_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Id of the default scope for publicly routable IP space, created with this IPAM.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: PublicDefaultScopeId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Id of the default scope for publicly routable IP space, created with this IPAM.",
		//	  "maxLength": 255,
		//	  "type": "string"
		//	}
		"public_default_scope_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Id of the default scope for publicly routable IP space, created with this IPAM.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ResourceDiscoveryAssociationCount
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The count of resource discoveries associated with this IPAM.",
		//	  "type": "integer"
		//	}
		"resource_discovery_association_count": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The count of resource discoveries associated with this IPAM.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ScopeCount
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The number of scopes that currently exist in this IPAM.",
		//	  "type": "integer"
		//	}
		"scope_count": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The number of scopes that currently exist in this IPAM.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "An array of key-value pairs to apply to this resource.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "A key-value pair to associate with a resource.",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
		//	        "maxLength": 256,
		//	        "minLength": 0,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "An array of key-value pairs to apply to this resource.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tier
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The tier of the IPAM.",
		//	  "enum": [
		//	    "free",
		//	    "advanced"
		//	  ],
		//	  "type": "string"
		//	}
		"tier": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The tier of the IPAM.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::EC2::IPAM",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::EC2::IPAM").WithTerraformTypeName("awscc_ec2_ipam")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"arn": "Arn",
		"default_resource_discovery_association_id":                 "DefaultResourceDiscoveryAssociationId",
		"default_resource_discovery_id":                             "DefaultResourceDiscoveryId",
		"default_resource_discovery_organizational_unit_exclusions": "DefaultResourceDiscoveryOrganizationalUnitExclusions",
		"description":                          "Description",
		"enable_private_gua":                   "EnablePrivateGua",
		"ipam_id":                              "IpamId",
		"key":                                  "Key",
		"metered_account":                      "MeteredAccount",
		"operating_regions":                    "OperatingRegions",
		"organizations_entity_path":            "OrganizationsEntityPath",
		"private_default_scope_id":             "PrivateDefaultScopeId",
		"public_default_scope_id":              "PublicDefaultScopeId",
		"region_name":                          "RegionName",
		"resource_discovery_association_count": "ResourceDiscoveryAssociationCount",
		"scope_count":                          "ScopeCount",
		"tags":                                 "Tags",
		"tier":                                 "Tier",
		"value":                                "Value",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
