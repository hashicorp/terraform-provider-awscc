// Code generated by generators/resource/main.go; DO NOT EDIT.

package ec2

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddResourceTypeFactory("awscc_ec2_network_insights_analysis", networkInsightsAnalysisResourceType)
}

// networkInsightsAnalysisResourceType returns the Terraform awscc_ec2_network_insights_analysis resource type.
// This Terraform resource type corresponds to the CloudFormation AWS::EC2::NetworkInsightsAnalysis resource type.
func networkInsightsAnalysisResourceType(ctx context.Context) (tfsdk.ResourceType, error) {
	attributes := map[string]tfsdk.Attribute{
		"alternate_path_hints": {
			// Property: AlternatePathHints
			// CloudFormation resource type schema:
			// {
			//   "items": {
			//     "additionalProperties": false,
			//     "properties": {
			//       "ComponentArn": {
			//         "type": "string"
			//       },
			//       "ComponentId": {
			//         "type": "string"
			//       }
			//     },
			//     "type": "object"
			//   },
			//   "type": "array"
			// }
			Attributes: tfsdk.ListNestedAttributes(
				map[string]tfsdk.Attribute{
					"component_arn": {
						// Property: ComponentArn
						Type:     types.StringType,
						Optional: true,
					},
					"component_id": {
						// Property: ComponentId
						Type:     types.StringType,
						Optional: true,
					},
				},
				tfsdk.ListNestedAttributesOptions{},
			),
			Computed: true,
		},
		"explanations": {
			// Property: Explanations
			// CloudFormation resource type schema:
			// {
			//   "items": {
			//     "additionalProperties": false,
			//     "properties": {
			//       "Acl": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "AclRule": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Cidr": {
			//             "type": "string"
			//           },
			//           "Egress": {
			//             "type": "boolean"
			//           },
			//           "PortRange": {
			//             "additionalProperties": false,
			//             "properties": {
			//               "From": {
			//                 "type": "integer"
			//               },
			//               "To": {
			//                 "type": "integer"
			//               }
			//             },
			//             "type": "object"
			//           },
			//           "Protocol": {
			//             "type": "string"
			//           },
			//           "RuleAction": {
			//             "type": "string"
			//           },
			//           "RuleNumber": {
			//             "type": "integer"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "Address": {
			//         "type": "string"
			//       },
			//       "Addresses": {
			//         "items": {
			//           "type": "string"
			//         },
			//         "type": "array"
			//       },
			//       "AttachedTo": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "AvailabilityZones": {
			//         "items": {
			//           "type": "string"
			//         },
			//         "type": "array"
			//       },
			//       "Cidrs": {
			//         "items": {
			//           "type": "string"
			//         },
			//         "type": "array"
			//       },
			//       "ClassicLoadBalancerListener": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "InstancePort": {
			//             "type": "integer"
			//           },
			//           "LoadBalancerPort": {
			//             "type": "integer"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "Component": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "CustomerGateway": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "Destination": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "DestinationVpc": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "Direction": {
			//         "type": "string"
			//       },
			//       "ElasticLoadBalancerListener": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "ExplanationCode": {
			//         "type": "string"
			//       },
			//       "IngressRouteTable": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "InternetGateway": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "LoadBalancerArn": {
			//         "type": "string"
			//       },
			//       "LoadBalancerListenerPort": {
			//         "type": "integer"
			//       },
			//       "LoadBalancerTarget": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Address": {
			//             "type": "string"
			//           },
			//           "AvailabilityZone": {
			//             "type": "string"
			//           },
			//           "Instance": {
			//             "additionalProperties": false,
			//             "properties": {
			//               "Arn": {
			//                 "type": "string"
			//               },
			//               "Id": {
			//                 "type": "string"
			//               }
			//             },
			//             "type": "object"
			//           },
			//           "Port": {
			//             "type": "integer"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "LoadBalancerTargetGroup": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "LoadBalancerTargetGroups": {
			//         "items": {
			//           "additionalProperties": false,
			//           "properties": {
			//             "Arn": {
			//               "type": "string"
			//             },
			//             "Id": {
			//               "type": "string"
			//             }
			//           },
			//           "type": "object"
			//         },
			//         "type": "array"
			//       },
			//       "LoadBalancerTargetPort": {
			//         "type": "integer"
			//       },
			//       "MissingComponent": {
			//         "type": "string"
			//       },
			//       "NatGateway": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "NetworkInterface": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "PacketField": {
			//         "type": "string"
			//       },
			//       "Port": {
			//         "type": "integer"
			//       },
			//       "PortRanges": {
			//         "items": {
			//           "additionalProperties": false,
			//           "properties": {
			//             "From": {
			//               "type": "integer"
			//             },
			//             "To": {
			//               "type": "integer"
			//             }
			//           },
			//           "type": "object"
			//         },
			//         "type": "array"
			//       },
			//       "PrefixList": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "Protocols": {
			//         "items": {
			//           "type": "string"
			//         },
			//         "type": "array"
			//       },
			//       "RouteTable": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "RouteTableRoute": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "NatGatewayId": {
			//             "type": "string"
			//           },
			//           "NetworkInterfaceId": {
			//             "type": "string"
			//           },
			//           "Origin": {
			//             "type": "string"
			//           },
			//           "TransitGatewayId": {
			//             "type": "string"
			//           },
			//           "VpcPeeringConnectionId": {
			//             "type": "string"
			//           },
			//           "destinationCidr": {
			//             "type": "string"
			//           },
			//           "destinationPrefixListId": {
			//             "type": "string"
			//           },
			//           "egressOnlyInternetGatewayId": {
			//             "type": "string"
			//           },
			//           "gatewayId": {
			//             "type": "string"
			//           },
			//           "instanceId": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "SecurityGroup": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "SecurityGroupRule": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Cidr": {
			//             "type": "string"
			//           },
			//           "Direction": {
			//             "type": "string"
			//           },
			//           "PortRange": {
			//             "additionalProperties": false,
			//             "properties": {
			//               "From": {
			//                 "type": "integer"
			//               },
			//               "To": {
			//                 "type": "integer"
			//               }
			//             },
			//             "type": "object"
			//           },
			//           "PrefixListId": {
			//             "type": "string"
			//           },
			//           "Protocol": {
			//             "type": "string"
			//           },
			//           "SecurityGroupId": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "SecurityGroups": {
			//         "items": {
			//           "additionalProperties": false,
			//           "properties": {
			//             "Arn": {
			//               "type": "string"
			//             },
			//             "Id": {
			//               "type": "string"
			//             }
			//           },
			//           "type": "object"
			//         },
			//         "type": "array"
			//       },
			//       "SourceVpc": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "State": {
			//         "type": "string"
			//       },
			//       "Subnet": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "SubnetRouteTable": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "Vpc": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "VpcPeeringConnection": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "VpnConnection": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "VpnGateway": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "vpcEndpoint": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       }
			//     },
			//     "type": "object"
			//   },
			//   "type": "array"
			// }
			Attributes: tfsdk.ListNestedAttributes(
				map[string]tfsdk.Attribute{
					"acl": {
						// Property: Acl
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"acl_rule": {
						// Property: AclRule
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"cidr": {
									// Property: Cidr
									Type:     types.StringType,
									Optional: true,
								},
								"egress": {
									// Property: Egress
									Type:     types.BoolType,
									Optional: true,
								},
								"port_range": {
									// Property: PortRange
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"from": {
												// Property: From
												Type:     types.NumberType,
												Optional: true,
											},
											"to": {
												// Property: To
												Type:     types.NumberType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"protocol": {
									// Property: Protocol
									Type:     types.StringType,
									Optional: true,
								},
								"rule_action": {
									// Property: RuleAction
									Type:     types.StringType,
									Optional: true,
								},
								"rule_number": {
									// Property: RuleNumber
									Type:     types.NumberType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"address": {
						// Property: Address
						Type:     types.StringType,
						Optional: true,
					},
					"addresses": {
						// Property: Addresses
						Type:     types.ListType{ElemType: types.StringType},
						Optional: true,
					},
					"attached_to": {
						// Property: AttachedTo
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"availability_zones": {
						// Property: AvailabilityZones
						Type:     types.ListType{ElemType: types.StringType},
						Optional: true,
					},
					"cidrs": {
						// Property: Cidrs
						Type:     types.ListType{ElemType: types.StringType},
						Optional: true,
					},
					"classic_load_balancer_listener": {
						// Property: ClassicLoadBalancerListener
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"instance_port": {
									// Property: InstancePort
									Type:     types.NumberType,
									Optional: true,
								},
								"load_balancer_port": {
									// Property: LoadBalancerPort
									Type:     types.NumberType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"component": {
						// Property: Component
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"customer_gateway": {
						// Property: CustomerGateway
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"destination": {
						// Property: Destination
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"destination_vpc": {
						// Property: DestinationVpc
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"direction": {
						// Property: Direction
						Type:     types.StringType,
						Optional: true,
					},
					"elastic_load_balancer_listener": {
						// Property: ElasticLoadBalancerListener
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"explanation_code": {
						// Property: ExplanationCode
						Type:     types.StringType,
						Optional: true,
					},
					"ingress_route_table": {
						// Property: IngressRouteTable
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"internet_gateway": {
						// Property: InternetGateway
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"load_balancer_arn": {
						// Property: LoadBalancerArn
						Type:     types.StringType,
						Optional: true,
					},
					"load_balancer_listener_port": {
						// Property: LoadBalancerListenerPort
						Type:     types.NumberType,
						Optional: true,
					},
					"load_balancer_target": {
						// Property: LoadBalancerTarget
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"address": {
									// Property: Address
									Type:     types.StringType,
									Optional: true,
								},
								"availability_zone": {
									// Property: AvailabilityZone
									Type:     types.StringType,
									Optional: true,
								},
								"instance": {
									// Property: Instance
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"arn": {
												// Property: Arn
												Type:     types.StringType,
												Optional: true,
											},
											"id": {
												// Property: Id
												Type:     types.StringType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"port": {
									// Property: Port
									Type:     types.NumberType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"load_balancer_target_group": {
						// Property: LoadBalancerTargetGroup
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"load_balancer_target_groups": {
						// Property: LoadBalancerTargetGroups
						Attributes: tfsdk.ListNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
							tfsdk.ListNestedAttributesOptions{},
						),
						Optional: true,
					},
					"load_balancer_target_port": {
						// Property: LoadBalancerTargetPort
						Type:     types.NumberType,
						Optional: true,
					},
					"missing_component": {
						// Property: MissingComponent
						Type:     types.StringType,
						Optional: true,
					},
					"nat_gateway": {
						// Property: NatGateway
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"network_interface": {
						// Property: NetworkInterface
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"packet_field": {
						// Property: PacketField
						Type:     types.StringType,
						Optional: true,
					},
					"port": {
						// Property: Port
						Type:     types.NumberType,
						Optional: true,
					},
					"port_ranges": {
						// Property: PortRanges
						Attributes: tfsdk.ListNestedAttributes(
							map[string]tfsdk.Attribute{
								"from": {
									// Property: From
									Type:     types.NumberType,
									Optional: true,
								},
								"to": {
									// Property: To
									Type:     types.NumberType,
									Optional: true,
								},
							},
							tfsdk.ListNestedAttributesOptions{},
						),
						Optional: true,
					},
					"prefix_list": {
						// Property: PrefixList
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"protocols": {
						// Property: Protocols
						Type:     types.ListType{ElemType: types.StringType},
						Optional: true,
					},
					"route_table": {
						// Property: RouteTable
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"route_table_route": {
						// Property: RouteTableRoute
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"nat_gateway_id": {
									// Property: NatGatewayId
									Type:     types.StringType,
									Optional: true,
								},
								"network_interface_id": {
									// Property: NetworkInterfaceId
									Type:     types.StringType,
									Optional: true,
								},
								"origin": {
									// Property: Origin
									Type:     types.StringType,
									Optional: true,
								},
								"transit_gateway_id": {
									// Property: TransitGatewayId
									Type:     types.StringType,
									Optional: true,
								},
								"vpc_peering_connection_id": {
									// Property: VpcPeeringConnectionId
									Type:     types.StringType,
									Optional: true,
								},
								"destination_cidr": {
									// Property: destinationCidr
									Type:     types.StringType,
									Optional: true,
								},
								"destination_prefix_list_id": {
									// Property: destinationPrefixListId
									Type:     types.StringType,
									Optional: true,
								},
								"egress_only_internet_gateway_id": {
									// Property: egressOnlyInternetGatewayId
									Type:     types.StringType,
									Optional: true,
								},
								"gateway_id": {
									// Property: gatewayId
									Type:     types.StringType,
									Optional: true,
								},
								"instance_id": {
									// Property: instanceId
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"security_group": {
						// Property: SecurityGroup
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"security_group_rule": {
						// Property: SecurityGroupRule
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"cidr": {
									// Property: Cidr
									Type:     types.StringType,
									Optional: true,
								},
								"direction": {
									// Property: Direction
									Type:     types.StringType,
									Optional: true,
								},
								"port_range": {
									// Property: PortRange
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"from": {
												// Property: From
												Type:     types.NumberType,
												Optional: true,
											},
											"to": {
												// Property: To
												Type:     types.NumberType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"prefix_list_id": {
									// Property: PrefixListId
									Type:     types.StringType,
									Optional: true,
								},
								"protocol": {
									// Property: Protocol
									Type:     types.StringType,
									Optional: true,
								},
								"security_group_id": {
									// Property: SecurityGroupId
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"security_groups": {
						// Property: SecurityGroups
						Attributes: tfsdk.ListNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
							tfsdk.ListNestedAttributesOptions{},
						),
						Optional: true,
					},
					"source_vpc": {
						// Property: SourceVpc
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"state": {
						// Property: State
						Type:     types.StringType,
						Optional: true,
					},
					"subnet": {
						// Property: Subnet
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"subnet_route_table": {
						// Property: SubnetRouteTable
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"vpc": {
						// Property: Vpc
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"vpc_peering_connection": {
						// Property: VpcPeeringConnection
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"vpn_connection": {
						// Property: VpnConnection
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"vpn_gateway": {
						// Property: VpnGateway
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"vpc_endpoint": {
						// Property: vpcEndpoint
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
				},
				tfsdk.ListNestedAttributesOptions{},
			),
			Computed: true,
		},
		"filter_in_arns": {
			// Property: FilterInArns
			// CloudFormation resource type schema:
			// {
			//   "items": {
			//     "type": "string"
			//   },
			//   "type": "array"
			// }
			Type:     types.ListType{ElemType: types.StringType},
			Optional: true,
			Computed: true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				tfsdk.RequiresReplace(), // FilterInArns is a force-new property.
			},
		},
		"forward_path_components": {
			// Property: ForwardPathComponents
			// CloudFormation resource type schema:
			// {
			//   "items": {
			//     "additionalProperties": false,
			//     "properties": {
			//       "AclRule": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Cidr": {
			//             "type": "string"
			//           },
			//           "Egress": {
			//             "type": "boolean"
			//           },
			//           "PortRange": {
			//             "additionalProperties": false,
			//             "properties": {
			//               "From": {
			//                 "type": "integer"
			//               },
			//               "To": {
			//                 "type": "integer"
			//               }
			//             },
			//             "type": "object"
			//           },
			//           "Protocol": {
			//             "type": "string"
			//           },
			//           "RuleAction": {
			//             "type": "string"
			//           },
			//           "RuleNumber": {
			//             "type": "integer"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "Component": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "DestinationVpc": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "InboundHeader": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "DestinationAddresses": {
			//             "items": {
			//               "type": "string"
			//             },
			//             "type": "array"
			//           },
			//           "DestinationPortRanges": {
			//             "items": {
			//               "additionalProperties": false,
			//               "properties": {
			//                 "From": {
			//                   "type": "integer"
			//                 },
			//                 "To": {
			//                   "type": "integer"
			//                 }
			//               },
			//               "type": "object"
			//             },
			//             "type": "array"
			//           },
			//           "Protocol": {
			//             "type": "string"
			//           },
			//           "SourceAddresses": {
			//             "items": {
			//               "type": "string"
			//             },
			//             "type": "array"
			//           },
			//           "SourcePortRanges": {
			//             "items": {
			//               "additionalProperties": false,
			//               "properties": {
			//                 "From": {
			//                   "type": "integer"
			//                 },
			//                 "To": {
			//                   "type": "integer"
			//                 }
			//               },
			//               "type": "object"
			//             },
			//             "type": "array"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "OutboundHeader": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "DestinationAddresses": {
			//             "items": {
			//               "type": "string"
			//             },
			//             "type": "array"
			//           },
			//           "DestinationPortRanges": {
			//             "items": {
			//               "additionalProperties": false,
			//               "properties": {
			//                 "From": {
			//                   "type": "integer"
			//                 },
			//                 "To": {
			//                   "type": "integer"
			//                 }
			//               },
			//               "type": "object"
			//             },
			//             "type": "array"
			//           },
			//           "Protocol": {
			//             "type": "string"
			//           },
			//           "SourceAddresses": {
			//             "items": {
			//               "type": "string"
			//             },
			//             "type": "array"
			//           },
			//           "SourcePortRanges": {
			//             "items": {
			//               "additionalProperties": false,
			//               "properties": {
			//                 "From": {
			//                   "type": "integer"
			//                 },
			//                 "To": {
			//                   "type": "integer"
			//                 }
			//               },
			//               "type": "object"
			//             },
			//             "type": "array"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "RouteTableRoute": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "NatGatewayId": {
			//             "type": "string"
			//           },
			//           "NetworkInterfaceId": {
			//             "type": "string"
			//           },
			//           "Origin": {
			//             "type": "string"
			//           },
			//           "TransitGatewayId": {
			//             "type": "string"
			//           },
			//           "VpcPeeringConnectionId": {
			//             "type": "string"
			//           },
			//           "destinationCidr": {
			//             "type": "string"
			//           },
			//           "destinationPrefixListId": {
			//             "type": "string"
			//           },
			//           "egressOnlyInternetGatewayId": {
			//             "type": "string"
			//           },
			//           "gatewayId": {
			//             "type": "string"
			//           },
			//           "instanceId": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "SecurityGroupRule": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Cidr": {
			//             "type": "string"
			//           },
			//           "Direction": {
			//             "type": "string"
			//           },
			//           "PortRange": {
			//             "additionalProperties": false,
			//             "properties": {
			//               "From": {
			//                 "type": "integer"
			//               },
			//               "To": {
			//                 "type": "integer"
			//               }
			//             },
			//             "type": "object"
			//           },
			//           "PrefixListId": {
			//             "type": "string"
			//           },
			//           "Protocol": {
			//             "type": "string"
			//           },
			//           "SecurityGroupId": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "SequenceNumber": {
			//         "type": "integer"
			//       },
			//       "SourceVpc": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "Subnet": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "Vpc": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       }
			//     },
			//     "type": "object"
			//   },
			//   "type": "array"
			// }
			Attributes: tfsdk.ListNestedAttributes(
				map[string]tfsdk.Attribute{
					"acl_rule": {
						// Property: AclRule
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"cidr": {
									// Property: Cidr
									Type:     types.StringType,
									Optional: true,
								},
								"egress": {
									// Property: Egress
									Type:     types.BoolType,
									Optional: true,
								},
								"port_range": {
									// Property: PortRange
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"from": {
												// Property: From
												Type:     types.NumberType,
												Optional: true,
											},
											"to": {
												// Property: To
												Type:     types.NumberType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"protocol": {
									// Property: Protocol
									Type:     types.StringType,
									Optional: true,
								},
								"rule_action": {
									// Property: RuleAction
									Type:     types.StringType,
									Optional: true,
								},
								"rule_number": {
									// Property: RuleNumber
									Type:     types.NumberType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"component": {
						// Property: Component
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"destination_vpc": {
						// Property: DestinationVpc
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"inbound_header": {
						// Property: InboundHeader
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"destination_addresses": {
									// Property: DestinationAddresses
									Type:     types.ListType{ElemType: types.StringType},
									Optional: true,
								},
								"destination_port_ranges": {
									// Property: DestinationPortRanges
									Attributes: tfsdk.ListNestedAttributes(
										map[string]tfsdk.Attribute{
											"from": {
												// Property: From
												Type:     types.NumberType,
												Optional: true,
											},
											"to": {
												// Property: To
												Type:     types.NumberType,
												Optional: true,
											},
										},
										tfsdk.ListNestedAttributesOptions{},
									),
									Optional: true,
								},
								"protocol": {
									// Property: Protocol
									Type:     types.StringType,
									Optional: true,
								},
								"source_addresses": {
									// Property: SourceAddresses
									Type:     types.ListType{ElemType: types.StringType},
									Optional: true,
								},
								"source_port_ranges": {
									// Property: SourcePortRanges
									Attributes: tfsdk.ListNestedAttributes(
										map[string]tfsdk.Attribute{
											"from": {
												// Property: From
												Type:     types.NumberType,
												Optional: true,
											},
											"to": {
												// Property: To
												Type:     types.NumberType,
												Optional: true,
											},
										},
										tfsdk.ListNestedAttributesOptions{},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"outbound_header": {
						// Property: OutboundHeader
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"destination_addresses": {
									// Property: DestinationAddresses
									Type:     types.ListType{ElemType: types.StringType},
									Optional: true,
								},
								"destination_port_ranges": {
									// Property: DestinationPortRanges
									Attributes: tfsdk.ListNestedAttributes(
										map[string]tfsdk.Attribute{
											"from": {
												// Property: From
												Type:     types.NumberType,
												Optional: true,
											},
											"to": {
												// Property: To
												Type:     types.NumberType,
												Optional: true,
											},
										},
										tfsdk.ListNestedAttributesOptions{},
									),
									Optional: true,
								},
								"protocol": {
									// Property: Protocol
									Type:     types.StringType,
									Optional: true,
								},
								"source_addresses": {
									// Property: SourceAddresses
									Type:     types.ListType{ElemType: types.StringType},
									Optional: true,
								},
								"source_port_ranges": {
									// Property: SourcePortRanges
									Attributes: tfsdk.ListNestedAttributes(
										map[string]tfsdk.Attribute{
											"from": {
												// Property: From
												Type:     types.NumberType,
												Optional: true,
											},
											"to": {
												// Property: To
												Type:     types.NumberType,
												Optional: true,
											},
										},
										tfsdk.ListNestedAttributesOptions{},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"route_table_route": {
						// Property: RouteTableRoute
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"nat_gateway_id": {
									// Property: NatGatewayId
									Type:     types.StringType,
									Optional: true,
								},
								"network_interface_id": {
									// Property: NetworkInterfaceId
									Type:     types.StringType,
									Optional: true,
								},
								"origin": {
									// Property: Origin
									Type:     types.StringType,
									Optional: true,
								},
								"transit_gateway_id": {
									// Property: TransitGatewayId
									Type:     types.StringType,
									Optional: true,
								},
								"vpc_peering_connection_id": {
									// Property: VpcPeeringConnectionId
									Type:     types.StringType,
									Optional: true,
								},
								"destination_cidr": {
									// Property: destinationCidr
									Type:     types.StringType,
									Optional: true,
								},
								"destination_prefix_list_id": {
									// Property: destinationPrefixListId
									Type:     types.StringType,
									Optional: true,
								},
								"egress_only_internet_gateway_id": {
									// Property: egressOnlyInternetGatewayId
									Type:     types.StringType,
									Optional: true,
								},
								"gateway_id": {
									// Property: gatewayId
									Type:     types.StringType,
									Optional: true,
								},
								"instance_id": {
									// Property: instanceId
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"security_group_rule": {
						// Property: SecurityGroupRule
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"cidr": {
									// Property: Cidr
									Type:     types.StringType,
									Optional: true,
								},
								"direction": {
									// Property: Direction
									Type:     types.StringType,
									Optional: true,
								},
								"port_range": {
									// Property: PortRange
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"from": {
												// Property: From
												Type:     types.NumberType,
												Optional: true,
											},
											"to": {
												// Property: To
												Type:     types.NumberType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"prefix_list_id": {
									// Property: PrefixListId
									Type:     types.StringType,
									Optional: true,
								},
								"protocol": {
									// Property: Protocol
									Type:     types.StringType,
									Optional: true,
								},
								"security_group_id": {
									// Property: SecurityGroupId
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"sequence_number": {
						// Property: SequenceNumber
						Type:     types.NumberType,
						Optional: true,
					},
					"source_vpc": {
						// Property: SourceVpc
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"subnet": {
						// Property: Subnet
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"vpc": {
						// Property: Vpc
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
				},
				tfsdk.ListNestedAttributesOptions{},
			),
			Computed: true,
		},
		"network_insights_analysis_arn": {
			// Property: NetworkInsightsAnalysisArn
			// CloudFormation resource type schema:
			// {
			//   "type": "string"
			// }
			Type:     types.StringType,
			Computed: true,
		},
		"network_insights_analysis_id": {
			// Property: NetworkInsightsAnalysisId
			// CloudFormation resource type schema:
			// {
			//   "type": "string"
			// }
			Type:     types.StringType,
			Computed: true,
		},
		"network_insights_path_id": {
			// Property: NetworkInsightsPathId
			// CloudFormation resource type schema:
			// {
			//   "type": "string"
			// }
			Type:     types.StringType,
			Required: true,
			PlanModifiers: []tfsdk.AttributePlanModifier{
				tfsdk.RequiresReplace(), // NetworkInsightsPathId is a force-new property.
			},
		},
		"network_path_found": {
			// Property: NetworkPathFound
			// CloudFormation resource type schema:
			// {
			//   "type": "boolean"
			// }
			Type:     types.BoolType,
			Computed: true,
		},
		"return_path_components": {
			// Property: ReturnPathComponents
			// CloudFormation resource type schema:
			// {
			//   "items": {
			//     "additionalProperties": false,
			//     "properties": {
			//       "AclRule": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Cidr": {
			//             "type": "string"
			//           },
			//           "Egress": {
			//             "type": "boolean"
			//           },
			//           "PortRange": {
			//             "additionalProperties": false,
			//             "properties": {
			//               "From": {
			//                 "type": "integer"
			//               },
			//               "To": {
			//                 "type": "integer"
			//               }
			//             },
			//             "type": "object"
			//           },
			//           "Protocol": {
			//             "type": "string"
			//           },
			//           "RuleAction": {
			//             "type": "string"
			//           },
			//           "RuleNumber": {
			//             "type": "integer"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "Component": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "DestinationVpc": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "InboundHeader": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "DestinationAddresses": {
			//             "items": {
			//               "type": "string"
			//             },
			//             "type": "array"
			//           },
			//           "DestinationPortRanges": {
			//             "items": {
			//               "additionalProperties": false,
			//               "properties": {
			//                 "From": {
			//                   "type": "integer"
			//                 },
			//                 "To": {
			//                   "type": "integer"
			//                 }
			//               },
			//               "type": "object"
			//             },
			//             "type": "array"
			//           },
			//           "Protocol": {
			//             "type": "string"
			//           },
			//           "SourceAddresses": {
			//             "items": {
			//               "type": "string"
			//             },
			//             "type": "array"
			//           },
			//           "SourcePortRanges": {
			//             "items": {
			//               "additionalProperties": false,
			//               "properties": {
			//                 "From": {
			//                   "type": "integer"
			//                 },
			//                 "To": {
			//                   "type": "integer"
			//                 }
			//               },
			//               "type": "object"
			//             },
			//             "type": "array"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "OutboundHeader": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "DestinationAddresses": {
			//             "items": {
			//               "type": "string"
			//             },
			//             "type": "array"
			//           },
			//           "DestinationPortRanges": {
			//             "items": {
			//               "additionalProperties": false,
			//               "properties": {
			//                 "From": {
			//                   "type": "integer"
			//                 },
			//                 "To": {
			//                   "type": "integer"
			//                 }
			//               },
			//               "type": "object"
			//             },
			//             "type": "array"
			//           },
			//           "Protocol": {
			//             "type": "string"
			//           },
			//           "SourceAddresses": {
			//             "items": {
			//               "type": "string"
			//             },
			//             "type": "array"
			//           },
			//           "SourcePortRanges": {
			//             "items": {
			//               "additionalProperties": false,
			//               "properties": {
			//                 "From": {
			//                   "type": "integer"
			//                 },
			//                 "To": {
			//                   "type": "integer"
			//                 }
			//               },
			//               "type": "object"
			//             },
			//             "type": "array"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "RouteTableRoute": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "NatGatewayId": {
			//             "type": "string"
			//           },
			//           "NetworkInterfaceId": {
			//             "type": "string"
			//           },
			//           "Origin": {
			//             "type": "string"
			//           },
			//           "TransitGatewayId": {
			//             "type": "string"
			//           },
			//           "VpcPeeringConnectionId": {
			//             "type": "string"
			//           },
			//           "destinationCidr": {
			//             "type": "string"
			//           },
			//           "destinationPrefixListId": {
			//             "type": "string"
			//           },
			//           "egressOnlyInternetGatewayId": {
			//             "type": "string"
			//           },
			//           "gatewayId": {
			//             "type": "string"
			//           },
			//           "instanceId": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "SecurityGroupRule": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Cidr": {
			//             "type": "string"
			//           },
			//           "Direction": {
			//             "type": "string"
			//           },
			//           "PortRange": {
			//             "additionalProperties": false,
			//             "properties": {
			//               "From": {
			//                 "type": "integer"
			//               },
			//               "To": {
			//                 "type": "integer"
			//               }
			//             },
			//             "type": "object"
			//           },
			//           "PrefixListId": {
			//             "type": "string"
			//           },
			//           "Protocol": {
			//             "type": "string"
			//           },
			//           "SecurityGroupId": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "SequenceNumber": {
			//         "type": "integer"
			//       },
			//       "SourceVpc": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "Subnet": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "Vpc": {
			//         "additionalProperties": false,
			//         "properties": {
			//           "Arn": {
			//             "type": "string"
			//           },
			//           "Id": {
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       }
			//     },
			//     "type": "object"
			//   },
			//   "type": "array"
			// }
			Attributes: tfsdk.ListNestedAttributes(
				map[string]tfsdk.Attribute{
					"acl_rule": {
						// Property: AclRule
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"cidr": {
									// Property: Cidr
									Type:     types.StringType,
									Optional: true,
								},
								"egress": {
									// Property: Egress
									Type:     types.BoolType,
									Optional: true,
								},
								"port_range": {
									// Property: PortRange
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"from": {
												// Property: From
												Type:     types.NumberType,
												Optional: true,
											},
											"to": {
												// Property: To
												Type:     types.NumberType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"protocol": {
									// Property: Protocol
									Type:     types.StringType,
									Optional: true,
								},
								"rule_action": {
									// Property: RuleAction
									Type:     types.StringType,
									Optional: true,
								},
								"rule_number": {
									// Property: RuleNumber
									Type:     types.NumberType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"component": {
						// Property: Component
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"destination_vpc": {
						// Property: DestinationVpc
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"inbound_header": {
						// Property: InboundHeader
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"destination_addresses": {
									// Property: DestinationAddresses
									Type:     types.ListType{ElemType: types.StringType},
									Optional: true,
								},
								"destination_port_ranges": {
									// Property: DestinationPortRanges
									Attributes: tfsdk.ListNestedAttributes(
										map[string]tfsdk.Attribute{
											"from": {
												// Property: From
												Type:     types.NumberType,
												Optional: true,
											},
											"to": {
												// Property: To
												Type:     types.NumberType,
												Optional: true,
											},
										},
										tfsdk.ListNestedAttributesOptions{},
									),
									Optional: true,
								},
								"protocol": {
									// Property: Protocol
									Type:     types.StringType,
									Optional: true,
								},
								"source_addresses": {
									// Property: SourceAddresses
									Type:     types.ListType{ElemType: types.StringType},
									Optional: true,
								},
								"source_port_ranges": {
									// Property: SourcePortRanges
									Attributes: tfsdk.ListNestedAttributes(
										map[string]tfsdk.Attribute{
											"from": {
												// Property: From
												Type:     types.NumberType,
												Optional: true,
											},
											"to": {
												// Property: To
												Type:     types.NumberType,
												Optional: true,
											},
										},
										tfsdk.ListNestedAttributesOptions{},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"outbound_header": {
						// Property: OutboundHeader
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"destination_addresses": {
									// Property: DestinationAddresses
									Type:     types.ListType{ElemType: types.StringType},
									Optional: true,
								},
								"destination_port_ranges": {
									// Property: DestinationPortRanges
									Attributes: tfsdk.ListNestedAttributes(
										map[string]tfsdk.Attribute{
											"from": {
												// Property: From
												Type:     types.NumberType,
												Optional: true,
											},
											"to": {
												// Property: To
												Type:     types.NumberType,
												Optional: true,
											},
										},
										tfsdk.ListNestedAttributesOptions{},
									),
									Optional: true,
								},
								"protocol": {
									// Property: Protocol
									Type:     types.StringType,
									Optional: true,
								},
								"source_addresses": {
									// Property: SourceAddresses
									Type:     types.ListType{ElemType: types.StringType},
									Optional: true,
								},
								"source_port_ranges": {
									// Property: SourcePortRanges
									Attributes: tfsdk.ListNestedAttributes(
										map[string]tfsdk.Attribute{
											"from": {
												// Property: From
												Type:     types.NumberType,
												Optional: true,
											},
											"to": {
												// Property: To
												Type:     types.NumberType,
												Optional: true,
											},
										},
										tfsdk.ListNestedAttributesOptions{},
									),
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"route_table_route": {
						// Property: RouteTableRoute
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"nat_gateway_id": {
									// Property: NatGatewayId
									Type:     types.StringType,
									Optional: true,
								},
								"network_interface_id": {
									// Property: NetworkInterfaceId
									Type:     types.StringType,
									Optional: true,
								},
								"origin": {
									// Property: Origin
									Type:     types.StringType,
									Optional: true,
								},
								"transit_gateway_id": {
									// Property: TransitGatewayId
									Type:     types.StringType,
									Optional: true,
								},
								"vpc_peering_connection_id": {
									// Property: VpcPeeringConnectionId
									Type:     types.StringType,
									Optional: true,
								},
								"destination_cidr": {
									// Property: destinationCidr
									Type:     types.StringType,
									Optional: true,
								},
								"destination_prefix_list_id": {
									// Property: destinationPrefixListId
									Type:     types.StringType,
									Optional: true,
								},
								"egress_only_internet_gateway_id": {
									// Property: egressOnlyInternetGatewayId
									Type:     types.StringType,
									Optional: true,
								},
								"gateway_id": {
									// Property: gatewayId
									Type:     types.StringType,
									Optional: true,
								},
								"instance_id": {
									// Property: instanceId
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"security_group_rule": {
						// Property: SecurityGroupRule
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"cidr": {
									// Property: Cidr
									Type:     types.StringType,
									Optional: true,
								},
								"direction": {
									// Property: Direction
									Type:     types.StringType,
									Optional: true,
								},
								"port_range": {
									// Property: PortRange
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"from": {
												// Property: From
												Type:     types.NumberType,
												Optional: true,
											},
											"to": {
												// Property: To
												Type:     types.NumberType,
												Optional: true,
											},
										},
									),
									Optional: true,
								},
								"prefix_list_id": {
									// Property: PrefixListId
									Type:     types.StringType,
									Optional: true,
								},
								"protocol": {
									// Property: Protocol
									Type:     types.StringType,
									Optional: true,
								},
								"security_group_id": {
									// Property: SecurityGroupId
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"sequence_number": {
						// Property: SequenceNumber
						Type:     types.NumberType,
						Optional: true,
					},
					"source_vpc": {
						// Property: SourceVpc
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"subnet": {
						// Property: Subnet
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
					"vpc": {
						// Property: Vpc
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"arn": {
									// Property: Arn
									Type:     types.StringType,
									Optional: true,
								},
								"id": {
									// Property: Id
									Type:     types.StringType,
									Optional: true,
								},
							},
						),
						Optional: true,
					},
				},
				tfsdk.ListNestedAttributesOptions{},
			),
			Computed: true,
		},
		"start_date": {
			// Property: StartDate
			// CloudFormation resource type schema:
			// {
			//   "type": "string"
			// }
			Type:     types.StringType,
			Computed: true,
		},
		"status": {
			// Property: Status
			// CloudFormation resource type schema:
			// {
			//   "enum": [
			//     "running",
			//     "failed",
			//     "succeeded"
			//   ],
			//   "type": "string"
			// }
			Type:     types.StringType,
			Computed: true,
		},
		"status_message": {
			// Property: StatusMessage
			// CloudFormation resource type schema:
			// {
			//   "type": "string"
			// }
			Type:     types.StringType,
			Computed: true,
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			// {
			//   "items": {
			//     "additionalProperties": false,
			//     "properties": {
			//       "Key": {
			//         "type": "string"
			//       },
			//       "Value": {
			//         "type": "string"
			//       }
			//     },
			//     "required": [
			//       "Key"
			//     ],
			//     "type": "object"
			//   },
			//   "type": "array"
			// }
			Attributes: tfsdk.ListNestedAttributes(
				map[string]tfsdk.Attribute{
					"key": {
						// Property: Key
						Type:     types.StringType,
						Required: true,
					},
					"value": {
						// Property: Value
						Type:     types.StringType,
						Optional: true,
					},
				},
				tfsdk.ListNestedAttributesOptions{},
			),
			Optional: true,
		},
	}

	attributes["id"] = tfsdk.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Computed:    true,
	}

	schema := tfsdk.Schema{
		Description: "Resource schema for AWS::EC2::NetworkInsightsAnalysis",
		Version:     1,
		Attributes:  attributes,
	}

	var opts ResourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::EC2::NetworkInsightsAnalysis").WithTerraformTypeName("awscc_ec2_network_insights_analysis")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithSyntheticIDAttribute(true)
	opts = opts.WithAttributeNameMap(map[string]string{
		"acl":                             "Acl",
		"acl_rule":                        "AclRule",
		"address":                         "Address",
		"addresses":                       "Addresses",
		"alternate_path_hints":            "AlternatePathHints",
		"arn":                             "Arn",
		"attached_to":                     "AttachedTo",
		"availability_zone":               "AvailabilityZone",
		"availability_zones":              "AvailabilityZones",
		"cidr":                            "Cidr",
		"cidrs":                           "Cidrs",
		"classic_load_balancer_listener":  "ClassicLoadBalancerListener",
		"component":                       "Component",
		"component_arn":                   "ComponentArn",
		"component_id":                    "ComponentId",
		"customer_gateway":                "CustomerGateway",
		"destination":                     "Destination",
		"destination_addresses":           "DestinationAddresses",
		"destination_cidr":                "destinationCidr",
		"destination_port_ranges":         "DestinationPortRanges",
		"destination_prefix_list_id":      "destinationPrefixListId",
		"destination_vpc":                 "DestinationVpc",
		"direction":                       "Direction",
		"egress":                          "Egress",
		"egress_only_internet_gateway_id": "egressOnlyInternetGatewayId",
		"elastic_load_balancer_listener":  "ElasticLoadBalancerListener",
		"explanation_code":                "ExplanationCode",
		"explanations":                    "Explanations",
		"filter_in_arns":                  "FilterInArns",
		"forward_path_components":         "ForwardPathComponents",
		"from":                            "From",
		"gateway_id":                      "gatewayId",
		"id":                              "Id",
		"inbound_header":                  "InboundHeader",
		"ingress_route_table":             "IngressRouteTable",
		"instance":                        "Instance",
		"instance_id":                     "instanceId",
		"instance_port":                   "InstancePort",
		"internet_gateway":                "InternetGateway",
		"key":                             "Key",
		"load_balancer_arn":               "LoadBalancerArn",
		"load_balancer_listener_port":     "LoadBalancerListenerPort",
		"load_balancer_port":              "LoadBalancerPort",
		"load_balancer_target":            "LoadBalancerTarget",
		"load_balancer_target_group":      "LoadBalancerTargetGroup",
		"load_balancer_target_groups":     "LoadBalancerTargetGroups",
		"load_balancer_target_port":       "LoadBalancerTargetPort",
		"missing_component":               "MissingComponent",
		"nat_gateway":                     "NatGateway",
		"nat_gateway_id":                  "NatGatewayId",
		"network_insights_analysis_arn":   "NetworkInsightsAnalysisArn",
		"network_insights_analysis_id":    "NetworkInsightsAnalysisId",
		"network_insights_path_id":        "NetworkInsightsPathId",
		"network_interface":               "NetworkInterface",
		"network_interface_id":            "NetworkInterfaceId",
		"network_path_found":              "NetworkPathFound",
		"origin":                          "Origin",
		"outbound_header":                 "OutboundHeader",
		"packet_field":                    "PacketField",
		"port":                            "Port",
		"port_range":                      "PortRange",
		"port_ranges":                     "PortRanges",
		"prefix_list":                     "PrefixList",
		"prefix_list_id":                  "PrefixListId",
		"protocol":                        "Protocol",
		"protocols":                       "Protocols",
		"return_path_components":          "ReturnPathComponents",
		"route_table":                     "RouteTable",
		"route_table_route":               "RouteTableRoute",
		"rule_action":                     "RuleAction",
		"rule_number":                     "RuleNumber",
		"security_group":                  "SecurityGroup",
		"security_group_id":               "SecurityGroupId",
		"security_group_rule":             "SecurityGroupRule",
		"security_groups":                 "SecurityGroups",
		"sequence_number":                 "SequenceNumber",
		"source_addresses":                "SourceAddresses",
		"source_port_ranges":              "SourcePortRanges",
		"source_vpc":                      "SourceVpc",
		"start_date":                      "StartDate",
		"state":                           "State",
		"status":                          "Status",
		"status_message":                  "StatusMessage",
		"subnet":                          "Subnet",
		"subnet_route_table":              "SubnetRouteTable",
		"tags":                            "Tags",
		"to":                              "To",
		"transit_gateway_id":              "TransitGatewayId",
		"value":                           "Value",
		"vpc":                             "Vpc",
		"vpc_endpoint":                    "vpcEndpoint",
		"vpc_peering_connection":          "VpcPeeringConnection",
		"vpc_peering_connection_id":       "VpcPeeringConnectionId",
		"vpn_connection":                  "VpnConnection",
		"vpn_gateway":                     "VpnGateway",
	})

	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	resourceType, err := NewResourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "awscc_ec2_network_insights_analysis", "schema", hclog.Fmt("%v", schema))

	return resourceType, nil
}
