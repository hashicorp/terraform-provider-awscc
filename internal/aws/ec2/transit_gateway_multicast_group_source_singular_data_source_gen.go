// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package ec2

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceTypeFactory("awscc_ec2_transit_gateway_multicast_group_source", transitGatewayMulticastGroupSourceDataSourceType)
}

// transitGatewayMulticastGroupSourceDataSourceType returns the Terraform awscc_ec2_transit_gateway_multicast_group_source data source type.
// This Terraform data source type corresponds to the CloudFormation AWS::EC2::TransitGatewayMulticastGroupSource resource type.
func transitGatewayMulticastGroupSourceDataSourceType(ctx context.Context) (tfsdk.DataSourceType, error) {
	attributes := map[string]tfsdk.Attribute{
		"group_ip_address": {
			// Property: GroupIpAddress
			// CloudFormation resource type schema:
			// {
			//   "description": "The IP address assigned to the transit gateway multicast group.",
			//   "type": "string"
			// }
			Description: "The IP address assigned to the transit gateway multicast group.",
			Type:        types.StringType,
			Computed:    true,
		},
		"group_member": {
			// Property: GroupMember
			// CloudFormation resource type schema:
			// {
			//   "description": "Indicates that the resource is a transit gateway multicast group member.",
			//   "type": "boolean"
			// }
			Description: "Indicates that the resource is a transit gateway multicast group member.",
			Type:        types.BoolType,
			Computed:    true,
		},
		"group_source": {
			// Property: GroupSource
			// CloudFormation resource type schema:
			// {
			//   "description": "Indicates that the resource is a transit gateway multicast group member.",
			//   "type": "boolean"
			// }
			Description: "Indicates that the resource is a transit gateway multicast group member.",
			Type:        types.BoolType,
			Computed:    true,
		},
		"member_type": {
			// Property: MemberType
			// CloudFormation resource type schema:
			// {
			//   "description": "The member type (for example, static).",
			//   "type": "string"
			// }
			Description: "The member type (for example, static).",
			Type:        types.StringType,
			Computed:    true,
		},
		"network_interface_id": {
			// Property: NetworkInterfaceId
			// CloudFormation resource type schema:
			// {
			//   "description": "The ID of the transit gateway attachment.",
			//   "type": "string"
			// }
			Description: "The ID of the transit gateway attachment.",
			Type:        types.StringType,
			Computed:    true,
		},
		"resource_id": {
			// Property: ResourceId
			// CloudFormation resource type schema:
			// {
			//   "description": "The ID of the resource.",
			//   "type": "string"
			// }
			Description: "The ID of the resource.",
			Type:        types.StringType,
			Computed:    true,
		},
		"resource_type": {
			// Property: ResourceType
			// CloudFormation resource type schema:
			// {
			//   "description": "The type of resource, for example a VPC attachment.",
			//   "type": "string"
			// }
			Description: "The type of resource, for example a VPC attachment.",
			Type:        types.StringType,
			Computed:    true,
		},
		"source_type": {
			// Property: SourceType
			// CloudFormation resource type schema:
			// {
			//   "description": "The source type.",
			//   "type": "string"
			// }
			Description: "The source type.",
			Type:        types.StringType,
			Computed:    true,
		},
		"subnet_id": {
			// Property: SubnetId
			// CloudFormation resource type schema:
			// {
			//   "description": "The ID of the subnet.",
			//   "type": "string"
			// }
			Description: "The ID of the subnet.",
			Type:        types.StringType,
			Computed:    true,
		},
		"transit_gateway_attachment_id": {
			// Property: TransitGatewayAttachmentId
			// CloudFormation resource type schema:
			// {
			//   "description": "The ID of the transit gateway attachment.",
			//   "type": "string"
			// }
			Description: "The ID of the transit gateway attachment.",
			Type:        types.StringType,
			Computed:    true,
		},
		"transit_gateway_multicast_domain_id": {
			// Property: TransitGatewayMulticastDomainId
			// CloudFormation resource type schema:
			// {
			//   "description": "The ID of the transit gateway multicast domain.",
			//   "type": "string"
			// }
			Description: "The ID of the transit gateway multicast domain.",
			Type:        types.StringType,
			Computed:    true,
		},
	}

	attributes["id"] = tfsdk.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Required:    true,
	}

	schema := tfsdk.Schema{
		Description: "Data Source schema for AWS::EC2::TransitGatewayMulticastGroupSource",
		Version:     1,
		Attributes:  attributes,
	}

	var opts DataSourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::EC2::TransitGatewayMulticastGroupSource").WithTerraformTypeName("awscc_ec2_transit_gateway_multicast_group_source")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"group_ip_address":                    "GroupIpAddress",
		"group_member":                        "GroupMember",
		"group_source":                        "GroupSource",
		"member_type":                         "MemberType",
		"network_interface_id":                "NetworkInterfaceId",
		"resource_id":                         "ResourceId",
		"resource_type":                       "ResourceType",
		"source_type":                         "SourceType",
		"subnet_id":                           "SubnetId",
		"transit_gateway_attachment_id":       "TransitGatewayAttachmentId",
		"transit_gateway_multicast_domain_id": "TransitGatewayMulticastDomainId",
	})

	singularDataSourceType, err := NewSingularDataSourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "awscc_ec2_transit_gateway_multicast_group_source", "schema", hclog.Fmt("%v", schema))

	return singularDataSourceType, nil
}
