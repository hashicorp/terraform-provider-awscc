// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package macie

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceTypeFactory("awscc_macie_session", sessionDataSourceType)
}

// sessionDataSourceType returns the Terraform awscc_macie_session data source type.
// This Terraform data source type corresponds to the CloudFormation AWS::Macie::Session resource type.
func sessionDataSourceType(ctx context.Context) (tfsdk.DataSourceType, error) {
	attributes := map[string]tfsdk.Attribute{
		"aws_account_id": {
			// Property: AwsAccountId
			// CloudFormation resource type schema:
			// {
			//   "description": "AWS account ID of customer",
			//   "type": "string"
			// }
			Description: "AWS account ID of customer",
			Type:        types.StringType,
			Computed:    true,
		},
		"finding_publishing_frequency": {
			// Property: FindingPublishingFrequency
			// CloudFormation resource type schema:
			// {
			//   "description": "A enumeration value that specifies how frequently finding updates are published.",
			//   "enum": [
			//     "FIFTEEN_MINUTES",
			//     "ONE_HOUR",
			//     "SIX_HOURS"
			//   ],
			//   "type": "string"
			// }
			Description: "A enumeration value that specifies how frequently finding updates are published.",
			Type:        types.StringType,
			Computed:    true,
		},
		"service_role": {
			// Property: ServiceRole
			// CloudFormation resource type schema:
			// {
			//   "description": "Service role used by Macie",
			//   "type": "string"
			// }
			Description: "Service role used by Macie",
			Type:        types.StringType,
			Computed:    true,
		},
		"status": {
			// Property: Status
			// CloudFormation resource type schema:
			// {
			//   "description": "A enumeration value that specifies the status of the Macie Session.",
			//   "enum": [
			//     "ENABLED",
			//     "PAUSED"
			//   ],
			//   "type": "string"
			// }
			Description: "A enumeration value that specifies the status of the Macie Session.",
			Type:        types.StringType,
			Computed:    true,
		},
	}

	attributes["id"] = tfsdk.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Required:    true,
	}

	schema := tfsdk.Schema{
		Description: "Data Source schema for AWS::Macie::Session",
		Version:     1,
		Attributes:  attributes,
	}

	var opts DataSourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::Macie::Session").WithTerraformTypeName("awscc_macie_session")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"aws_account_id":               "AwsAccountId",
		"finding_publishing_frequency": "FindingPublishingFrequency",
		"service_role":                 "ServiceRole",
		"status":                       "Status",
	})

	singularDataSourceType, err := NewSingularDataSourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "awscc_macie_session", "schema", hclog.Fmt("%v", schema))

	return singularDataSourceType, nil
}
