// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package elasticloadbalancingv2

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_elasticloadbalancingv2_listener", listenerDataSource)
}

// listenerDataSource returns the Terraform awscc_elasticloadbalancingv2_listener data source.
// This Terraform data source corresponds to the CloudFormation AWS::ElasticLoadBalancingV2::Listener resource.
func listenerDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: AlpnPolicy
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "[TLS listener] The name of the Application-Layer Protocol Negotiation (ALPN) policy.",
		//	  "items": {
		//	    "type": "string"
		//	  },
		//	  "type": "array"
		//	}
		"alpn_policy": schema.ListAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "[TLS listener] The name of the Application-Layer Protocol Negotiation (ALPN) policy.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Certificates
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The default SSL server certificate for a secure listener. You must provide exactly one certificate if the listener protocol is HTTPS or TLS.\n For an HTTPS listener, update requires some interruptions. For a TLS listener, update requires no interruption.\n To create a certificate list for a secure listener, use [AWS::ElasticLoadBalancingV2::ListenerCertificate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html).",
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "Specifies an SSL server certificate to use as the default certificate for a secure listener.",
		//	    "properties": {
		//	      "CertificateArn": {
		//	        "anyOf": [
		//	          {},
		//	          {}
		//	        ],
		//	        "description": "The Amazon Resource Name (ARN) of the certificate.",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"certificates": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: CertificateArn
					"certificate_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The Amazon Resource Name (ARN) of the certificate.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "The default SSL server certificate for a secure listener. You must provide exactly one certificate if the listener protocol is HTTPS or TLS.\n For an HTTPS listener, update requires some interruptions. For a TLS listener, update requires no interruption.\n To create a certificate list for a secure listener, use [AWS::ElasticLoadBalancingV2::ListenerCertificate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenercertificate.html).",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DefaultActions
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The actions for the default rule. You cannot define a condition for a default rule.\n To create additional rules for an Application Load Balancer, use [AWS::ElasticLoadBalancingV2::ListenerRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html).",
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "Specifies an action for a listener rule.",
		//	    "properties": {
		//	      "AuthenticateCognitoConfig": {
		//	        "additionalProperties": false,
		//	        "description": "[HTTPS listeners] Information for using Amazon Cognito to authenticate users. Specify only when ``Type`` is ``authenticate-cognito``.",
		//	        "properties": {
		//	          "AuthenticationRequestExtraParams": {
		//	            "description": "The query parameters (up to 10) to include in the redirect request to the authorization endpoint.",
		//	            "patternProperties": {
		//	              "": {
		//	                "type": "string"
		//	              }
		//	            },
		//	            "type": "object"
		//	          },
		//	          "OnUnauthenticatedRequest": {
		//	            "description": "The behavior if the user is not authenticated. The following are possible values:\n  +  deny```` - Return an HTTP 401 Unauthorized error.\n  +  allow```` - Allow the request to be forwarded to the target.\n  +  authenticate```` - Redirect the request to the IdP authorization endpoint. This is the default value.",
		//	            "type": "string"
		//	          },
		//	          "Scope": {
		//	            "description": "The set of user claims to be requested from the IdP. The default is ``openid``.\n To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.",
		//	            "type": "string"
		//	          },
		//	          "SessionCookieName": {
		//	            "description": "The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.",
		//	            "type": "string"
		//	          },
		//	          "SessionTimeout": {
		//	            "description": "The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).",
		//	            "type": "string"
		//	          },
		//	          "UserPoolArn": {
		//	            "description": "The Amazon Resource Name (ARN) of the Amazon Cognito user pool.",
		//	            "type": "string"
		//	          },
		//	          "UserPoolClientId": {
		//	            "anyOf": [
		//	              {},
		//	              {}
		//	            ],
		//	            "description": "The ID of the Amazon Cognito user pool client.",
		//	            "type": "string"
		//	          },
		//	          "UserPoolDomain": {
		//	            "description": "The domain prefix or fully-qualified domain name of the Amazon Cognito user pool.",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "UserPoolClientId",
		//	          "UserPoolDomain",
		//	          "UserPoolArn"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "AuthenticateOidcConfig": {
		//	        "additionalProperties": false,
		//	        "anyOf": [
		//	          {
		//	            "required": [
		//	              "ClientSecret"
		//	            ]
		//	          },
		//	          {
		//	            "required": [
		//	              "UseExistingClientSecret"
		//	            ]
		//	          }
		//	        ],
		//	        "description": "[HTTPS listeners] Information about an identity provider that is compliant with OpenID Connect (OIDC). Specify only when ``Type`` is ``authenticate-oidc``.",
		//	        "properties": {
		//	          "AuthenticationRequestExtraParams": {
		//	            "description": "The query parameters (up to 10) to include in the redirect request to the authorization endpoint.",
		//	            "patternProperties": {
		//	              "": {
		//	                "type": "string"
		//	              }
		//	            },
		//	            "type": "object"
		//	          },
		//	          "AuthorizationEndpoint": {
		//	            "description": "The authorization endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
		//	            "type": "string"
		//	          },
		//	          "ClientId": {
		//	            "description": "The OAuth 2.0 client identifier.",
		//	            "type": "string"
		//	          },
		//	          "ClientSecret": {
		//	            "description": "The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can omit this parameter if you set ``UseExistingClientSecret`` to true.",
		//	            "type": "string"
		//	          },
		//	          "Issuer": {
		//	            "description": "The OIDC issuer identifier of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
		//	            "type": "string"
		//	          },
		//	          "OnUnauthenticatedRequest": {
		//	            "description": "The behavior if the user is not authenticated. The following are possible values:\n  +  deny```` - Return an HTTP 401 Unauthorized error.\n  +  allow```` - Allow the request to be forwarded to the target.\n  +  authenticate```` - Redirect the request to the IdP authorization endpoint. This is the default value.",
		//	            "type": "string"
		//	          },
		//	          "Scope": {
		//	            "description": "The set of user claims to be requested from the IdP. The default is ``openid``.\n To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.",
		//	            "type": "string"
		//	          },
		//	          "SessionCookieName": {
		//	            "description": "The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.",
		//	            "type": "string"
		//	          },
		//	          "SessionTimeout": {
		//	            "description": "The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).",
		//	            "type": "string"
		//	          },
		//	          "TokenEndpoint": {
		//	            "description": "The token endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
		//	            "type": "string"
		//	          },
		//	          "UseExistingClientSecret": {
		//	            "description": "Indicates whether to use the existing client secret when modifying a rule. If you are creating a rule, you can omit this parameter or set it to false.",
		//	            "type": "boolean"
		//	          },
		//	          "UserInfoEndpoint": {
		//	            "description": "The user info endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "TokenEndpoint",
		//	          "Issuer",
		//	          "UserInfoEndpoint",
		//	          "ClientId",
		//	          "AuthorizationEndpoint"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "FixedResponseConfig": {
		//	        "additionalProperties": false,
		//	        "description": "[Application Load Balancer] Information for creating an action that returns a custom HTTP response. Specify only when ``Type`` is ``fixed-response``.",
		//	        "properties": {
		//	          "ContentType": {
		//	            "description": "The content type.\n Valid Values: text/plain | text/css | text/html | application/javascript | application/json",
		//	            "type": "string"
		//	          },
		//	          "MessageBody": {
		//	            "description": "The message.",
		//	            "type": "string"
		//	          },
		//	          "StatusCode": {
		//	            "description": "The HTTP response code (2XX, 4XX, or 5XX).",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "StatusCode"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "ForwardConfig": {
		//	        "additionalProperties": false,
		//	        "description": "Information for creating an action that distributes requests among one or more target groups. For Network Load Balancers, you can specify a single target group. Specify only when ``Type`` is ``forward``. If you specify both ``ForwardConfig`` and ``TargetGroupArn``, you can specify only one target group using ``ForwardConfig`` and it must be the same target group specified in ``TargetGroupArn``.",
		//	        "properties": {
		//	          "TargetGroupStickinessConfig": {
		//	            "additionalProperties": false,
		//	            "description": "Information about the target group stickiness for a rule.",
		//	            "properties": {
		//	              "DurationSeconds": {
		//	                "description": "The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days). You must specify this value when enabling target group stickiness.",
		//	                "type": "integer"
		//	              },
		//	              "Enabled": {
		//	                "description": "Indicates whether target group stickiness is enabled.",
		//	                "type": "boolean"
		//	              }
		//	            },
		//	            "type": "object"
		//	          },
		//	          "TargetGroups": {
		//	            "description": "Information about how traffic will be distributed between multiple target groups in a forward rule.",
		//	            "items": {
		//	              "additionalProperties": false,
		//	              "description": "Information about how traffic will be distributed between multiple target groups in a forward rule.",
		//	              "properties": {
		//	                "TargetGroupArn": {
		//	                  "description": "The Amazon Resource Name (ARN) of the target group.",
		//	                  "type": "string"
		//	                },
		//	                "Weight": {
		//	                  "description": "The weight. The range is 0 to 999.",
		//	                  "type": "integer"
		//	                }
		//	              },
		//	              "type": "object"
		//	            },
		//	            "type": "array",
		//	            "uniqueItems": true
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "Order": {
		//	        "description": "The order for the action. This value is required for rules with multiple actions. The action with the lowest value for order is performed first.",
		//	        "type": "integer"
		//	      },
		//	      "RedirectConfig": {
		//	        "additionalProperties": false,
		//	        "description": "[Application Load Balancer] Information for creating a redirect action. Specify only when ``Type`` is ``redirect``.",
		//	        "properties": {
		//	          "Host": {
		//	            "description": "The hostname. This component is not percent-encoded. The hostname can contain #{host}.",
		//	            "type": "string"
		//	          },
		//	          "Path": {
		//	            "description": "The absolute path, starting with the leading \"/\". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}.",
		//	            "type": "string"
		//	          },
		//	          "Port": {
		//	            "description": "The port. You can specify a value from 1 to 65535 or #{port}.",
		//	            "type": "string"
		//	          },
		//	          "Protocol": {
		//	            "description": "The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You can't redirect HTTPS to HTTP.",
		//	            "type": "string"
		//	          },
		//	          "Query": {
		//	            "description": "The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading \"?\", as it is automatically added. You can specify any of the reserved keywords.",
		//	            "type": "string"
		//	          },
		//	          "StatusCode": {
		//	            "description": "The HTTP redirect code. The redirect is either permanent (HTTP 301) or temporary (HTTP 302).",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "StatusCode"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "TargetGroupArn": {
		//	        "description": "The Amazon Resource Name (ARN) of the target group. Specify only when ``Type`` is ``forward`` and you want to route to a single target group. To route to one or more target groups, use ``ForwardConfig`` instead.",
		//	        "type": "string"
		//	      },
		//	      "Type": {
		//	        "description": "The type of action.",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Type"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"default_actions": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: AuthenticateCognitoConfig
					"authenticate_cognito_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: AuthenticationRequestExtraParams
							"authentication_request_extra_params": // Pattern: ""
							schema.MapAttribute{                   /*START ATTRIBUTE*/
								ElementType: types.StringType,
								Description: "The query parameters (up to 10) to include in the redirect request to the authorization endpoint.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: OnUnauthenticatedRequest
							"on_unauthenticated_request": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The behavior if the user is not authenticated. The following are possible values:\n  +  deny```` - Return an HTTP 401 Unauthorized error.\n  +  allow```` - Allow the request to be forwarded to the target.\n  +  authenticate```` - Redirect the request to the IdP authorization endpoint. This is the default value.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Scope
							"scope": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The set of user claims to be requested from the IdP. The default is ``openid``.\n To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: SessionCookieName
							"session_cookie_name": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: SessionTimeout
							"session_timeout": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: UserPoolArn
							"user_pool_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The Amazon Resource Name (ARN) of the Amazon Cognito user pool.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: UserPoolClientId
							"user_pool_client_id": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The ID of the Amazon Cognito user pool client.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: UserPoolDomain
							"user_pool_domain": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The domain prefix or fully-qualified domain name of the Amazon Cognito user pool.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Description: "[HTTPS listeners] Information for using Amazon Cognito to authenticate users. Specify only when ``Type`` is ``authenticate-cognito``.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: AuthenticateOidcConfig
					"authenticate_oidc_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: AuthenticationRequestExtraParams
							"authentication_request_extra_params": // Pattern: ""
							schema.MapAttribute{                   /*START ATTRIBUTE*/
								ElementType: types.StringType,
								Description: "The query parameters (up to 10) to include in the redirect request to the authorization endpoint.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: AuthorizationEndpoint
							"authorization_endpoint": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The authorization endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: ClientId
							"client_id": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The OAuth 2.0 client identifier.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: ClientSecret
							"client_secret": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can omit this parameter if you set ``UseExistingClientSecret`` to true.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Issuer
							"issuer": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The OIDC issuer identifier of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: OnUnauthenticatedRequest
							"on_unauthenticated_request": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The behavior if the user is not authenticated. The following are possible values:\n  +  deny```` - Return an HTTP 401 Unauthorized error.\n  +  allow```` - Allow the request to be forwarded to the target.\n  +  authenticate```` - Redirect the request to the IdP authorization endpoint. This is the default value.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Scope
							"scope": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The set of user claims to be requested from the IdP. The default is ``openid``.\n To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: SessionCookieName
							"session_cookie_name": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: SessionTimeout
							"session_timeout": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: TokenEndpoint
							"token_endpoint": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The token endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: UseExistingClientSecret
							"use_existing_client_secret": schema.BoolAttribute{ /*START ATTRIBUTE*/
								Description: "Indicates whether to use the existing client secret when modifying a rule. If you are creating a rule, you can omit this parameter or set it to false.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: UserInfoEndpoint
							"user_info_endpoint": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The user info endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Description: "[HTTPS listeners] Information about an identity provider that is compliant with OpenID Connect (OIDC). Specify only when ``Type`` is ``authenticate-oidc``.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: FixedResponseConfig
					"fixed_response_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: ContentType
							"content_type": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The content type.\n Valid Values: text/plain | text/css | text/html | application/javascript | application/json",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: MessageBody
							"message_body": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The message.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: StatusCode
							"status_code": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The HTTP response code (2XX, 4XX, or 5XX).",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Description: "[Application Load Balancer] Information for creating an action that returns a custom HTTP response. Specify only when ``Type`` is ``fixed-response``.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: ForwardConfig
					"forward_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: TargetGroupStickinessConfig
							"target_group_stickiness_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: DurationSeconds
									"duration_seconds": schema.Int64Attribute{ /*START ATTRIBUTE*/
										Description: "The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days). You must specify this value when enabling target group stickiness.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: Enabled
									"enabled": schema.BoolAttribute{ /*START ATTRIBUTE*/
										Description: "Indicates whether target group stickiness is enabled.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Description: "Information about the target group stickiness for a rule.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: TargetGroups
							"target_groups": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
								NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: TargetGroupArn
										"target_group_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
											Description: "The Amazon Resource Name (ARN) of the target group.",
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: Weight
										"weight": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The weight. The range is 0 to 999.",
											Computed:    true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
								}, /*END NESTED OBJECT*/
								Description: "Information about how traffic will be distributed between multiple target groups in a forward rule.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Description: "Information for creating an action that distributes requests among one or more target groups. For Network Load Balancers, you can specify a single target group. Specify only when ``Type`` is ``forward``. If you specify both ``ForwardConfig`` and ``TargetGroupArn``, you can specify only one target group using ``ForwardConfig`` and it must be the same target group specified in ``TargetGroupArn``.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Order
					"order": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "The order for the action. This value is required for rules with multiple actions. The action with the lowest value for order is performed first.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: RedirectConfig
					"redirect_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Host
							"host": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The hostname. This component is not percent-encoded. The hostname can contain #{host}.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Path
							"path": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The absolute path, starting with the leading \"/\". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Port
							"port": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The port. You can specify a value from 1 to 65535 or #{port}.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Protocol
							"protocol": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The protocol. You can specify HTTP, HTTPS, or #{protocol}. You can redirect HTTP to HTTP, HTTP to HTTPS, and HTTPS to HTTPS. You can't redirect HTTPS to HTTP.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Query
							"query": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading \"?\", as it is automatically added. You can specify any of the reserved keywords.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: StatusCode
							"status_code": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The HTTP redirect code. The redirect is either permanent (HTTP 301) or temporary (HTTP 302).",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Description: "[Application Load Balancer] Information for creating a redirect action. Specify only when ``Type`` is ``redirect``.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: TargetGroupArn
					"target_group_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The Amazon Resource Name (ARN) of the target group. Specify only when ``Type`` is ``forward`` and you want to route to a single target group. To route to one or more target groups, use ``ForwardConfig`` instead.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Type
					"type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The type of action.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "The actions for the default rule. You cannot define a condition for a default rule.\n To create additional rules for an Application Load Balancer, use [AWS::ElasticLoadBalancingV2::ListenerRule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-listenerrule.html).",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ListenerArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "",
		//	  "type": "string"
		//	}
		"listener_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ListenerAttributes
		// CloudFormation resource type schema:
		//
		//	{
		//	  "arrayType": "AttributeList",
		//	  "description": "The listener attributes. Attributes that you do not modify retain their current values.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "Information about a listener attribute.",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "The name of the attribute.\n The following attribute is supported by Network Load Balancers, and Gateway Load Balancers.\n  +  ``tcp.idle_timeout.seconds`` - The tcp idle timeout value, in seconds. The valid range is 60-6000 seconds. The default is 350 seconds.\n  \n The following attributes are only supported by Application Load Balancers.\n  +  ``routing.http.request.x_amzn_mtls_clientcert_serial_number.header_name`` - Enables you to modify the header name of the *X-Amzn-Mtls-Clientcert-Serial-Number* HTTP request header.\n  +  ``routing.http.request.x_amzn_mtls_clientcert_issuer.header_name`` - Enables you to modify the header name of the *X-Amzn-Mtls-Clientcert-Issuer* HTTP request header.\n  +  ``routing.http.request.x_amzn_mtls_clientcert_subject.header_name`` - Enables you to modify the header name of the *X-Amzn-Mtls-Clientcert-Subject* HTTP request header.\n  +  ``routing.http.request.x_amzn_mtls_clientcert_validity.header_name`` - Enables you to modify the header name of the *X-Amzn-Mtls-Clientcert-Validity* HTTP request header.\n  +  ``routing.http.request.x_amzn_mtls_clientcert_leaf.header_name`` - Enables you to modify the header name of the *X-Amzn-Mtls-Clientcert-Leaf* HTTP request header.\n  +  ``routing.http.request.x_amzn_mtls_clientcert.header_name`` - Enables you to modify the header name of the *X-Amzn-Mtls-Clientcert* HTTP request header.\n  +  ``routing.http.request.x_amzn_tls_version.header_name`` - Enables you to modify the header name of the *X-Amzn-Tls-Version* HTTP request header.\n  +  ``routing.http.request.x_amzn_tls_cipher_suite.header_name`` - Enables you to modify the header name of the *X-Amzn-Tls-Cipher-Suite* HTTP request header.\n  +  ``routing.http.response.server.enabled`` - Enables you to allow or remove the HTTP response server header.\n  +  ``routing.http.response.strict_transport_security.header_value`` - Informs browsers that the site should only be accessed using HTTPS, and that any future attempts to access it using HTTP should automatically be converted to HTTPS.\n  +  ``routing.http.response.access_control_allow_origin.header_value`` - Specifies which origins are allowed to access the server.\n  +  ``routing.http.response.access_control_allow_methods.header_value`` - Returns which HTTP methods are allowed when accessing the server from a different origin.\n  +  ``routing.http.response.access_control_allow_headers.header_value`` - Specifies which headers can be used during the request.\n  +  ``routing.http.response.access_control_allow_credentials.header_value`` - Indicates whether the browser should include credentials such as cookies or authentication when making requests.\n  +  ``routing.http.response.access_control_expose_headers.header_value`` - Returns which headers the browser can expose to the requesting client.\n  +  ``routing.http.response.access_control_max_age.header_value`` - Specifies how long the results of a preflight request can be cached, in seconds.\n  +  ``routing.http.response.content_security_policy.header_value`` - Specifies restrictions enforced by the browser to help minimize the risk of certain types of security threats.\n  +  ``routing.http.response.x_content_type_options.header_value`` - Indicates whether the MIME types advertised in the *Content-Type* headers should be followed and not be changed.\n  +  ``routing.http.response.x_frame_options.header_value`` - Indicates whether the browser is allowed to render a page in a *frame*, *iframe*, *embed* or *object*.",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "The value of the attribute.",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"listener_attributes": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The name of the attribute.\n The following attribute is supported by Network Load Balancers, and Gateway Load Balancers.\n  +  ``tcp.idle_timeout.seconds`` - The tcp idle timeout value, in seconds. The valid range is 60-6000 seconds. The default is 350 seconds.\n  \n The following attributes are only supported by Application Load Balancers.\n  +  ``routing.http.request.x_amzn_mtls_clientcert_serial_number.header_name`` - Enables you to modify the header name of the *X-Amzn-Mtls-Clientcert-Serial-Number* HTTP request header.\n  +  ``routing.http.request.x_amzn_mtls_clientcert_issuer.header_name`` - Enables you to modify the header name of the *X-Amzn-Mtls-Clientcert-Issuer* HTTP request header.\n  +  ``routing.http.request.x_amzn_mtls_clientcert_subject.header_name`` - Enables you to modify the header name of the *X-Amzn-Mtls-Clientcert-Subject* HTTP request header.\n  +  ``routing.http.request.x_amzn_mtls_clientcert_validity.header_name`` - Enables you to modify the header name of the *X-Amzn-Mtls-Clientcert-Validity* HTTP request header.\n  +  ``routing.http.request.x_amzn_mtls_clientcert_leaf.header_name`` - Enables you to modify the header name of the *X-Amzn-Mtls-Clientcert-Leaf* HTTP request header.\n  +  ``routing.http.request.x_amzn_mtls_clientcert.header_name`` - Enables you to modify the header name of the *X-Amzn-Mtls-Clientcert* HTTP request header.\n  +  ``routing.http.request.x_amzn_tls_version.header_name`` - Enables you to modify the header name of the *X-Amzn-Tls-Version* HTTP request header.\n  +  ``routing.http.request.x_amzn_tls_cipher_suite.header_name`` - Enables you to modify the header name of the *X-Amzn-Tls-Cipher-Suite* HTTP request header.\n  +  ``routing.http.response.server.enabled`` - Enables you to allow or remove the HTTP response server header.\n  +  ``routing.http.response.strict_transport_security.header_value`` - Informs browsers that the site should only be accessed using HTTPS, and that any future attempts to access it using HTTP should automatically be converted to HTTPS.\n  +  ``routing.http.response.access_control_allow_origin.header_value`` - Specifies which origins are allowed to access the server.\n  +  ``routing.http.response.access_control_allow_methods.header_value`` - Returns which HTTP methods are allowed when accessing the server from a different origin.\n  +  ``routing.http.response.access_control_allow_headers.header_value`` - Specifies which headers can be used during the request.\n  +  ``routing.http.response.access_control_allow_credentials.header_value`` - Indicates whether the browser should include credentials such as cookies or authentication when making requests.\n  +  ``routing.http.response.access_control_expose_headers.header_value`` - Returns which headers the browser can expose to the requesting client.\n  +  ``routing.http.response.access_control_max_age.header_value`` - Specifies how long the results of a preflight request can be cached, in seconds.\n  +  ``routing.http.response.content_security_policy.header_value`` - Specifies restrictions enforced by the browser to help minimize the risk of certain types of security threats.\n  +  ``routing.http.response.x_content_type_options.header_value`` - Indicates whether the MIME types advertised in the *Content-Type* headers should be followed and not be changed.\n  +  ``routing.http.response.x_frame_options.header_value`` - Indicates whether the browser is allowed to render a page in a *frame*, *iframe*, *embed* or *object*.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The value of the attribute.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "The listener attributes. Attributes that you do not modify retain their current values.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: LoadBalancerArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Amazon Resource Name (ARN) of the load balancer.",
		//	  "type": "string"
		//	}
		"load_balancer_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Amazon Resource Name (ARN) of the load balancer.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: MutualAuthentication
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "The mutual authentication configuration information.",
		//	  "properties": {
		//	    "AdvertiseTrustStoreCaNames": {
		//	      "description": "Indicates whether trust store CA certificate names are advertised.",
		//	      "type": "string"
		//	    },
		//	    "IgnoreClientCertificateExpiry": {
		//	      "description": "Indicates whether expired client certificates are ignored.",
		//	      "type": "boolean"
		//	    },
		//	    "Mode": {
		//	      "description": "The client certificate handling method. Options are ``off``, ``passthrough`` or ``verify``. The default value is ``off``.",
		//	      "type": "string"
		//	    },
		//	    "TrustStoreArn": {
		//	      "description": "The Amazon Resource Name (ARN) of the trust store.",
		//	      "type": "string"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"mutual_authentication": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: AdvertiseTrustStoreCaNames
				"advertise_trust_store_ca_names": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "Indicates whether trust store CA certificate names are advertised.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: IgnoreClientCertificateExpiry
				"ignore_client_certificate_expiry": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "Indicates whether expired client certificates are ignored.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Mode
				"mode": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "The client certificate handling method. Options are ``off``, ``passthrough`` or ``verify``. The default value is ``off``.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: TrustStoreArn
				"trust_store_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "The Amazon Resource Name (ARN) of the trust store.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "The mutual authentication configuration information.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Port
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The port on which the load balancer is listening. You can't specify a port for a Gateway Load Balancer.",
		//	  "type": "integer"
		//	}
		"port": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The port on which the load balancer is listening. You can't specify a port for a Gateway Load Balancer.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Protocol
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP. You can’t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You can't specify a protocol for a Gateway Load Balancer.",
		//	  "type": "string"
		//	}
		"protocol": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP. You can’t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You can't specify a protocol for a Gateway Load Balancer.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SslPolicy
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "[HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported. For more information, see [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/describe-ssl-policies.html) in the *Application Load Balancers Guide* and [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/describe-ssl-policies.html) in the *Network Load Balancers Guide*.\n [HTTPS listeners] Updating the security policy can result in interruptions if the load balancer is handling a high volume of traffic. To decrease the possibility of an interruption if your load balancer is handling a high volume of traffic, create an additional load balancer or request an LCU reservation.",
		//	  "type": "string"
		//	}
		"ssl_policy": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "[HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported. For more information, see [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/describe-ssl-policies.html) in the *Application Load Balancers Guide* and [Security policies](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/describe-ssl-policies.html) in the *Network Load Balancers Guide*.\n [HTTPS listeners] Updating the security policy can result in interruptions if the load balancer is handling a high volume of traffic. To decrease the possibility of an interruption if your load balancer is handling a high volume of traffic, create an additional load balancer or request an LCU reservation.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::ElasticLoadBalancingV2::Listener",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::ElasticLoadBalancingV2::Listener").WithTerraformTypeName("awscc_elasticloadbalancingv2_listener")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"advertise_trust_store_ca_names":      "AdvertiseTrustStoreCaNames",
		"alpn_policy":                         "AlpnPolicy",
		"authenticate_cognito_config":         "AuthenticateCognitoConfig",
		"authenticate_oidc_config":            "AuthenticateOidcConfig",
		"authentication_request_extra_params": "AuthenticationRequestExtraParams",
		"authorization_endpoint":              "AuthorizationEndpoint",
		"certificate_arn":                     "CertificateArn",
		"certificates":                        "Certificates",
		"client_id":                           "ClientId",
		"client_secret":                       "ClientSecret",
		"content_type":                        "ContentType",
		"default_actions":                     "DefaultActions",
		"duration_seconds":                    "DurationSeconds",
		"enabled":                             "Enabled",
		"fixed_response_config":               "FixedResponseConfig",
		"forward_config":                      "ForwardConfig",
		"host":                                "Host",
		"ignore_client_certificate_expiry":    "IgnoreClientCertificateExpiry",
		"issuer":                              "Issuer",
		"key":                                 "Key",
		"listener_arn":                        "ListenerArn",
		"listener_attributes":                 "ListenerAttributes",
		"load_balancer_arn":                   "LoadBalancerArn",
		"message_body":                        "MessageBody",
		"mode":                                "Mode",
		"mutual_authentication":               "MutualAuthentication",
		"on_unauthenticated_request":          "OnUnauthenticatedRequest",
		"order":                               "Order",
		"path":                                "Path",
		"port":                                "Port",
		"protocol":                            "Protocol",
		"query":                               "Query",
		"redirect_config":                     "RedirectConfig",
		"scope":                               "Scope",
		"session_cookie_name":                 "SessionCookieName",
		"session_timeout":                     "SessionTimeout",
		"ssl_policy":                          "SslPolicy",
		"status_code":                         "StatusCode",
		"target_group_arn":                    "TargetGroupArn",
		"target_group_stickiness_config":      "TargetGroupStickinessConfig",
		"target_groups":                       "TargetGroups",
		"token_endpoint":                      "TokenEndpoint",
		"trust_store_arn":                     "TrustStoreArn",
		"type":                                "Type",
		"use_existing_client_secret":          "UseExistingClientSecret",
		"user_info_endpoint":                  "UserInfoEndpoint",
		"user_pool_arn":                       "UserPoolArn",
		"user_pool_client_id":                 "UserPoolClientId",
		"user_pool_domain":                    "UserPoolDomain",
		"value":                               "Value",
		"weight":                              "Weight",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
