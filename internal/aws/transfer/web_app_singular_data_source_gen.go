// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package transfer

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_transfer_web_app", webAppDataSource)
}

// webAppDataSource returns the Terraform awscc_transfer_web_app data source.
// This Terraform data source corresponds to the CloudFormation AWS::Transfer::WebApp resource.
func webAppDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: AccessEndpoint
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The AccessEndpoint is the URL that you provide to your users for them to interact with the Transfer Family web app. You can specify a custom URL or use the default value.",
		//	  "maxLength": 1024,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"access_endpoint": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The AccessEndpoint is the URL that you provide to your users for them to interact with the Transfer Family web app. You can specify a custom URL or use the default value.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Arn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Specifies the unique Amazon Resource Name (ARN) for the web app.",
		//	  "maxLength": 1600,
		//	  "minLength": 20,
		//	  "pattern": "arn:.*",
		//	  "type": "string"
		//	}
		"arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Specifies the unique Amazon Resource Name (ARN) for the web app.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: IdentityProviderDetails
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "You can provide a structure that contains the details for the identity provider to use with your web app.",
		//	  "properties": {
		//	    "ApplicationArn": {
		//	      "maxLength": 1224,
		//	      "minLength": 10,
		//	      "pattern": "^arn:[\\w-]+:sso::\\d{12}:application/(sso)?ins-[a-zA-Z0-9-.]{16}/apl-[a-zA-Z0-9]{16}$",
		//	      "type": "string"
		//	    },
		//	    "InstanceArn": {
		//	      "description": "The Amazon Resource Name (ARN) for the IAM Identity Center used for the web app.",
		//	      "maxLength": 1224,
		//	      "minLength": 10,
		//	      "pattern": "^arn:[\\w-]+:sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}$",
		//	      "type": "string"
		//	    },
		//	    "Role": {
		//	      "description": "The IAM role in IAM Identity Center used for the web app.",
		//	      "maxLength": 2048,
		//	      "minLength": 20,
		//	      "pattern": "^arn:[a-z-]+:iam::[0-9]{12}:role[:/]\\S+$",
		//	      "type": "string"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"identity_provider_details": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: ApplicationArn
				"application_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: InstanceArn
				"instance_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "The Amazon Resource Name (ARN) for the IAM Identity Center used for the web app.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Role
				"role": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "The IAM role in IAM Identity Center used for the web app.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "You can provide a structure that contains the details for the identity provider to use with your web app.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Key-value pairs that can be used to group and search for web apps.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "Key-value pair that can be used to group and search for web apps.",
		//	    "properties": {
		//	      "Key": {
		//	        "maxLength": 128,
		//	        "minLength": 0,
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "maxLength": 256,
		//	        "minLength": 0,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "maxItems": 50,
		//	  "type": "array"
		//	}
		"tags": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Computed: true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Computed: true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "Key-value pairs that can be used to group and search for web apps.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: WebAppCustomization
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "properties": {
		//	    "FaviconFile": {
		//	      "description": "Specifies a favicon to display in the browser tab.",
		//	      "maxLength": 20960,
		//	      "minLength": 1,
		//	      "type": "string"
		//	    },
		//	    "LogoFile": {
		//	      "description": "Specifies a logo to display on the web app.",
		//	      "maxLength": 51200,
		//	      "minLength": 1,
		//	      "type": "string"
		//	    },
		//	    "Title": {
		//	      "description": "Specifies a title to display on the web app.",
		//	      "maxLength": 100,
		//	      "minLength": 0,
		//	      "type": "string"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"web_app_customization": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: FaviconFile
				"favicon_file": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "Specifies a favicon to display in the browser tab.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: LogoFile
				"logo_file": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "Specifies a logo to display on the web app.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Title
				"title": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "Specifies a title to display on the web app.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: WebAppEndpointPolicy
		// CloudFormation resource type schema:
		//
		//	{
		//	  "enum": [
		//	    "STANDARD",
		//	    "FIPS"
		//	  ],
		//	  "type": "string"
		//	}
		"web_app_endpoint_policy": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: WebAppId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "A unique identifier for the web app.",
		//	  "maxLength": 24,
		//	  "minLength": 24,
		//	  "pattern": "^webapp-([0-9a-f]{17})$",
		//	  "type": "string"
		//	}
		"web_app_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "A unique identifier for the web app.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: WebAppUnits
		// CloudFormation resource type schema:
		//
		//	{
		//	  "properties": {
		//	    "Provisioned": {
		//	      "minimum": 1,
		//	      "type": "integer"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"web_app_units": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: Provisioned
				"provisioned": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Computed: true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Computed: true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::Transfer::WebApp",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::Transfer::WebApp").WithTerraformTypeName("awscc_transfer_web_app")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"access_endpoint":           "AccessEndpoint",
		"application_arn":           "ApplicationArn",
		"arn":                       "Arn",
		"favicon_file":              "FaviconFile",
		"identity_provider_details": "IdentityProviderDetails",
		"instance_arn":              "InstanceArn",
		"key":                       "Key",
		"logo_file":                 "LogoFile",
		"provisioned":               "Provisioned",
		"role":                      "Role",
		"tags":                      "Tags",
		"title":                     "Title",
		"value":                     "Value",
		"web_app_customization":     "WebAppCustomization",
		"web_app_endpoint_policy":   "WebAppEndpointPolicy",
		"web_app_id":                "WebAppId",
		"web_app_units":             "WebAppUnits",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
