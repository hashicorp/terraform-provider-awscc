// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package securityhub

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_securityhub_hub", hubDataSource)
}

// hubDataSource returns the Terraform awscc_securityhub_hub data source.
// This Terraform data source corresponds to the CloudFormation AWS::SecurityHub::Hub resource.
func hubDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: ARN
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "An ARN is automatically created for the customer.",
		//	  "pattern": "^arn:.*",
		//	  "type": "string"
		//	}
		"arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "An ARN is automatically created for the customer.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: AutoEnableControls
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Whether to automatically enable new controls when they are added to standards that are enabled",
		//	  "type": "boolean"
		//	}
		"auto_enable_controls": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "Whether to automatically enable new controls when they are added to standards that are enabled",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ControlFindingGenerator
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to SECURITY_CONTROL, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.  If the value for this field is set to STANDARD_CONTROL, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.",
		//	  "pattern": "^(SECURITY_CONTROL|STANDARD_CONTROL)$",
		//	  "type": "string"
		//	}
		"control_finding_generator": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to SECURITY_CONTROL, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.  If the value for this field is set to STANDARD_CONTROL, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: EnableDefaultStandards
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Whether to enable the security standards that Security Hub has designated as automatically enabled.",
		//	  "type": "boolean"
		//	}
		"enable_default_standards": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "Whether to enable the security standards that Security Hub has designated as automatically enabled.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SubscribedAt
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The date and time when Security Hub was enabled in the account.",
		//	  "type": "string"
		//	}
		"subscribed_at": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The date and time when Security Hub was enabled in the account.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "A key-value pair to associate with a resource.",
		//	  "patternProperties": {
		//	    "": {
		//	      "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
		//	      "maxLength": 256,
		//	      "minLength": 0,
		//	      "type": "string"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"tags":              // Pattern: ""
		schema.MapAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "A key-value pair to associate with a resource.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::SecurityHub::Hub",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::SecurityHub::Hub").WithTerraformTypeName("awscc_securityhub_hub")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"arn":                       "ARN",
		"auto_enable_controls":      "AutoEnableControls",
		"control_finding_generator": "ControlFindingGenerator",
		"enable_default_standards":  "EnableDefaultStandards",
		"subscribed_at":             "SubscribedAt",
		"tags":                      "Tags",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
