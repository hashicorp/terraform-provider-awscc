// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package securityhub

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_securityhub_insight", insightDataSource)
}

// insightDataSource returns the Terraform awscc_securityhub_insight data source.
// This Terraform data source corresponds to the CloudFormation AWS::SecurityHub::Insight resource.
func insightDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: Filters
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "One or more attributes used to filter the findings included in the insight",
		//	  "properties": {
		//	    "AwsAccountId": {
		//	      "description": "The AWS account ID in which a finding is generated.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "AwsAccountName": {
		//	      "description": "The name of the AWS account in which a finding is generated.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "CompanyName": {
		//	      "description": "The name of the findings provider (company) that owns the solution (product) that generates findings.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ComplianceAssociatedStandardsId": {
		//	      "description": "The unique identifier of a standard in which a control is enabled.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ComplianceSecurityControlId": {
		//	      "description": "The unique identifier of a control across standards.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ComplianceSecurityControlParametersName": {
		//	      "description": "The name of a security control parameter.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ComplianceSecurityControlParametersValue": {
		//	      "description": "The current value of a security control parameter.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ComplianceStatus": {
		//	      "description": "Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "Confidence": {
		//	      "description": "A finding's confidence.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A number filter for querying findings.",
		//	        "properties": {
		//	          "Eq": {
		//	            "description": "The equal-to condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Gte": {
		//	            "description": "The greater-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Lte": {
		//	            "description": "The less-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "CreatedAt": {
		//	      "description": "An ISO8601-formatted timestamp that indicates when the security findings provider captured the potential security issue that a finding captured.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A date filter for querying findings.",
		//	        "properties": {
		//	          "DateRange": {
		//	            "additionalProperties": false,
		//	            "description": "A date range for the date filter.",
		//	            "properties": {
		//	              "Unit": {
		//	                "description": "A date range unit for the date filter.",
		//	                "enum": [
		//	                  "DAYS"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "Value": {
		//	                "description": "A date range value for the date filter.",
		//	                "type": "number"
		//	              }
		//	            },
		//	            "required": [
		//	              "Unit",
		//	              "Value"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "End": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          },
		//	          "Start": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "Criticality": {
		//	      "description": "The level of importance assigned to the resources associated with the finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A number filter for querying findings.",
		//	        "properties": {
		//	          "Eq": {
		//	            "description": "The equal-to condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Gte": {
		//	            "description": "The greater-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Lte": {
		//	            "description": "The less-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "Description": {
		//	      "description": "A finding's description.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "FindingProviderFieldsConfidence": {
		//	      "description": "The finding provider value for the finding confidence.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A number filter for querying findings.",
		//	        "properties": {
		//	          "Eq": {
		//	            "description": "The equal-to condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Gte": {
		//	            "description": "The greater-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Lte": {
		//	            "description": "The less-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "FindingProviderFieldsCriticality": {
		//	      "description": "The finding provider value for the level of importance assigned to the resources associated with the findings.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A number filter for querying findings.",
		//	        "properties": {
		//	          "Eq": {
		//	            "description": "The equal-to condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Gte": {
		//	            "description": "The greater-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Lte": {
		//	            "description": "The less-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "FindingProviderFieldsRelatedFindingsId": {
		//	      "description": "The finding identifier of a related finding that is identified by the finding provider.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "FindingProviderFieldsRelatedFindingsProductArn": {
		//	      "description": "The ARN of the solution that generated a related finding that is identified by the finding provider.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "FindingProviderFieldsSeverityLabel": {
		//	      "description": "The finding provider value for the severity label.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "FindingProviderFieldsSeverityOriginal": {
		//	      "description": "The finding provider's original value for the severity.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "FindingProviderFieldsTypes": {
		//	      "description": "One or more finding types that the finding provider assigned to the finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "FirstObservedAt": {
		//	      "description": "An ISO8601-formatted timestamp that indicates when the security findings provider first observed the potential security issue that a finding captured.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A date filter for querying findings.",
		//	        "properties": {
		//	          "DateRange": {
		//	            "additionalProperties": false,
		//	            "description": "A date range for the date filter.",
		//	            "properties": {
		//	              "Unit": {
		//	                "description": "A date range unit for the date filter.",
		//	                "enum": [
		//	                  "DAYS"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "Value": {
		//	                "description": "A date range value for the date filter.",
		//	                "type": "number"
		//	              }
		//	            },
		//	            "required": [
		//	              "Unit",
		//	              "Value"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "End": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          },
		//	          "Start": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "GeneratorId": {
		//	      "description": "The identifier for the solution-specific component (a discrete unit of logic) that generated a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "Id": {
		//	      "description": "The security findings provider-specific identifier for a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "Keyword": {
		//	      "description": "A keyword for a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A keyword filter for querying findings.",
		//	        "properties": {
		//	          "Value": {
		//	            "description": "A value for the keyword.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "LastObservedAt": {
		//	      "description": "An ISO8601-formatted timestamp that indicates when the security findings provider most recently observed the potential security issue that a finding captured.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A date filter for querying findings.",
		//	        "properties": {
		//	          "DateRange": {
		//	            "additionalProperties": false,
		//	            "description": "A date range for the date filter.",
		//	            "properties": {
		//	              "Unit": {
		//	                "description": "A date range unit for the date filter.",
		//	                "enum": [
		//	                  "DAYS"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "Value": {
		//	                "description": "A date range value for the date filter.",
		//	                "type": "number"
		//	              }
		//	            },
		//	            "required": [
		//	              "Unit",
		//	              "Value"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "End": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          },
		//	          "Start": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "MalwareName": {
		//	      "description": "The name of the malware that was observed.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "MalwarePath": {
		//	      "description": "The filesystem path of the malware that was observed.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "MalwareState": {
		//	      "description": "The state of the malware that was observed.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "MalwareType": {
		//	      "description": "The type of the malware that was observed.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "NetworkDestinationDomain": {
		//	      "description": "The destination domain of network-related information about a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "NetworkDestinationIpV4": {
		//	      "description": "The destination IPv4 address of network-related information about a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "The IP filter for querying findings.",
		//	        "properties": {
		//	          "Cidr": {
		//	            "description": "A finding's CIDR value.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Cidr"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "NetworkDestinationIpV6": {
		//	      "description": "The destination IPv6 address of network-related information about a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "The IP filter for querying findings.",
		//	        "properties": {
		//	          "Cidr": {
		//	            "description": "A finding's CIDR value.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Cidr"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "NetworkDestinationPort": {
		//	      "description": "The destination port of network-related information about a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A number filter for querying findings.",
		//	        "properties": {
		//	          "Eq": {
		//	            "description": "The equal-to condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Gte": {
		//	            "description": "The greater-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Lte": {
		//	            "description": "The less-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "NetworkDirection": {
		//	      "description": "Indicates the direction of network traffic associated with a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "NetworkProtocol": {
		//	      "description": "The protocol of network-related information about a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "NetworkSourceDomain": {
		//	      "description": "The source domain of network-related information about a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "NetworkSourceIpV4": {
		//	      "description": "The source IPv4 address of network-related information about a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "The IP filter for querying findings.",
		//	        "properties": {
		//	          "Cidr": {
		//	            "description": "A finding's CIDR value.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Cidr"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "NetworkSourceIpV6": {
		//	      "description": "The source IPv6 address of network-related information about a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "The IP filter for querying findings.",
		//	        "properties": {
		//	          "Cidr": {
		//	            "description": "A finding's CIDR value.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Cidr"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "NetworkSourceMac": {
		//	      "description": "The source media access control (MAC) address of network-related information about a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "NetworkSourcePort": {
		//	      "description": "The source port of network-related information about a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A number filter for querying findings.",
		//	        "properties": {
		//	          "Eq": {
		//	            "description": "The equal-to condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Gte": {
		//	            "description": "The greater-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Lte": {
		//	            "description": "The less-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "NoteText": {
		//	      "description": "The text of a note.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "NoteUpdatedAt": {
		//	      "description": "The timestamp of when the note was updated.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A date filter for querying findings.",
		//	        "properties": {
		//	          "DateRange": {
		//	            "additionalProperties": false,
		//	            "description": "A date range for the date filter.",
		//	            "properties": {
		//	              "Unit": {
		//	                "description": "A date range unit for the date filter.",
		//	                "enum": [
		//	                  "DAYS"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "Value": {
		//	                "description": "A date range value for the date filter.",
		//	                "type": "number"
		//	              }
		//	            },
		//	            "required": [
		//	              "Unit",
		//	              "Value"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "End": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          },
		//	          "Start": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "NoteUpdatedBy": {
		//	      "description": "The principal that created a note.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ProcessLaunchedAt": {
		//	      "description": "A timestamp that identifies when the process was launched.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A date filter for querying findings.",
		//	        "properties": {
		//	          "DateRange": {
		//	            "additionalProperties": false,
		//	            "description": "A date range for the date filter.",
		//	            "properties": {
		//	              "Unit": {
		//	                "description": "A date range unit for the date filter.",
		//	                "enum": [
		//	                  "DAYS"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "Value": {
		//	                "description": "A date range value for the date filter.",
		//	                "type": "number"
		//	              }
		//	            },
		//	            "required": [
		//	              "Unit",
		//	              "Value"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "End": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          },
		//	          "Start": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ProcessName": {
		//	      "description": "The name of the process.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ProcessParentPid": {
		//	      "description": "The parent process ID.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A number filter for querying findings.",
		//	        "properties": {
		//	          "Eq": {
		//	            "description": "The equal-to condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Gte": {
		//	            "description": "The greater-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Lte": {
		//	            "description": "The less-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ProcessPath": {
		//	      "description": "The path to the process executable.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ProcessPid": {
		//	      "description": "The process ID.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A number filter for querying findings.",
		//	        "properties": {
		//	          "Eq": {
		//	            "description": "The equal-to condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Gte": {
		//	            "description": "The greater-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Lte": {
		//	            "description": "The less-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ProcessTerminatedAt": {
		//	      "description": "A timestamp that identifies when the process was terminated.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A date filter for querying findings.",
		//	        "properties": {
		//	          "DateRange": {
		//	            "additionalProperties": false,
		//	            "description": "A date range for the date filter.",
		//	            "properties": {
		//	              "Unit": {
		//	                "description": "A date range unit for the date filter.",
		//	                "enum": [
		//	                  "DAYS"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "Value": {
		//	                "description": "A date range value for the date filter.",
		//	                "type": "number"
		//	              }
		//	            },
		//	            "required": [
		//	              "Unit",
		//	              "Value"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "End": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          },
		//	          "Start": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ProductArn": {
		//	      "description": "The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ProductFields": {
		//	      "description": "A data type where security findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A map filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to the key value when filtering Security Hub findings with a map filter.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Key": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Key",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ProductName": {
		//	      "description": "The name of the solution (product) that generates findings.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "RecommendationText": {
		//	      "description": "The recommendation of what to do about the issue described in a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "RecordState": {
		//	      "description": "The updated record state for the finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "Region": {
		//	      "description": "The Region from which the finding was generated.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "RelatedFindingsId": {
		//	      "description": "The solution-generated identifier for a related finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "RelatedFindingsProductArn": {
		//	      "description": "The ARN of the solution that generated a related finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceApplicationArn": {
		//	      "description": "The ARN of the application that is related to a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceApplicationName": {
		//	      "description": "The name of the application that is related to a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsEc2InstanceIamInstanceProfileArn": {
		//	      "description": "The IAM profile ARN of the instance.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsEc2InstanceImageId": {
		//	      "description": "The Amazon Machine Image (AMI) ID of the instance.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsEc2InstanceIpV4Addresses": {
		//	      "description": "The IPv4 addresses associated with the instance.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "The IP filter for querying findings.",
		//	        "properties": {
		//	          "Cidr": {
		//	            "description": "A finding's CIDR value.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Cidr"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsEc2InstanceIpV6Addresses": {
		//	      "description": "The IPv6 addresses associated with the instance.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "The IP filter for querying findings.",
		//	        "properties": {
		//	          "Cidr": {
		//	            "description": "A finding's CIDR value.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Cidr"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsEc2InstanceKeyName": {
		//	      "description": "The key name associated with the instance.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsEc2InstanceLaunchedAt": {
		//	      "description": "The date and time the instance was launched.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A date filter for querying findings.",
		//	        "properties": {
		//	          "DateRange": {
		//	            "additionalProperties": false,
		//	            "description": "A date range for the date filter.",
		//	            "properties": {
		//	              "Unit": {
		//	                "description": "A date range unit for the date filter.",
		//	                "enum": [
		//	                  "DAYS"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "Value": {
		//	                "description": "A date range value for the date filter.",
		//	                "type": "number"
		//	              }
		//	            },
		//	            "required": [
		//	              "Unit",
		//	              "Value"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "End": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          },
		//	          "Start": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsEc2InstanceSubnetId": {
		//	      "description": "The identifier of the subnet that the instance was launched in.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsEc2InstanceType": {
		//	      "description": "The instance type of the instance.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsEc2InstanceVpcId": {
		//	      "description": "The identifier of the VPC that the instance was launched in.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsIamAccessKeyCreatedAt": {
		//	      "description": "The creation date/time of the IAM access key related to a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A date filter for querying findings.",
		//	        "properties": {
		//	          "DateRange": {
		//	            "additionalProperties": false,
		//	            "description": "A date range for the date filter.",
		//	            "properties": {
		//	              "Unit": {
		//	                "description": "A date range unit for the date filter.",
		//	                "enum": [
		//	                  "DAYS"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "Value": {
		//	                "description": "A date range value for the date filter.",
		//	                "type": "number"
		//	              }
		//	            },
		//	            "required": [
		//	              "Unit",
		//	              "Value"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "End": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          },
		//	          "Start": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsIamAccessKeyPrincipalName": {
		//	      "description": "The name of the principal that is associated with an IAM access key.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsIamAccessKeyStatus": {
		//	      "description": "The status of the IAM access key related to a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsIamAccessKeyUserName": {
		//	      "description": "The user associated with the IAM access key related to a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsIamUserUserName": {
		//	      "description": "The name of an IAM user.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsS3BucketOwnerId": {
		//	      "description": "The canonical user ID of the owner of the S3 bucket.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceAwsS3BucketOwnerName": {
		//	      "description": "The display name of the owner of the S3 bucket.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceContainerImageId": {
		//	      "description": "The identifier of the image related to a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceContainerImageName": {
		//	      "description": "The name of the image related to a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceContainerLaunchedAt": {
		//	      "description": "A timestamp that identifies when the container was started.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A date filter for querying findings.",
		//	        "properties": {
		//	          "DateRange": {
		//	            "additionalProperties": false,
		//	            "description": "A date range for the date filter.",
		//	            "properties": {
		//	              "Unit": {
		//	                "description": "A date range unit for the date filter.",
		//	                "enum": [
		//	                  "DAYS"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "Value": {
		//	                "description": "A date range value for the date filter.",
		//	                "type": "number"
		//	              }
		//	            },
		//	            "required": [
		//	              "Unit",
		//	              "Value"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "End": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          },
		//	          "Start": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceContainerName": {
		//	      "description": "The name of the container related to a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceDetailsOther": {
		//	      "description": "The details of a resource that doesn't have a specific subfield for the resource type defined.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A map filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to the key value when filtering Security Hub findings with a map filter.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Key": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Key",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceId": {
		//	      "description": "The canonical identifier for the given resource type.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourcePartition": {
		//	      "description": "The canonical AWS partition name that the Region is assigned to.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceRegion": {
		//	      "description": "The canonical AWS external Region name where this resource is located.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceTags": {
		//	      "description": "A list of AWS tags associated with a resource at the time the finding was processed.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A map filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to the key value when filtering Security Hub findings with a map filter.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Key": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Key",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ResourceType": {
		//	      "description": "Specifies the type of the resource that details are provided for.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "Sample": {
		//	      "description": "Indicates whether or not sample findings are included in the filter results.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "Boolean filter for querying findings.",
		//	        "properties": {
		//	          "Value": {
		//	            "description": "The value of the boolean.",
		//	            "type": "boolean"
		//	          }
		//	        },
		//	        "required": [
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "SeverityLabel": {
		//	      "description": "The label of a finding's severity.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "SeverityNormalized": {
		//	      "description": "The normalized severity of a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A number filter for querying findings.",
		//	        "properties": {
		//	          "Eq": {
		//	            "description": "The equal-to condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Gte": {
		//	            "description": "The greater-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Lte": {
		//	            "description": "The less-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "SeverityProduct": {
		//	      "description": "The native severity as defined by the security findings provider's solution that generated the finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A number filter for querying findings.",
		//	        "properties": {
		//	          "Eq": {
		//	            "description": "The equal-to condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Gte": {
		//	            "description": "The greater-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          },
		//	          "Lte": {
		//	            "description": "The less-than-equal condition to be applied to a single field when querying for findings.",
		//	            "type": "number"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "SourceUrl": {
		//	      "description": "A URL that links to a page about the current finding in the security findings provider's solution.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ThreatIntelIndicatorCategory": {
		//	      "description": "The category of a threat intelligence indicator.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ThreatIntelIndicatorLastObservedAt": {
		//	      "description": "A timestamp that identifies the last observation of a threat intelligence indicator.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A date filter for querying findings.",
		//	        "properties": {
		//	          "DateRange": {
		//	            "additionalProperties": false,
		//	            "description": "A date range for the date filter.",
		//	            "properties": {
		//	              "Unit": {
		//	                "description": "A date range unit for the date filter.",
		//	                "enum": [
		//	                  "DAYS"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "Value": {
		//	                "description": "A date range value for the date filter.",
		//	                "type": "number"
		//	              }
		//	            },
		//	            "required": [
		//	              "Unit",
		//	              "Value"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "End": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          },
		//	          "Start": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ThreatIntelIndicatorSource": {
		//	      "description": "The source of the threat intelligence.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ThreatIntelIndicatorSourceUrl": {
		//	      "description": "The URL for more details from the source of the threat intelligence.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ThreatIntelIndicatorType": {
		//	      "description": "The type of a threat intelligence indicator.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "ThreatIntelIndicatorValue": {
		//	      "description": "The value of a threat intelligence indicator.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "Title": {
		//	      "description": "A finding's title.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "Type": {
		//	      "description": "A finding type in the format of namespace/category/classifier that classifies a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "UpdatedAt": {
		//	      "description": "An ISO8601-formatted timestamp that indicates when the security findings provider last updated the finding record.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A date filter for querying findings.",
		//	        "properties": {
		//	          "DateRange": {
		//	            "additionalProperties": false,
		//	            "description": "A date range for the date filter.",
		//	            "properties": {
		//	              "Unit": {
		//	                "description": "A date range unit for the date filter.",
		//	                "enum": [
		//	                  "DAYS"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "Value": {
		//	                "description": "A date range value for the date filter.",
		//	                "type": "number"
		//	              }
		//	            },
		//	            "required": [
		//	              "Unit",
		//	              "Value"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "End": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          },
		//	          "Start": {
		//	            "description": "The date and time, in UTC and ISO 8601 format.",
		//	            "pattern": "",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "UserDefinedFields": {
		//	      "description": "A list of name/value string pairs associated with the finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A map filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to the key value when filtering Security Hub findings with a map filter.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Key": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Key",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "VerificationState": {
		//	      "description": "The veracity of a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "VulnerabilitiesExploitAvailable": {
		//	      "description": "Indicates whether a software vulnerability in your environment has a known exploit.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "VulnerabilitiesFixAvailable": {
		//	      "description": "Indicates whether a vulnerability is fixed in a newer version of the affected software packages.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "WorkflowState": {
		//	      "description": "The workflow state of a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "WorkflowStatus": {
		//	      "description": "The status of the investigation into a finding.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "description": "A string filter for filtering AWS Security Hub findings.",
		//	        "properties": {
		//	          "Comparison": {
		//	            "description": "The condition to apply to a string value when filtering Security Hub findings.",
		//	            "enum": [
		//	              "EQUALS",
		//	              "PREFIX",
		//	              "NOT_EQUALS",
		//	              "PREFIX_NOT_EQUALS"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "Value": {
		//	            "description": "Non-empty string definition.",
		//	            "minLength": 1,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "Comparison",
		//	          "Value"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "maxItems": 20,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"filters": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: AwsAccountId
				"aws_account_id": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The AWS account ID in which a finding is generated.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: AwsAccountName
				"aws_account_name": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The name of the AWS account in which a finding is generated.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: CompanyName
				"company_name": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The name of the findings provider (company) that owns the solution (product) that generates findings.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ComplianceAssociatedStandardsId
				"compliance_associated_standards_id": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The unique identifier of a standard in which a control is enabled.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ComplianceSecurityControlId
				"compliance_security_control_id": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The unique identifier of a control across standards.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ComplianceSecurityControlParametersName
				"compliance_security_control_parameters_name": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The name of a security control parameter.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ComplianceSecurityControlParametersValue
				"compliance_security_control_parameters_value": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The current value of a security control parameter.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ComplianceStatus
				"compliance_status": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Confidence
				"confidence": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Eq
							"eq": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The equal-to condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Gte
							"gte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The greater-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Lte
							"lte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The less-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "A finding's confidence.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: CreatedAt
				"created_at": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: DateRange
							"date_range": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: Unit
									"unit": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "A date range unit for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: Value
									"value": schema.Float64Attribute{ /*START ATTRIBUTE*/
										Description: "A date range value for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Description: "A date range for the date filter.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: End
							"end": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Start
							"start": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "An ISO8601-formatted timestamp that indicates when the security findings provider captured the potential security issue that a finding captured.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Criticality
				"criticality": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Eq
							"eq": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The equal-to condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Gte
							"gte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The greater-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Lte
							"lte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The less-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The level of importance assigned to the resources associated with the finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Description
				"description": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "A finding's description.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: FindingProviderFieldsConfidence
				"finding_provider_fields_confidence": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Eq
							"eq": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The equal-to condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Gte
							"gte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The greater-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Lte
							"lte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The less-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The finding provider value for the finding confidence.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: FindingProviderFieldsCriticality
				"finding_provider_fields_criticality": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Eq
							"eq": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The equal-to condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Gte
							"gte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The greater-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Lte
							"lte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The less-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The finding provider value for the level of importance assigned to the resources associated with the findings.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: FindingProviderFieldsRelatedFindingsId
				"finding_provider_fields_related_findings_id": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The finding identifier of a related finding that is identified by the finding provider.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: FindingProviderFieldsRelatedFindingsProductArn
				"finding_provider_fields_related_findings_product_arn": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The ARN of the solution that generated a related finding that is identified by the finding provider.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: FindingProviderFieldsSeverityLabel
				"finding_provider_fields_severity_label": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The finding provider value for the severity label.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: FindingProviderFieldsSeverityOriginal
				"finding_provider_fields_severity_original": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The finding provider's original value for the severity.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: FindingProviderFieldsTypes
				"finding_provider_fields_types": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "One or more finding types that the finding provider assigned to the finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: FirstObservedAt
				"first_observed_at": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: DateRange
							"date_range": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: Unit
									"unit": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "A date range unit for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: Value
									"value": schema.Float64Attribute{ /*START ATTRIBUTE*/
										Description: "A date range value for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Description: "A date range for the date filter.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: End
							"end": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Start
							"start": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "An ISO8601-formatted timestamp that indicates when the security findings provider first observed the potential security issue that a finding captured.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: GeneratorId
				"generator_id": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The identifier for the solution-specific component (a discrete unit of logic) that generated a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Id
				"id": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The security findings provider-specific identifier for a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Keyword
				"keyword": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "A value for the keyword.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "A keyword for a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: LastObservedAt
				"last_observed_at": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: DateRange
							"date_range": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: Unit
									"unit": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "A date range unit for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: Value
									"value": schema.Float64Attribute{ /*START ATTRIBUTE*/
										Description: "A date range value for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Description: "A date range for the date filter.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: End
							"end": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Start
							"start": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "An ISO8601-formatted timestamp that indicates when the security findings provider most recently observed the potential security issue that a finding captured.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: MalwareName
				"malware_name": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The name of the malware that was observed.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: MalwarePath
				"malware_path": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The filesystem path of the malware that was observed.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: MalwareState
				"malware_state": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The state of the malware that was observed.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: MalwareType
				"malware_type": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The type of the malware that was observed.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: NetworkDestinationDomain
				"network_destination_domain": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The destination domain of network-related information about a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: NetworkDestinationIpV4
				"network_destination_ip_v4": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Cidr
							"cidr": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "A finding's CIDR value.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The destination IPv4 address of network-related information about a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: NetworkDestinationIpV6
				"network_destination_ip_v6": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Cidr
							"cidr": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "A finding's CIDR value.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The destination IPv6 address of network-related information about a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: NetworkDestinationPort
				"network_destination_port": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Eq
							"eq": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The equal-to condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Gte
							"gte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The greater-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Lte
							"lte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The less-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The destination port of network-related information about a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: NetworkDirection
				"network_direction": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "Indicates the direction of network traffic associated with a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: NetworkProtocol
				"network_protocol": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The protocol of network-related information about a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: NetworkSourceDomain
				"network_source_domain": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The source domain of network-related information about a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: NetworkSourceIpV4
				"network_source_ip_v4": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Cidr
							"cidr": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "A finding's CIDR value.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The source IPv4 address of network-related information about a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: NetworkSourceIpV6
				"network_source_ip_v6": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Cidr
							"cidr": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "A finding's CIDR value.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The source IPv6 address of network-related information about a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: NetworkSourceMac
				"network_source_mac": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The source media access control (MAC) address of network-related information about a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: NetworkSourcePort
				"network_source_port": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Eq
							"eq": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The equal-to condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Gte
							"gte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The greater-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Lte
							"lte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The less-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The source port of network-related information about a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: NoteText
				"note_text": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The text of a note.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: NoteUpdatedAt
				"note_updated_at": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: DateRange
							"date_range": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: Unit
									"unit": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "A date range unit for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: Value
									"value": schema.Float64Attribute{ /*START ATTRIBUTE*/
										Description: "A date range value for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Description: "A date range for the date filter.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: End
							"end": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Start
							"start": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The timestamp of when the note was updated.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: NoteUpdatedBy
				"note_updated_by": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The principal that created a note.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ProcessLaunchedAt
				"process_launched_at": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: DateRange
							"date_range": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: Unit
									"unit": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "A date range unit for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: Value
									"value": schema.Float64Attribute{ /*START ATTRIBUTE*/
										Description: "A date range value for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Description: "A date range for the date filter.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: End
							"end": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Start
							"start": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "A timestamp that identifies when the process was launched.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ProcessName
				"process_name": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The name of the process.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ProcessParentPid
				"process_parent_pid": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Eq
							"eq": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The equal-to condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Gte
							"gte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The greater-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Lte
							"lte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The less-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The parent process ID.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ProcessPath
				"process_path": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The path to the process executable.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ProcessPid
				"process_pid": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Eq
							"eq": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The equal-to condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Gte
							"gte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The greater-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Lte
							"lte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The less-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The process ID.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ProcessTerminatedAt
				"process_terminated_at": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: DateRange
							"date_range": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: Unit
									"unit": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "A date range unit for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: Value
									"value": schema.Float64Attribute{ /*START ATTRIBUTE*/
										Description: "A date range value for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Description: "A date range for the date filter.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: End
							"end": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Start
							"start": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "A timestamp that identifies when the process was terminated.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ProductArn
				"product_arn": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ProductFields
				"product_fields": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to the key value when filtering Security Hub findings with a map filter.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Key
							"key": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "A data type where security findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ProductName
				"product_name": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The name of the solution (product) that generates findings.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: RecommendationText
				"recommendation_text": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The recommendation of what to do about the issue described in a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: RecordState
				"record_state": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The updated record state for the finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Region
				"region": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The Region from which the finding was generated.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: RelatedFindingsId
				"related_findings_id": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The solution-generated identifier for a related finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: RelatedFindingsProductArn
				"related_findings_product_arn": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The ARN of the solution that generated a related finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceApplicationArn
				"resource_application_arn": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The ARN of the application that is related to a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceApplicationName
				"resource_application_name": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The name of the application that is related to a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsEc2InstanceIamInstanceProfileArn
				"resource_aws_ec_2_instance_iam_instance_profile_arn": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The IAM profile ARN of the instance.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsEc2InstanceImageId
				"resource_aws_ec_2_instance_image_id": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The Amazon Machine Image (AMI) ID of the instance.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsEc2InstanceIpV4Addresses
				"resource_aws_ec_2_instance_ip_v4_addresses": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Cidr
							"cidr": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "A finding's CIDR value.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The IPv4 addresses associated with the instance.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsEc2InstanceIpV6Addresses
				"resource_aws_ec_2_instance_ip_v6_addresses": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Cidr
							"cidr": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "A finding's CIDR value.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The IPv6 addresses associated with the instance.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsEc2InstanceKeyName
				"resource_aws_ec_2_instance_key_name": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The key name associated with the instance.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsEc2InstanceLaunchedAt
				"resource_aws_ec_2_instance_launched_at": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: DateRange
							"date_range": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: Unit
									"unit": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "A date range unit for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: Value
									"value": schema.Float64Attribute{ /*START ATTRIBUTE*/
										Description: "A date range value for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Description: "A date range for the date filter.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: End
							"end": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Start
							"start": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The date and time the instance was launched.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsEc2InstanceSubnetId
				"resource_aws_ec_2_instance_subnet_id": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The identifier of the subnet that the instance was launched in.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsEc2InstanceType
				"resource_aws_ec_2_instance_type": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The instance type of the instance.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsEc2InstanceVpcId
				"resource_aws_ec_2_instance_vpc_id": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The identifier of the VPC that the instance was launched in.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsIamAccessKeyCreatedAt
				"resource_aws_iam_access_key_created_at": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: DateRange
							"date_range": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: Unit
									"unit": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "A date range unit for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: Value
									"value": schema.Float64Attribute{ /*START ATTRIBUTE*/
										Description: "A date range value for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Description: "A date range for the date filter.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: End
							"end": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Start
							"start": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The creation date/time of the IAM access key related to a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsIamAccessKeyPrincipalName
				"resource_aws_iam_access_key_principal_name": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The name of the principal that is associated with an IAM access key.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsIamAccessKeyStatus
				"resource_aws_iam_access_key_status": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The status of the IAM access key related to a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsIamAccessKeyUserName
				"resource_aws_iam_access_key_user_name": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The user associated with the IAM access key related to a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsIamUserUserName
				"resource_aws_iam_user_user_name": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The name of an IAM user.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsS3BucketOwnerId
				"resource_aws_s3_bucket_owner_id": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The canonical user ID of the owner of the S3 bucket.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceAwsS3BucketOwnerName
				"resource_aws_s3_bucket_owner_name": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The display name of the owner of the S3 bucket.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceContainerImageId
				"resource_container_image_id": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The identifier of the image related to a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceContainerImageName
				"resource_container_image_name": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The name of the image related to a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceContainerLaunchedAt
				"resource_container_launched_at": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: DateRange
							"date_range": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: Unit
									"unit": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "A date range unit for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: Value
									"value": schema.Float64Attribute{ /*START ATTRIBUTE*/
										Description: "A date range value for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Description: "A date range for the date filter.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: End
							"end": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Start
							"start": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "A timestamp that identifies when the container was started.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceContainerName
				"resource_container_name": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The name of the container related to a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceDetailsOther
				"resource_details_other": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to the key value when filtering Security Hub findings with a map filter.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Key
							"key": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The details of a resource that doesn't have a specific subfield for the resource type defined.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceId
				"resource_id": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The canonical identifier for the given resource type.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourcePartition
				"resource_partition": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The canonical AWS partition name that the Region is assigned to.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceRegion
				"resource_region": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The canonical AWS external Region name where this resource is located.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceTags
				"resource_tags": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to the key value when filtering Security Hub findings with a map filter.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Key
							"key": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "A list of AWS tags associated with a resource at the time the finding was processed.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ResourceType
				"resource_type": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "Specifies the type of the resource that details are provided for.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Sample
				"sample": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Value
							"value": schema.BoolAttribute{ /*START ATTRIBUTE*/
								Description: "The value of the boolean.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "Indicates whether or not sample findings are included in the filter results.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: SeverityLabel
				"severity_label": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The label of a finding's severity.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: SeverityNormalized
				"severity_normalized": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Eq
							"eq": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The equal-to condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Gte
							"gte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The greater-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Lte
							"lte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The less-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The normalized severity of a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: SeverityProduct
				"severity_product": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Eq
							"eq": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The equal-to condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Gte
							"gte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The greater-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Lte
							"lte": schema.Float64Attribute{ /*START ATTRIBUTE*/
								Description: "The less-than-equal condition to be applied to a single field when querying for findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The native severity as defined by the security findings provider's solution that generated the finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: SourceUrl
				"source_url": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "A URL that links to a page about the current finding in the security findings provider's solution.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ThreatIntelIndicatorCategory
				"threat_intel_indicator_category": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The category of a threat intelligence indicator.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ThreatIntelIndicatorLastObservedAt
				"threat_intel_indicator_last_observed_at": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: DateRange
							"date_range": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: Unit
									"unit": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "A date range unit for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: Value
									"value": schema.Float64Attribute{ /*START ATTRIBUTE*/
										Description: "A date range value for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Description: "A date range for the date filter.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: End
							"end": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Start
							"start": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "A timestamp that identifies the last observation of a threat intelligence indicator.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ThreatIntelIndicatorSource
				"threat_intel_indicator_source": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The source of the threat intelligence.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ThreatIntelIndicatorSourceUrl
				"threat_intel_indicator_source_url": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The URL for more details from the source of the threat intelligence.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ThreatIntelIndicatorType
				"threat_intel_indicator_type": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The type of a threat intelligence indicator.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ThreatIntelIndicatorValue
				"threat_intel_indicator_value": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The value of a threat intelligence indicator.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Title
				"title": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "A finding's title.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Type
				"type": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "A finding type in the format of namespace/category/classifier that classifies a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: UpdatedAt
				"updated_at": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: DateRange
							"date_range": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: Unit
									"unit": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "A date range unit for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: Value
									"value": schema.Float64Attribute{ /*START ATTRIBUTE*/
										Description: "A date range value for the date filter.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Description: "A date range for the date filter.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: End
							"end": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Start
							"start": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The date and time, in UTC and ISO 8601 format.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "An ISO8601-formatted timestamp that indicates when the security findings provider last updated the finding record.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: UserDefinedFields
				"user_defined_fields": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to the key value when filtering Security Hub findings with a map filter.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Key
							"key": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "A list of name/value string pairs associated with the finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: VerificationState
				"verification_state": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The veracity of a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: VulnerabilitiesExploitAvailable
				"vulnerabilities_exploit_available": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "Indicates whether a software vulnerability in your environment has a known exploit.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: VulnerabilitiesFixAvailable
				"vulnerabilities_fix_available": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "Indicates whether a vulnerability is fixed in a newer version of the affected software packages.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: WorkflowState
				"workflow_state": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The workflow state of a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: WorkflowStatus
				"workflow_status": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Comparison
							"comparison": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The condition to apply to a string value when filtering Security Hub findings.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Value
							"value": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "Non-empty string definition.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "The status of the investigation into a finding.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "One or more attributes used to filter the findings included in the insight",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: GroupByAttribute
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The grouping attribute for the insight's findings",
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"group_by_attribute": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The grouping attribute for the insight's findings",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InsightArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The ARN of a Security Hub insight",
		//	  "pattern": "arn:aws\\S*:securityhub:\\S*",
		//	  "type": "string"
		//	}
		"insight_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The ARN of a Security Hub insight",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Name
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The name of a Security Hub insight",
		//	  "maxLength": 128,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The name of a Security Hub insight",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::SecurityHub::Insight",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::SecurityHub::Insight").WithTerraformTypeName("awscc_securityhub_insight")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"aws_account_id":                     "AwsAccountId",
		"aws_account_name":                   "AwsAccountName",
		"cidr":                               "Cidr",
		"company_name":                       "CompanyName",
		"comparison":                         "Comparison",
		"compliance_associated_standards_id": "ComplianceAssociatedStandardsId",
		"compliance_security_control_id":     "ComplianceSecurityControlId",
		"compliance_security_control_parameters_name":  "ComplianceSecurityControlParametersName",
		"compliance_security_control_parameters_value": "ComplianceSecurityControlParametersValue",
		"compliance_status":                            "ComplianceStatus",
		"confidence":                                   "Confidence",
		"created_at":                                   "CreatedAt",
		"criticality":                                  "Criticality",
		"date_range":                                   "DateRange",
		"description":                                  "Description",
		"end":                                          "End",
		"eq":                                           "Eq",
		"filters":                                      "Filters",
		"finding_provider_fields_confidence":           "FindingProviderFieldsConfidence",
		"finding_provider_fields_criticality":          "FindingProviderFieldsCriticality",
		"finding_provider_fields_related_findings_id":          "FindingProviderFieldsRelatedFindingsId",
		"finding_provider_fields_related_findings_product_arn": "FindingProviderFieldsRelatedFindingsProductArn",
		"finding_provider_fields_severity_label":               "FindingProviderFieldsSeverityLabel",
		"finding_provider_fields_severity_original":            "FindingProviderFieldsSeverityOriginal",
		"finding_provider_fields_types":                        "FindingProviderFieldsTypes",
		"first_observed_at":                                    "FirstObservedAt",
		"generator_id":                                         "GeneratorId",
		"group_by_attribute":                                   "GroupByAttribute",
		"gte":                                                  "Gte",
		"id":                                                   "Id",
		"insight_arn":                                          "InsightArn",
		"key":                                                  "Key",
		"keyword":                                              "Keyword",
		"last_observed_at":                                     "LastObservedAt",
		"lte":                                                  "Lte",
		"malware_name":                                         "MalwareName",
		"malware_path":                                         "MalwarePath",
		"malware_state":                                        "MalwareState",
		"malware_type":                                         "MalwareType",
		"name":                                                 "Name",
		"network_destination_domain":                           "NetworkDestinationDomain",
		"network_destination_ip_v4":                            "NetworkDestinationIpV4",
		"network_destination_ip_v6":                            "NetworkDestinationIpV6",
		"network_destination_port":                             "NetworkDestinationPort",
		"network_direction":                                    "NetworkDirection",
		"network_protocol":                                     "NetworkProtocol",
		"network_source_domain":                                "NetworkSourceDomain",
		"network_source_ip_v4":                                 "NetworkSourceIpV4",
		"network_source_ip_v6":                                 "NetworkSourceIpV6",
		"network_source_mac":                                   "NetworkSourceMac",
		"network_source_port":                                  "NetworkSourcePort",
		"note_text":                                            "NoteText",
		"note_updated_at":                                      "NoteUpdatedAt",
		"note_updated_by":                                      "NoteUpdatedBy",
		"process_launched_at":                                  "ProcessLaunchedAt",
		"process_name":                                         "ProcessName",
		"process_parent_pid":                                   "ProcessParentPid",
		"process_path":                                         "ProcessPath",
		"process_pid":                                          "ProcessPid",
		"process_terminated_at":                                "ProcessTerminatedAt",
		"product_arn":                                          "ProductArn",
		"product_fields":                                       "ProductFields",
		"product_name":                                         "ProductName",
		"recommendation_text":                                  "RecommendationText",
		"record_state":                                         "RecordState",
		"region":                                               "Region",
		"related_findings_id":                                  "RelatedFindingsId",
		"related_findings_product_arn":                         "RelatedFindingsProductArn",
		"resource_application_arn":                             "ResourceApplicationArn",
		"resource_application_name":                            "ResourceApplicationName",
		"resource_aws_ec_2_instance_iam_instance_profile_arn": "ResourceAwsEc2InstanceIamInstanceProfileArn",
		"resource_aws_ec_2_instance_image_id":                 "ResourceAwsEc2InstanceImageId",
		"resource_aws_ec_2_instance_ip_v4_addresses":          "ResourceAwsEc2InstanceIpV4Addresses",
		"resource_aws_ec_2_instance_ip_v6_addresses":          "ResourceAwsEc2InstanceIpV6Addresses",
		"resource_aws_ec_2_instance_key_name":                 "ResourceAwsEc2InstanceKeyName",
		"resource_aws_ec_2_instance_launched_at":              "ResourceAwsEc2InstanceLaunchedAt",
		"resource_aws_ec_2_instance_subnet_id":                "ResourceAwsEc2InstanceSubnetId",
		"resource_aws_ec_2_instance_type":                     "ResourceAwsEc2InstanceType",
		"resource_aws_ec_2_instance_vpc_id":                   "ResourceAwsEc2InstanceVpcId",
		"resource_aws_iam_access_key_created_at":              "ResourceAwsIamAccessKeyCreatedAt",
		"resource_aws_iam_access_key_principal_name":          "ResourceAwsIamAccessKeyPrincipalName",
		"resource_aws_iam_access_key_status":                  "ResourceAwsIamAccessKeyStatus",
		"resource_aws_iam_access_key_user_name":               "ResourceAwsIamAccessKeyUserName",
		"resource_aws_iam_user_user_name":                     "ResourceAwsIamUserUserName",
		"resource_aws_s3_bucket_owner_id":                     "ResourceAwsS3BucketOwnerId",
		"resource_aws_s3_bucket_owner_name":                   "ResourceAwsS3BucketOwnerName",
		"resource_container_image_id":                         "ResourceContainerImageId",
		"resource_container_image_name":                       "ResourceContainerImageName",
		"resource_container_launched_at":                      "ResourceContainerLaunchedAt",
		"resource_container_name":                             "ResourceContainerName",
		"resource_details_other":                              "ResourceDetailsOther",
		"resource_id":                                         "ResourceId",
		"resource_partition":                                  "ResourcePartition",
		"resource_region":                                     "ResourceRegion",
		"resource_tags":                                       "ResourceTags",
		"resource_type":                                       "ResourceType",
		"sample":                                              "Sample",
		"severity_label":                                      "SeverityLabel",
		"severity_normalized":                                 "SeverityNormalized",
		"severity_product":                                    "SeverityProduct",
		"source_url":                                          "SourceUrl",
		"start":                                               "Start",
		"threat_intel_indicator_category":                     "ThreatIntelIndicatorCategory",
		"threat_intel_indicator_last_observed_at":             "ThreatIntelIndicatorLastObservedAt",
		"threat_intel_indicator_source":                       "ThreatIntelIndicatorSource",
		"threat_intel_indicator_source_url":                   "ThreatIntelIndicatorSourceUrl",
		"threat_intel_indicator_type":                         "ThreatIntelIndicatorType",
		"threat_intel_indicator_value":                        "ThreatIntelIndicatorValue",
		"title":                                               "Title",
		"type":                                                "Type",
		"unit":                                                "Unit",
		"updated_at":                                          "UpdatedAt",
		"user_defined_fields":                                 "UserDefinedFields",
		"value":                                               "Value",
		"verification_state":                                  "VerificationState",
		"vulnerabilities_exploit_available":                   "VulnerabilitiesExploitAvailable",
		"vulnerabilities_fix_available":                       "VulnerabilitiesFixAvailable",
		"workflow_state":                                      "WorkflowState",
		"workflow_status":                                     "WorkflowStatus",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
