// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package sagemaker

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_sagemaker_domain", domainDataSource)
}

// domainDataSource returns the Terraform awscc_sagemaker_domain data source.
// This Terraform data source corresponds to the CloudFormation AWS::SageMaker::Domain resource.
func domainDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: AppNetworkAccessType
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Specifies the VPC used for non-EFS traffic. The default value is PublicInternetOnly.",
		//	  "enum": [
		//	    "PublicInternetOnly",
		//	    "VpcOnly"
		//	  ],
		//	  "type": "string"
		//	}
		"app_network_access_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Specifies the VPC used for non-EFS traffic. The default value is PublicInternetOnly.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: AppSecurityGroupManagement
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The entity that creates and manages the required security groups for inter-app communication in VPCOnly mode. Required when CreateDomain.AppNetworkAccessType is VPCOnly and DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleArn is provided.",
		//	  "enum": [
		//	    "Service",
		//	    "Customer"
		//	  ],
		//	  "type": "string"
		//	}
		"app_security_group_management": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The entity that creates and manages the required security groups for inter-app communication in VPCOnly mode. Required when CreateDomain.AppNetworkAccessType is VPCOnly and DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleArn is provided.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: AuthMode
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The mode of authentication that members use to access the domain.",
		//	  "enum": [
		//	    "SSO",
		//	    "IAM"
		//	  ],
		//	  "type": "string"
		//	}
		"auth_mode": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The mode of authentication that members use to access the domain.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DefaultSpaceSettings
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "The default space settings.",
		//	  "properties": {
		//	    "CustomFileSystemConfigs": {
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "properties": {
		//	          "EFSFileSystemConfig": {
		//	            "additionalProperties": false,
		//	            "properties": {
		//	              "FileSystemId": {
		//	                "maxLength": 21,
		//	                "minLength": 11,
		//	                "pattern": "^(fs-[0-9a-f]{8,})$",
		//	                "type": "string"
		//	              },
		//	              "FileSystemPath": {
		//	                "maxLength": 256,
		//	                "minLength": 1,
		//	                "pattern": "^\\/\\S*$",
		//	                "type": "string"
		//	              }
		//	            },
		//	            "required": [
		//	              "FileSystemId"
		//	            ],
		//	            "type": "object"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 2,
		//	      "minItems": 0,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "CustomPosixUserConfig": {
		//	      "additionalProperties": false,
		//	      "description": "The Jupyter lab's custom posix user configurations.",
		//	      "properties": {
		//	        "Gid": {
		//	          "maximum": 4000000,
		//	          "minimum": 1001,
		//	          "type": "integer"
		//	        },
		//	        "Uid": {
		//	          "maximum": 4000000,
		//	          "minimum": 10000,
		//	          "type": "integer"
		//	        }
		//	      },
		//	      "required": [
		//	        "Uid",
		//	        "Gid"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "ExecutionRole": {
		//	      "description": "The execution role for the space.",
		//	      "maxLength": 2048,
		//	      "minLength": 20,
		//	      "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
		//	      "type": "string"
		//	    },
		//	    "JupyterLabAppSettings": {
		//	      "additionalProperties": false,
		//	      "description": "The Jupyter lab's app settings.",
		//	      "properties": {
		//	        "AppLifecycleManagement": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "IdleSettings": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "IdleTimeoutInMinutes": {
		//	                  "description": "The idle timeout value set in minutes",
		//	                  "maximum": 525600,
		//	                  "minimum": 60,
		//	                  "type": "integer"
		//	                },
		//	                "LifecycleManagement": {
		//	                  "description": "A flag to enable/disable AppLifecycleManagement settings",
		//	                  "enum": [
		//	                    "ENABLED",
		//	                    "DISABLED"
		//	                  ],
		//	                  "type": "string"
		//	                },
		//	                "MaxIdleTimeoutInMinutes": {
		//	                  "description": "The maximum idle timeout value set in minutes",
		//	                  "maximum": 525600,
		//	                  "minimum": 60,
		//	                  "type": "integer"
		//	                },
		//	                "MinIdleTimeoutInMinutes": {
		//	                  "description": "The minimum idle timeout value set in minutes",
		//	                  "maximum": 525600,
		//	                  "minimum": 60,
		//	                  "type": "integer"
		//	                }
		//	              },
		//	              "type": "object"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "CodeRepositories": {
		//	          "description": "A list of CodeRepositories available for use with JupyterLab apps.",
		//	          "items": {
		//	            "additionalProperties": false,
		//	            "properties": {
		//	              "RepositoryUrl": {
		//	                "description": "A CodeRepository (valid URL) to be used within Jupyter's Git extension.",
		//	                "maxLength": 256,
		//	                "pattern": "",
		//	                "type": "string"
		//	              }
		//	            },
		//	            "required": [
		//	              "RepositoryUrl"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "maxItems": 30,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        },
		//	        "CustomImages": {
		//	          "description": "A list of custom images for use for JupyterLab apps.",
		//	          "items": {
		//	            "additionalProperties": false,
		//	            "description": "A custom SageMaker image.",
		//	            "properties": {
		//	              "AppImageConfigName": {
		//	                "description": "The Name of the AppImageConfig.",
		//	                "maxLength": 63,
		//	                "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
		//	                "type": "string"
		//	              },
		//	              "ImageName": {
		//	                "description": "The name of the CustomImage. Must be unique to your account.",
		//	                "maxLength": 63,
		//	                "pattern": "^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$",
		//	                "type": "string"
		//	              },
		//	              "ImageVersionNumber": {
		//	                "description": "The version number of the CustomImage.",
		//	                "minimum": 0,
		//	                "type": "integer"
		//	              }
		//	            },
		//	            "required": [
		//	              "AppImageConfigName",
		//	              "ImageName"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "maxItems": 200,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        },
		//	        "DefaultResourceSpec": {
		//	          "additionalProperties": false,
		//	          "description": "The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterLab app.",
		//	          "properties": {
		//	            "InstanceType": {
		//	              "description": "The instance type that the image version runs on.",
		//	              "enum": [
		//	                "system",
		//	                "ml.t3.micro",
		//	                "ml.t3.small",
		//	                "ml.t3.medium",
		//	                "ml.t3.large",
		//	                "ml.t3.xlarge",
		//	                "ml.t3.2xlarge",
		//	                "ml.m5.large",
		//	                "ml.m5.xlarge",
		//	                "ml.m5.2xlarge",
		//	                "ml.m5.4xlarge",
		//	                "ml.m5.8xlarge",
		//	                "ml.m5.12xlarge",
		//	                "ml.m5.16xlarge",
		//	                "ml.m5.24xlarge",
		//	                "ml.c5.large",
		//	                "ml.c5.xlarge",
		//	                "ml.c5.2xlarge",
		//	                "ml.c5.4xlarge",
		//	                "ml.c5.9xlarge",
		//	                "ml.c5.12xlarge",
		//	                "ml.c5.18xlarge",
		//	                "ml.c5.24xlarge",
		//	                "ml.p3.2xlarge",
		//	                "ml.p3.8xlarge",
		//	                "ml.p3.16xlarge",
		//	                "ml.g4dn.xlarge",
		//	                "ml.g4dn.2xlarge",
		//	                "ml.g4dn.4xlarge",
		//	                "ml.g4dn.8xlarge",
		//	                "ml.g4dn.12xlarge",
		//	                "ml.g4dn.16xlarge",
		//	                "ml.r5.large",
		//	                "ml.r5.xlarge",
		//	                "ml.r5.2xlarge",
		//	                "ml.r5.4xlarge",
		//	                "ml.r5.8xlarge",
		//	                "ml.r5.12xlarge",
		//	                "ml.r5.16xlarge",
		//	                "ml.r5.24xlarge",
		//	                "ml.p3dn.24xlarge",
		//	                "ml.m5d.large",
		//	                "ml.m5d.xlarge",
		//	                "ml.m5d.2xlarge",
		//	                "ml.m5d.4xlarge",
		//	                "ml.m5d.8xlarge",
		//	                "ml.m5d.12xlarge",
		//	                "ml.m5d.16xlarge",
		//	                "ml.m5d.24xlarge",
		//	                "ml.g5.xlarge",
		//	                "ml.g5.2xlarge",
		//	                "ml.g5.4xlarge",
		//	                "ml.g5.8xlarge",
		//	                "ml.g5.12xlarge",
		//	                "ml.g5.16xlarge",
		//	                "ml.g5.24xlarge",
		//	                "ml.g5.48xlarge",
		//	                "ml.p4d.24xlarge",
		//	                "ml.p4de.24xlarge",
		//	                "ml.geospatial.interactive",
		//	                "ml.trn1.2xlarge",
		//	                "ml.trn1.32xlarge",
		//	                "ml.trn1n.32xlarge"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "LifecycleConfigArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	              "maxLength": 256,
		//	              "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageVersionArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the image version created on the instance.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$",
		//	              "type": "string"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "LifecycleConfigArns": {
		//	          "description": "A list of LifecycleConfigArns available for use with JupyterLab apps.",
		//	          "items": {
		//	            "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	            "maxLength": 256,
		//	            "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	            "type": "string"
		//	          },
		//	          "maxItems": 30,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "JupyterServerAppSettings": {
		//	      "additionalProperties": false,
		//	      "description": "The Jupyter server's app settings.",
		//	      "properties": {
		//	        "DefaultResourceSpec": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "InstanceType": {
		//	              "description": "The instance type that the image version runs on.",
		//	              "enum": [
		//	                "system",
		//	                "ml.t3.micro",
		//	                "ml.t3.small",
		//	                "ml.t3.medium",
		//	                "ml.t3.large",
		//	                "ml.t3.xlarge",
		//	                "ml.t3.2xlarge",
		//	                "ml.m5.large",
		//	                "ml.m5.xlarge",
		//	                "ml.m5.2xlarge",
		//	                "ml.m5.4xlarge",
		//	                "ml.m5.8xlarge",
		//	                "ml.m5.12xlarge",
		//	                "ml.m5.16xlarge",
		//	                "ml.m5.24xlarge",
		//	                "ml.c5.large",
		//	                "ml.c5.xlarge",
		//	                "ml.c5.2xlarge",
		//	                "ml.c5.4xlarge",
		//	                "ml.c5.9xlarge",
		//	                "ml.c5.12xlarge",
		//	                "ml.c5.18xlarge",
		//	                "ml.c5.24xlarge",
		//	                "ml.p3.2xlarge",
		//	                "ml.p3.8xlarge",
		//	                "ml.p3.16xlarge",
		//	                "ml.g4dn.xlarge",
		//	                "ml.g4dn.2xlarge",
		//	                "ml.g4dn.4xlarge",
		//	                "ml.g4dn.8xlarge",
		//	                "ml.g4dn.12xlarge",
		//	                "ml.g4dn.16xlarge",
		//	                "ml.r5.large",
		//	                "ml.r5.xlarge",
		//	                "ml.r5.2xlarge",
		//	                "ml.r5.4xlarge",
		//	                "ml.r5.8xlarge",
		//	                "ml.r5.12xlarge",
		//	                "ml.r5.16xlarge",
		//	                "ml.r5.24xlarge",
		//	                "ml.p3dn.24xlarge",
		//	                "ml.m5d.large",
		//	                "ml.m5d.xlarge",
		//	                "ml.m5d.2xlarge",
		//	                "ml.m5d.4xlarge",
		//	                "ml.m5d.8xlarge",
		//	                "ml.m5d.12xlarge",
		//	                "ml.m5d.16xlarge",
		//	                "ml.m5d.24xlarge",
		//	                "ml.g5.xlarge",
		//	                "ml.g5.2xlarge",
		//	                "ml.g5.4xlarge",
		//	                "ml.g5.8xlarge",
		//	                "ml.g5.12xlarge",
		//	                "ml.g5.16xlarge",
		//	                "ml.g5.24xlarge",
		//	                "ml.g5.48xlarge",
		//	                "ml.p4d.24xlarge",
		//	                "ml.p4de.24xlarge",
		//	                "ml.geospatial.interactive",
		//	                "ml.trn1.2xlarge",
		//	                "ml.trn1.32xlarge",
		//	                "ml.trn1n.32xlarge"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "LifecycleConfigArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	              "maxLength": 256,
		//	              "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageVersionArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the image version created on the instance.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$",
		//	              "type": "string"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "LifecycleConfigArns": {
		//	          "description": "A list of LifecycleConfigArns available for use with JupyterServer apps.",
		//	          "items": {
		//	            "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	            "maxLength": 256,
		//	            "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	            "type": "string"
		//	          },
		//	          "maxItems": 30,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "KernelGatewayAppSettings": {
		//	      "additionalProperties": false,
		//	      "description": "The kernel gateway app settings.",
		//	      "properties": {
		//	        "CustomImages": {
		//	          "description": "A list of custom SageMaker images that are configured to run as a KernelGateway app.",
		//	          "insertionOrder": false,
		//	          "items": {
		//	            "additionalProperties": false,
		//	            "description": "A custom SageMaker image.",
		//	            "properties": {
		//	              "AppImageConfigName": {
		//	                "description": "The Name of the AppImageConfig.",
		//	                "maxLength": 63,
		//	                "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
		//	                "type": "string"
		//	              },
		//	              "ImageName": {
		//	                "description": "The name of the CustomImage. Must be unique to your account.",
		//	                "maxLength": 63,
		//	                "pattern": "^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$",
		//	                "type": "string"
		//	              },
		//	              "ImageVersionNumber": {
		//	                "description": "The version number of the CustomImage.",
		//	                "minimum": 0,
		//	                "type": "integer"
		//	              }
		//	            },
		//	            "required": [
		//	              "AppImageConfigName",
		//	              "ImageName"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "maxItems": 200,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        },
		//	        "DefaultResourceSpec": {
		//	          "additionalProperties": false,
		//	          "description": "The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.",
		//	          "properties": {
		//	            "InstanceType": {
		//	              "description": "The instance type that the image version runs on.",
		//	              "enum": [
		//	                "system",
		//	                "ml.t3.micro",
		//	                "ml.t3.small",
		//	                "ml.t3.medium",
		//	                "ml.t3.large",
		//	                "ml.t3.xlarge",
		//	                "ml.t3.2xlarge",
		//	                "ml.m5.large",
		//	                "ml.m5.xlarge",
		//	                "ml.m5.2xlarge",
		//	                "ml.m5.4xlarge",
		//	                "ml.m5.8xlarge",
		//	                "ml.m5.12xlarge",
		//	                "ml.m5.16xlarge",
		//	                "ml.m5.24xlarge",
		//	                "ml.c5.large",
		//	                "ml.c5.xlarge",
		//	                "ml.c5.2xlarge",
		//	                "ml.c5.4xlarge",
		//	                "ml.c5.9xlarge",
		//	                "ml.c5.12xlarge",
		//	                "ml.c5.18xlarge",
		//	                "ml.c5.24xlarge",
		//	                "ml.p3.2xlarge",
		//	                "ml.p3.8xlarge",
		//	                "ml.p3.16xlarge",
		//	                "ml.g4dn.xlarge",
		//	                "ml.g4dn.2xlarge",
		//	                "ml.g4dn.4xlarge",
		//	                "ml.g4dn.8xlarge",
		//	                "ml.g4dn.12xlarge",
		//	                "ml.g4dn.16xlarge",
		//	                "ml.r5.large",
		//	                "ml.r5.xlarge",
		//	                "ml.r5.2xlarge",
		//	                "ml.r5.4xlarge",
		//	                "ml.r5.8xlarge",
		//	                "ml.r5.12xlarge",
		//	                "ml.r5.16xlarge",
		//	                "ml.r5.24xlarge",
		//	                "ml.p3dn.24xlarge",
		//	                "ml.m5d.large",
		//	                "ml.m5d.xlarge",
		//	                "ml.m5d.2xlarge",
		//	                "ml.m5d.4xlarge",
		//	                "ml.m5d.8xlarge",
		//	                "ml.m5d.12xlarge",
		//	                "ml.m5d.16xlarge",
		//	                "ml.m5d.24xlarge",
		//	                "ml.g5.xlarge",
		//	                "ml.g5.2xlarge",
		//	                "ml.g5.4xlarge",
		//	                "ml.g5.8xlarge",
		//	                "ml.g5.12xlarge",
		//	                "ml.g5.16xlarge",
		//	                "ml.g5.24xlarge",
		//	                "ml.g5.48xlarge",
		//	                "ml.p4d.24xlarge",
		//	                "ml.p4de.24xlarge",
		//	                "ml.geospatial.interactive",
		//	                "ml.trn1.2xlarge",
		//	                "ml.trn1.32xlarge",
		//	                "ml.trn1n.32xlarge"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "LifecycleConfigArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	              "maxLength": 256,
		//	              "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageVersionArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the image version created on the instance.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$",
		//	              "type": "string"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "LifecycleConfigArns": {
		//	          "description": "A list of LifecycleConfigArns available for use with KernelGateway apps.",
		//	          "items": {
		//	            "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	            "maxLength": 256,
		//	            "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	            "type": "string"
		//	          },
		//	          "maxItems": 30,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "SecurityGroups": {
		//	      "description": "The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.",
		//	      "insertionOrder": false,
		//	      "items": {
		//	        "maxLength": 32,
		//	        "pattern": "[-0-9a-zA-Z]+",
		//	        "type": "string"
		//	      },
		//	      "maxItems": 5,
		//	      "minItems": 0,
		//	      "type": "array",
		//	      "uniqueItems": false
		//	    },
		//	    "SpaceStorageSettings": {
		//	      "additionalProperties": false,
		//	      "description": "The Jupyter lab's space storage settings.",
		//	      "properties": {
		//	        "DefaultEbsStorageSettings": {
		//	          "additionalProperties": false,
		//	          "description": "Properties related to the Amazon Elastic Block Store volume. Must be provided if storage type is Amazon EBS and must not be provided if storage type is not Amazon EBS",
		//	          "properties": {
		//	            "DefaultEbsVolumeSizeInGb": {
		//	              "description": "Default size of the Amazon EBS volume in Gb",
		//	              "maximum": 16384,
		//	              "minimum": 5,
		//	              "type": "integer"
		//	            },
		//	            "MaximumEbsVolumeSizeInGb": {
		//	              "description": "Maximum size of the Amazon EBS volume in Gb. Must be greater than or equal to the DefaultEbsVolumeSizeInGb.",
		//	              "maximum": 16384,
		//	              "minimum": 5,
		//	              "type": "integer"
		//	            }
		//	          },
		//	          "required": [
		//	            "DefaultEbsVolumeSizeInGb",
		//	            "MaximumEbsVolumeSizeInGb"
		//	          ],
		//	          "type": "object"
		//	        }
		//	      },
		//	      "type": "object"
		//	    }
		//	  },
		//	  "required": [
		//	    "ExecutionRole"
		//	  ],
		//	  "type": "object"
		//	}
		"default_space_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: CustomFileSystemConfigs
				"custom_file_system_configs": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: EFSFileSystemConfig
							"efs_file_system_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: FileSystemId
									"file_system_id": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: FileSystemPath
									"file_system_path": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Computed: true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: CustomPosixUserConfig
				"custom_posix_user_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: Gid
						"gid": schema.Int64Attribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: Uid
						"uid": schema.Int64Attribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "The Jupyter lab's custom posix user configurations.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ExecutionRole
				"execution_role": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "The execution role for the space.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: JupyterLabAppSettings
				"jupyter_lab_app_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: AppLifecycleManagement
						"app_lifecycle_management": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: IdleSettings
								"idle_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: IdleTimeoutInMinutes
										"idle_timeout_in_minutes": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The idle timeout value set in minutes",
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: LifecycleManagement
										"lifecycle_management": schema.StringAttribute{ /*START ATTRIBUTE*/
											Description: "A flag to enable/disable AppLifecycleManagement settings",
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: MaxIdleTimeoutInMinutes
										"max_idle_timeout_in_minutes": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The maximum idle timeout value set in minutes",
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: MinIdleTimeoutInMinutes
										"min_idle_timeout_in_minutes": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The minimum idle timeout value set in minutes",
											Computed:    true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: CodeRepositories
						"code_repositories": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: RepositoryUrl
									"repository_url": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "A CodeRepository (valid URL) to be used within Jupyter's Git extension.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Description: "A list of CodeRepositories available for use with JupyterLab apps.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: CustomImages
						"custom_images": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: AppImageConfigName
									"app_image_config_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "The Name of the AppImageConfig.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: ImageName
									"image_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "The name of the CustomImage. Must be unique to your account.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: ImageVersionNumber
									"image_version_number": schema.Int64Attribute{ /*START ATTRIBUTE*/
										Description: "The version number of the CustomImage.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Description: "A list of custom images for use for JupyterLab apps.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: DefaultResourceSpec
						"default_resource_spec": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: InstanceType
								"instance_type": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The instance type that the image version runs on.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: LifecycleConfigArn
								"lifecycle_config_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageArn
								"sage_maker_image_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageVersionArn
								"sage_maker_image_version_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the image version created on the instance.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Description: "The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterLab app.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: LifecycleConfigArns
						"lifecycle_config_arns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Description: "A list of LifecycleConfigArns available for use with JupyterLab apps.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "The Jupyter lab's app settings.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: JupyterServerAppSettings
				"jupyter_server_app_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: DefaultResourceSpec
						"default_resource_spec": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: InstanceType
								"instance_type": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The instance type that the image version runs on.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: LifecycleConfigArn
								"lifecycle_config_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageArn
								"sage_maker_image_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageVersionArn
								"sage_maker_image_version_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the image version created on the instance.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: LifecycleConfigArns
						"lifecycle_config_arns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Description: "A list of LifecycleConfigArns available for use with JupyterServer apps.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "The Jupyter server's app settings.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: KernelGatewayAppSettings
				"kernel_gateway_app_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: CustomImages
						"custom_images": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: AppImageConfigName
									"app_image_config_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "The Name of the AppImageConfig.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: ImageName
									"image_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "The name of the CustomImage. Must be unique to your account.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: ImageVersionNumber
									"image_version_number": schema.Int64Attribute{ /*START ATTRIBUTE*/
										Description: "The version number of the CustomImage.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Description: "A list of custom SageMaker images that are configured to run as a KernelGateway app.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: DefaultResourceSpec
						"default_resource_spec": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: InstanceType
								"instance_type": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The instance type that the image version runs on.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: LifecycleConfigArn
								"lifecycle_config_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageArn
								"sage_maker_image_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageVersionArn
								"sage_maker_image_version_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the image version created on the instance.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Description: "The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: LifecycleConfigArns
						"lifecycle_config_arns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Description: "A list of LifecycleConfigArns available for use with KernelGateway apps.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "The kernel gateway app settings.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: SecurityGroups
				"security_groups": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Description: "The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: SpaceStorageSettings
				"space_storage_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: DefaultEbsStorageSettings
						"default_ebs_storage_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: DefaultEbsVolumeSizeInGb
								"default_ebs_volume_size_in_gb": schema.Int64Attribute{ /*START ATTRIBUTE*/
									Description: "Default size of the Amazon EBS volume in Gb",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: MaximumEbsVolumeSizeInGb
								"maximum_ebs_volume_size_in_gb": schema.Int64Attribute{ /*START ATTRIBUTE*/
									Description: "Maximum size of the Amazon EBS volume in Gb. Must be greater than or equal to the DefaultEbsVolumeSizeInGb.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Description: "Properties related to the Amazon Elastic Block Store volume. Must be provided if storage type is Amazon EBS and must not be provided if storage type is not Amazon EBS",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "The Jupyter lab's space storage settings.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "The default space settings.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DefaultUserSettings
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "The default user settings.",
		//	  "properties": {
		//	    "CodeEditorAppSettings": {
		//	      "additionalProperties": false,
		//	      "description": "The CodeEditor app settings.",
		//	      "properties": {
		//	        "AppLifecycleManagement": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "IdleSettings": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "IdleTimeoutInMinutes": {
		//	                  "description": "The idle timeout value set in minutes",
		//	                  "maximum": 525600,
		//	                  "minimum": 60,
		//	                  "type": "integer"
		//	                },
		//	                "LifecycleManagement": {
		//	                  "description": "A flag to enable/disable AppLifecycleManagement settings",
		//	                  "enum": [
		//	                    "ENABLED",
		//	                    "DISABLED"
		//	                  ],
		//	                  "type": "string"
		//	                },
		//	                "MaxIdleTimeoutInMinutes": {
		//	                  "description": "The maximum idle timeout value set in minutes",
		//	                  "maximum": 525600,
		//	                  "minimum": 60,
		//	                  "type": "integer"
		//	                },
		//	                "MinIdleTimeoutInMinutes": {
		//	                  "description": "The minimum idle timeout value set in minutes",
		//	                  "maximum": 525600,
		//	                  "minimum": 60,
		//	                  "type": "integer"
		//	                }
		//	              },
		//	              "type": "object"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "CustomImages": {
		//	          "description": "A list of custom images for use for CodeEditor apps.",
		//	          "items": {
		//	            "additionalProperties": false,
		//	            "description": "A custom SageMaker image.",
		//	            "properties": {
		//	              "AppImageConfigName": {
		//	                "description": "The Name of the AppImageConfig.",
		//	                "maxLength": 63,
		//	                "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
		//	                "type": "string"
		//	              },
		//	              "ImageName": {
		//	                "description": "The name of the CustomImage. Must be unique to your account.",
		//	                "maxLength": 63,
		//	                "pattern": "^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$",
		//	                "type": "string"
		//	              },
		//	              "ImageVersionNumber": {
		//	                "description": "The version number of the CustomImage.",
		//	                "minimum": 0,
		//	                "type": "integer"
		//	              }
		//	            },
		//	            "required": [
		//	              "AppImageConfigName",
		//	              "ImageName"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "maxItems": 200,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        },
		//	        "DefaultResourceSpec": {
		//	          "additionalProperties": false,
		//	          "description": "The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the CodeEditor app.",
		//	          "properties": {
		//	            "InstanceType": {
		//	              "description": "The instance type that the image version runs on.",
		//	              "enum": [
		//	                "system",
		//	                "ml.t3.micro",
		//	                "ml.t3.small",
		//	                "ml.t3.medium",
		//	                "ml.t3.large",
		//	                "ml.t3.xlarge",
		//	                "ml.t3.2xlarge",
		//	                "ml.m5.large",
		//	                "ml.m5.xlarge",
		//	                "ml.m5.2xlarge",
		//	                "ml.m5.4xlarge",
		//	                "ml.m5.8xlarge",
		//	                "ml.m5.12xlarge",
		//	                "ml.m5.16xlarge",
		//	                "ml.m5.24xlarge",
		//	                "ml.c5.large",
		//	                "ml.c5.xlarge",
		//	                "ml.c5.2xlarge",
		//	                "ml.c5.4xlarge",
		//	                "ml.c5.9xlarge",
		//	                "ml.c5.12xlarge",
		//	                "ml.c5.18xlarge",
		//	                "ml.c5.24xlarge",
		//	                "ml.p3.2xlarge",
		//	                "ml.p3.8xlarge",
		//	                "ml.p3.16xlarge",
		//	                "ml.g4dn.xlarge",
		//	                "ml.g4dn.2xlarge",
		//	                "ml.g4dn.4xlarge",
		//	                "ml.g4dn.8xlarge",
		//	                "ml.g4dn.12xlarge",
		//	                "ml.g4dn.16xlarge",
		//	                "ml.r5.large",
		//	                "ml.r5.xlarge",
		//	                "ml.r5.2xlarge",
		//	                "ml.r5.4xlarge",
		//	                "ml.r5.8xlarge",
		//	                "ml.r5.12xlarge",
		//	                "ml.r5.16xlarge",
		//	                "ml.r5.24xlarge",
		//	                "ml.p3dn.24xlarge",
		//	                "ml.m5d.large",
		//	                "ml.m5d.xlarge",
		//	                "ml.m5d.2xlarge",
		//	                "ml.m5d.4xlarge",
		//	                "ml.m5d.8xlarge",
		//	                "ml.m5d.12xlarge",
		//	                "ml.m5d.16xlarge",
		//	                "ml.m5d.24xlarge",
		//	                "ml.g5.xlarge",
		//	                "ml.g5.2xlarge",
		//	                "ml.g5.4xlarge",
		//	                "ml.g5.8xlarge",
		//	                "ml.g5.12xlarge",
		//	                "ml.g5.16xlarge",
		//	                "ml.g5.24xlarge",
		//	                "ml.g5.48xlarge",
		//	                "ml.p4d.24xlarge",
		//	                "ml.p4de.24xlarge",
		//	                "ml.geospatial.interactive",
		//	                "ml.trn1.2xlarge",
		//	                "ml.trn1.32xlarge",
		//	                "ml.trn1n.32xlarge"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "LifecycleConfigArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	              "maxLength": 256,
		//	              "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageVersionArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the image version created on the instance.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$",
		//	              "type": "string"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "LifecycleConfigArns": {
		//	          "description": "A list of LifecycleConfigArns available for use with CodeEditor apps.",
		//	          "items": {
		//	            "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	            "maxLength": 256,
		//	            "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	            "type": "string"
		//	          },
		//	          "maxItems": 30,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "CustomFileSystemConfigs": {
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "properties": {
		//	          "EFSFileSystemConfig": {
		//	            "additionalProperties": false,
		//	            "properties": {
		//	              "FileSystemId": {
		//	                "maxLength": 21,
		//	                "minLength": 11,
		//	                "pattern": "^(fs-[0-9a-f]{8,})$",
		//	                "type": "string"
		//	              },
		//	              "FileSystemPath": {
		//	                "maxLength": 256,
		//	                "minLength": 1,
		//	                "pattern": "^\\/\\S*$",
		//	                "type": "string"
		//	              }
		//	            },
		//	            "required": [
		//	              "FileSystemId"
		//	            ],
		//	            "type": "object"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 2,
		//	      "minItems": 0,
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    },
		//	    "CustomPosixUserConfig": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "Gid": {
		//	          "maximum": 4000000,
		//	          "minimum": 1001,
		//	          "type": "integer"
		//	        },
		//	        "Uid": {
		//	          "maximum": 4000000,
		//	          "minimum": 10000,
		//	          "type": "integer"
		//	        }
		//	      },
		//	      "required": [
		//	        "Uid",
		//	        "Gid"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "DefaultLandingUri": {
		//	      "description": "Defines which Amazon SageMaker application users are directed to by default.",
		//	      "maxLength": 1023,
		//	      "type": "string"
		//	    },
		//	    "ExecutionRole": {
		//	      "description": "The execution role for the user.",
		//	      "maxLength": 2048,
		//	      "minLength": 20,
		//	      "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
		//	      "type": "string"
		//	    },
		//	    "JupyterLabAppSettings": {
		//	      "additionalProperties": false,
		//	      "description": "The JupyterLab app settings.",
		//	      "properties": {
		//	        "AppLifecycleManagement": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "IdleSettings": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "IdleTimeoutInMinutes": {
		//	                  "description": "The idle timeout value set in minutes",
		//	                  "maximum": 525600,
		//	                  "minimum": 60,
		//	                  "type": "integer"
		//	                },
		//	                "LifecycleManagement": {
		//	                  "description": "A flag to enable/disable AppLifecycleManagement settings",
		//	                  "enum": [
		//	                    "ENABLED",
		//	                    "DISABLED"
		//	                  ],
		//	                  "type": "string"
		//	                },
		//	                "MaxIdleTimeoutInMinutes": {
		//	                  "description": "The maximum idle timeout value set in minutes",
		//	                  "maximum": 525600,
		//	                  "minimum": 60,
		//	                  "type": "integer"
		//	                },
		//	                "MinIdleTimeoutInMinutes": {
		//	                  "description": "The minimum idle timeout value set in minutes",
		//	                  "maximum": 525600,
		//	                  "minimum": 60,
		//	                  "type": "integer"
		//	                }
		//	              },
		//	              "type": "object"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "CodeRepositories": {
		//	          "description": "A list of CodeRepositories available for use with JupyterLab apps.",
		//	          "items": {
		//	            "additionalProperties": false,
		//	            "properties": {
		//	              "RepositoryUrl": {
		//	                "description": "A CodeRepository (valid URL) to be used within Jupyter's Git extension.",
		//	                "maxLength": 256,
		//	                "pattern": "",
		//	                "type": "string"
		//	              }
		//	            },
		//	            "required": [
		//	              "RepositoryUrl"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "maxItems": 30,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        },
		//	        "CustomImages": {
		//	          "description": "A list of custom images for use for JupyterLab apps.",
		//	          "items": {
		//	            "additionalProperties": false,
		//	            "description": "A custom SageMaker image.",
		//	            "properties": {
		//	              "AppImageConfigName": {
		//	                "description": "The Name of the AppImageConfig.",
		//	                "maxLength": 63,
		//	                "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
		//	                "type": "string"
		//	              },
		//	              "ImageName": {
		//	                "description": "The name of the CustomImage. Must be unique to your account.",
		//	                "maxLength": 63,
		//	                "pattern": "^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$",
		//	                "type": "string"
		//	              },
		//	              "ImageVersionNumber": {
		//	                "description": "The version number of the CustomImage.",
		//	                "minimum": 0,
		//	                "type": "integer"
		//	              }
		//	            },
		//	            "required": [
		//	              "AppImageConfigName",
		//	              "ImageName"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "maxItems": 200,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        },
		//	        "DefaultResourceSpec": {
		//	          "additionalProperties": false,
		//	          "description": "The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterLab app.",
		//	          "properties": {
		//	            "InstanceType": {
		//	              "description": "The instance type that the image version runs on.",
		//	              "enum": [
		//	                "system",
		//	                "ml.t3.micro",
		//	                "ml.t3.small",
		//	                "ml.t3.medium",
		//	                "ml.t3.large",
		//	                "ml.t3.xlarge",
		//	                "ml.t3.2xlarge",
		//	                "ml.m5.large",
		//	                "ml.m5.xlarge",
		//	                "ml.m5.2xlarge",
		//	                "ml.m5.4xlarge",
		//	                "ml.m5.8xlarge",
		//	                "ml.m5.12xlarge",
		//	                "ml.m5.16xlarge",
		//	                "ml.m5.24xlarge",
		//	                "ml.c5.large",
		//	                "ml.c5.xlarge",
		//	                "ml.c5.2xlarge",
		//	                "ml.c5.4xlarge",
		//	                "ml.c5.9xlarge",
		//	                "ml.c5.12xlarge",
		//	                "ml.c5.18xlarge",
		//	                "ml.c5.24xlarge",
		//	                "ml.p3.2xlarge",
		//	                "ml.p3.8xlarge",
		//	                "ml.p3.16xlarge",
		//	                "ml.g4dn.xlarge",
		//	                "ml.g4dn.2xlarge",
		//	                "ml.g4dn.4xlarge",
		//	                "ml.g4dn.8xlarge",
		//	                "ml.g4dn.12xlarge",
		//	                "ml.g4dn.16xlarge",
		//	                "ml.r5.large",
		//	                "ml.r5.xlarge",
		//	                "ml.r5.2xlarge",
		//	                "ml.r5.4xlarge",
		//	                "ml.r5.8xlarge",
		//	                "ml.r5.12xlarge",
		//	                "ml.r5.16xlarge",
		//	                "ml.r5.24xlarge",
		//	                "ml.p3dn.24xlarge",
		//	                "ml.m5d.large",
		//	                "ml.m5d.xlarge",
		//	                "ml.m5d.2xlarge",
		//	                "ml.m5d.4xlarge",
		//	                "ml.m5d.8xlarge",
		//	                "ml.m5d.12xlarge",
		//	                "ml.m5d.16xlarge",
		//	                "ml.m5d.24xlarge",
		//	                "ml.g5.xlarge",
		//	                "ml.g5.2xlarge",
		//	                "ml.g5.4xlarge",
		//	                "ml.g5.8xlarge",
		//	                "ml.g5.12xlarge",
		//	                "ml.g5.16xlarge",
		//	                "ml.g5.24xlarge",
		//	                "ml.g5.48xlarge",
		//	                "ml.p4d.24xlarge",
		//	                "ml.p4de.24xlarge",
		//	                "ml.geospatial.interactive",
		//	                "ml.trn1.2xlarge",
		//	                "ml.trn1.32xlarge",
		//	                "ml.trn1n.32xlarge"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "LifecycleConfigArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	              "maxLength": 256,
		//	              "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageVersionArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the image version created on the instance.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$",
		//	              "type": "string"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "LifecycleConfigArns": {
		//	          "description": "A list of LifecycleConfigArns available for use with JupyterLab apps.",
		//	          "items": {
		//	            "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	            "maxLength": 256,
		//	            "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	            "type": "string"
		//	          },
		//	          "maxItems": 30,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "JupyterServerAppSettings": {
		//	      "additionalProperties": false,
		//	      "description": "The Jupyter server's app settings.",
		//	      "properties": {
		//	        "DefaultResourceSpec": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "InstanceType": {
		//	              "description": "The instance type that the image version runs on.",
		//	              "enum": [
		//	                "system",
		//	                "ml.t3.micro",
		//	                "ml.t3.small",
		//	                "ml.t3.medium",
		//	                "ml.t3.large",
		//	                "ml.t3.xlarge",
		//	                "ml.t3.2xlarge",
		//	                "ml.m5.large",
		//	                "ml.m5.xlarge",
		//	                "ml.m5.2xlarge",
		//	                "ml.m5.4xlarge",
		//	                "ml.m5.8xlarge",
		//	                "ml.m5.12xlarge",
		//	                "ml.m5.16xlarge",
		//	                "ml.m5.24xlarge",
		//	                "ml.c5.large",
		//	                "ml.c5.xlarge",
		//	                "ml.c5.2xlarge",
		//	                "ml.c5.4xlarge",
		//	                "ml.c5.9xlarge",
		//	                "ml.c5.12xlarge",
		//	                "ml.c5.18xlarge",
		//	                "ml.c5.24xlarge",
		//	                "ml.p3.2xlarge",
		//	                "ml.p3.8xlarge",
		//	                "ml.p3.16xlarge",
		//	                "ml.g4dn.xlarge",
		//	                "ml.g4dn.2xlarge",
		//	                "ml.g4dn.4xlarge",
		//	                "ml.g4dn.8xlarge",
		//	                "ml.g4dn.12xlarge",
		//	                "ml.g4dn.16xlarge",
		//	                "ml.r5.large",
		//	                "ml.r5.xlarge",
		//	                "ml.r5.2xlarge",
		//	                "ml.r5.4xlarge",
		//	                "ml.r5.8xlarge",
		//	                "ml.r5.12xlarge",
		//	                "ml.r5.16xlarge",
		//	                "ml.r5.24xlarge",
		//	                "ml.p3dn.24xlarge",
		//	                "ml.m5d.large",
		//	                "ml.m5d.xlarge",
		//	                "ml.m5d.2xlarge",
		//	                "ml.m5d.4xlarge",
		//	                "ml.m5d.8xlarge",
		//	                "ml.m5d.12xlarge",
		//	                "ml.m5d.16xlarge",
		//	                "ml.m5d.24xlarge",
		//	                "ml.g5.xlarge",
		//	                "ml.g5.2xlarge",
		//	                "ml.g5.4xlarge",
		//	                "ml.g5.8xlarge",
		//	                "ml.g5.12xlarge",
		//	                "ml.g5.16xlarge",
		//	                "ml.g5.24xlarge",
		//	                "ml.g5.48xlarge",
		//	                "ml.p4d.24xlarge",
		//	                "ml.p4de.24xlarge",
		//	                "ml.geospatial.interactive",
		//	                "ml.trn1.2xlarge",
		//	                "ml.trn1.32xlarge",
		//	                "ml.trn1n.32xlarge"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "LifecycleConfigArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	              "maxLength": 256,
		//	              "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageVersionArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the image version created on the instance.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$",
		//	              "type": "string"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "LifecycleConfigArns": {
		//	          "description": "A list of LifecycleConfigArns available for use with JupyterServer apps.",
		//	          "items": {
		//	            "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	            "maxLength": 256,
		//	            "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	            "type": "string"
		//	          },
		//	          "maxItems": 30,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "KernelGatewayAppSettings": {
		//	      "additionalProperties": false,
		//	      "description": "The kernel gateway app settings.",
		//	      "properties": {
		//	        "CustomImages": {
		//	          "description": "A list of custom SageMaker images that are configured to run as a KernelGateway app.",
		//	          "insertionOrder": false,
		//	          "items": {
		//	            "additionalProperties": false,
		//	            "description": "A custom SageMaker image.",
		//	            "properties": {
		//	              "AppImageConfigName": {
		//	                "description": "The Name of the AppImageConfig.",
		//	                "maxLength": 63,
		//	                "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
		//	                "type": "string"
		//	              },
		//	              "ImageName": {
		//	                "description": "The name of the CustomImage. Must be unique to your account.",
		//	                "maxLength": 63,
		//	                "pattern": "^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$",
		//	                "type": "string"
		//	              },
		//	              "ImageVersionNumber": {
		//	                "description": "The version number of the CustomImage.",
		//	                "minimum": 0,
		//	                "type": "integer"
		//	              }
		//	            },
		//	            "required": [
		//	              "AppImageConfigName",
		//	              "ImageName"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "maxItems": 200,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        },
		//	        "DefaultResourceSpec": {
		//	          "additionalProperties": false,
		//	          "description": "The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.",
		//	          "properties": {
		//	            "InstanceType": {
		//	              "description": "The instance type that the image version runs on.",
		//	              "enum": [
		//	                "system",
		//	                "ml.t3.micro",
		//	                "ml.t3.small",
		//	                "ml.t3.medium",
		//	                "ml.t3.large",
		//	                "ml.t3.xlarge",
		//	                "ml.t3.2xlarge",
		//	                "ml.m5.large",
		//	                "ml.m5.xlarge",
		//	                "ml.m5.2xlarge",
		//	                "ml.m5.4xlarge",
		//	                "ml.m5.8xlarge",
		//	                "ml.m5.12xlarge",
		//	                "ml.m5.16xlarge",
		//	                "ml.m5.24xlarge",
		//	                "ml.c5.large",
		//	                "ml.c5.xlarge",
		//	                "ml.c5.2xlarge",
		//	                "ml.c5.4xlarge",
		//	                "ml.c5.9xlarge",
		//	                "ml.c5.12xlarge",
		//	                "ml.c5.18xlarge",
		//	                "ml.c5.24xlarge",
		//	                "ml.p3.2xlarge",
		//	                "ml.p3.8xlarge",
		//	                "ml.p3.16xlarge",
		//	                "ml.g4dn.xlarge",
		//	                "ml.g4dn.2xlarge",
		//	                "ml.g4dn.4xlarge",
		//	                "ml.g4dn.8xlarge",
		//	                "ml.g4dn.12xlarge",
		//	                "ml.g4dn.16xlarge",
		//	                "ml.r5.large",
		//	                "ml.r5.xlarge",
		//	                "ml.r5.2xlarge",
		//	                "ml.r5.4xlarge",
		//	                "ml.r5.8xlarge",
		//	                "ml.r5.12xlarge",
		//	                "ml.r5.16xlarge",
		//	                "ml.r5.24xlarge",
		//	                "ml.p3dn.24xlarge",
		//	                "ml.m5d.large",
		//	                "ml.m5d.xlarge",
		//	                "ml.m5d.2xlarge",
		//	                "ml.m5d.4xlarge",
		//	                "ml.m5d.8xlarge",
		//	                "ml.m5d.12xlarge",
		//	                "ml.m5d.16xlarge",
		//	                "ml.m5d.24xlarge",
		//	                "ml.g5.xlarge",
		//	                "ml.g5.2xlarge",
		//	                "ml.g5.4xlarge",
		//	                "ml.g5.8xlarge",
		//	                "ml.g5.12xlarge",
		//	                "ml.g5.16xlarge",
		//	                "ml.g5.24xlarge",
		//	                "ml.g5.48xlarge",
		//	                "ml.p4d.24xlarge",
		//	                "ml.p4de.24xlarge",
		//	                "ml.geospatial.interactive",
		//	                "ml.trn1.2xlarge",
		//	                "ml.trn1.32xlarge",
		//	                "ml.trn1n.32xlarge"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "LifecycleConfigArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	              "maxLength": 256,
		//	              "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageVersionArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the image version created on the instance.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$",
		//	              "type": "string"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "LifecycleConfigArns": {
		//	          "description": "A list of LifecycleConfigArns available for use with KernelGateway apps.",
		//	          "items": {
		//	            "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	            "maxLength": 256,
		//	            "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	            "type": "string"
		//	          },
		//	          "maxItems": 30,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "RSessionAppSettings": {
		//	      "additionalProperties": false,
		//	      "description": "A collection of settings that apply to an RSessionGateway app.",
		//	      "properties": {
		//	        "CustomImages": {
		//	          "description": "A list of custom SageMaker images that are configured to run as a KernelGateway app.",
		//	          "insertionOrder": false,
		//	          "items": {
		//	            "additionalProperties": false,
		//	            "description": "A custom SageMaker image.",
		//	            "properties": {
		//	              "AppImageConfigName": {
		//	                "description": "The Name of the AppImageConfig.",
		//	                "maxLength": 63,
		//	                "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
		//	                "type": "string"
		//	              },
		//	              "ImageName": {
		//	                "description": "The name of the CustomImage. Must be unique to your account.",
		//	                "maxLength": 63,
		//	                "pattern": "^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$",
		//	                "type": "string"
		//	              },
		//	              "ImageVersionNumber": {
		//	                "description": "The version number of the CustomImage.",
		//	                "minimum": 0,
		//	                "type": "integer"
		//	              }
		//	            },
		//	            "required": [
		//	              "AppImageConfigName",
		//	              "ImageName"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "maxItems": 200,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        },
		//	        "DefaultResourceSpec": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "InstanceType": {
		//	              "description": "The instance type that the image version runs on.",
		//	              "enum": [
		//	                "system",
		//	                "ml.t3.micro",
		//	                "ml.t3.small",
		//	                "ml.t3.medium",
		//	                "ml.t3.large",
		//	                "ml.t3.xlarge",
		//	                "ml.t3.2xlarge",
		//	                "ml.m5.large",
		//	                "ml.m5.xlarge",
		//	                "ml.m5.2xlarge",
		//	                "ml.m5.4xlarge",
		//	                "ml.m5.8xlarge",
		//	                "ml.m5.12xlarge",
		//	                "ml.m5.16xlarge",
		//	                "ml.m5.24xlarge",
		//	                "ml.c5.large",
		//	                "ml.c5.xlarge",
		//	                "ml.c5.2xlarge",
		//	                "ml.c5.4xlarge",
		//	                "ml.c5.9xlarge",
		//	                "ml.c5.12xlarge",
		//	                "ml.c5.18xlarge",
		//	                "ml.c5.24xlarge",
		//	                "ml.p3.2xlarge",
		//	                "ml.p3.8xlarge",
		//	                "ml.p3.16xlarge",
		//	                "ml.g4dn.xlarge",
		//	                "ml.g4dn.2xlarge",
		//	                "ml.g4dn.4xlarge",
		//	                "ml.g4dn.8xlarge",
		//	                "ml.g4dn.12xlarge",
		//	                "ml.g4dn.16xlarge",
		//	                "ml.r5.large",
		//	                "ml.r5.xlarge",
		//	                "ml.r5.2xlarge",
		//	                "ml.r5.4xlarge",
		//	                "ml.r5.8xlarge",
		//	                "ml.r5.12xlarge",
		//	                "ml.r5.16xlarge",
		//	                "ml.r5.24xlarge",
		//	                "ml.p3dn.24xlarge",
		//	                "ml.m5d.large",
		//	                "ml.m5d.xlarge",
		//	                "ml.m5d.2xlarge",
		//	                "ml.m5d.4xlarge",
		//	                "ml.m5d.8xlarge",
		//	                "ml.m5d.12xlarge",
		//	                "ml.m5d.16xlarge",
		//	                "ml.m5d.24xlarge",
		//	                "ml.g5.xlarge",
		//	                "ml.g5.2xlarge",
		//	                "ml.g5.4xlarge",
		//	                "ml.g5.8xlarge",
		//	                "ml.g5.12xlarge",
		//	                "ml.g5.16xlarge",
		//	                "ml.g5.24xlarge",
		//	                "ml.g5.48xlarge",
		//	                "ml.p4d.24xlarge",
		//	                "ml.p4de.24xlarge",
		//	                "ml.geospatial.interactive",
		//	                "ml.trn1.2xlarge",
		//	                "ml.trn1.32xlarge",
		//	                "ml.trn1n.32xlarge"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "LifecycleConfigArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	              "maxLength": 256,
		//	              "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageVersionArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the image version created on the instance.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$",
		//	              "type": "string"
		//	            }
		//	          },
		//	          "type": "object"
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "RStudioServerProAppSettings": {
		//	      "additionalProperties": false,
		//	      "description": "A collection of settings that configure user interaction with the RStudioServerPro app.",
		//	      "properties": {
		//	        "AccessStatus": {
		//	          "description": "Indicates whether the current user has access to the RStudioServerPro app.",
		//	          "enum": [
		//	            "ENABLED",
		//	            "DISABLED"
		//	          ],
		//	          "type": "string"
		//	        },
		//	        "UserGroup": {
		//	          "description": "The level of permissions that the user has within the RStudioServerPro app. This value defaults to User. The Admin value allows the user access to the RStudio Administrative Dashboard.",
		//	          "enum": [
		//	            "R_STUDIO_ADMIN",
		//	            "R_STUDIO_USER"
		//	          ],
		//	          "type": "string"
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "SecurityGroups": {
		//	      "description": "The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.",
		//	      "insertionOrder": false,
		//	      "items": {
		//	        "maxLength": 32,
		//	        "pattern": "[-0-9a-zA-Z]+",
		//	        "type": "string"
		//	      },
		//	      "maxItems": 5,
		//	      "minItems": 0,
		//	      "type": "array",
		//	      "uniqueItems": false
		//	    },
		//	    "SharingSettings": {
		//	      "additionalProperties": false,
		//	      "description": "The sharing settings.",
		//	      "properties": {
		//	        "NotebookOutputOption": {
		//	          "description": "Whether to include the notebook cell output when sharing the notebook. The default is Disabled.",
		//	          "enum": [
		//	            "Allowed",
		//	            "Disabled"
		//	          ],
		//	          "type": "string"
		//	        },
		//	        "S3KmsKeyId": {
		//	          "description": "When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.",
		//	          "maxLength": 2048,
		//	          "pattern": ".*",
		//	          "type": "string"
		//	        },
		//	        "S3OutputPath": {
		//	          "description": "When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.",
		//	          "maxLength": 1024,
		//	          "pattern": "^(https|s3)://([^/]+)/?(.*)$",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "SpaceStorageSettings": {
		//	      "additionalProperties": false,
		//	      "description": "Default storage settings for a space.",
		//	      "properties": {
		//	        "DefaultEbsStorageSettings": {
		//	          "additionalProperties": false,
		//	          "description": "Properties related to the Amazon Elastic Block Store volume. Must be provided if storage type is Amazon EBS and must not be provided if storage type is not Amazon EBS",
		//	          "properties": {
		//	            "DefaultEbsVolumeSizeInGb": {
		//	              "description": "Default size of the Amazon EBS volume in Gb",
		//	              "maximum": 16384,
		//	              "minimum": 5,
		//	              "type": "integer"
		//	            },
		//	            "MaximumEbsVolumeSizeInGb": {
		//	              "description": "Maximum size of the Amazon EBS volume in Gb. Must be greater than or equal to the DefaultEbsVolumeSizeInGb.",
		//	              "maximum": 16384,
		//	              "minimum": 5,
		//	              "type": "integer"
		//	            }
		//	          },
		//	          "required": [
		//	            "DefaultEbsVolumeSizeInGb",
		//	            "MaximumEbsVolumeSizeInGb"
		//	          ],
		//	          "type": "object"
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "StudioWebPortal": {
		//	      "description": "Indicates whether the Studio experience is available to users. If not, users cannot access Studio.",
		//	      "enum": [
		//	        "ENABLED",
		//	        "DISABLED"
		//	      ],
		//	      "type": "string"
		//	    },
		//	    "StudioWebPortalSettings": {
		//	      "additionalProperties": false,
		//	      "description": "Studio settings. If these settings are applied on a user level, they take priority over the settings applied on a domain level.",
		//	      "properties": {
		//	        "HiddenAppTypes": {
		//	          "description": "Applications supported in Studio that are hidden from the Studio left navigation pane.",
		//	          "insertionOrder": false,
		//	          "items": {
		//	            "enum": [
		//	              "JupyterServer",
		//	              "TensorBoard",
		//	              "RStudioServerPro",
		//	              "JupyterLab",
		//	              "CodeEditor",
		//	              "DetailedProfiler",
		//	              "Canvas"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": true
		//	        },
		//	        "HiddenMlTools": {
		//	          "description": "The machine learning tools that are hidden from the Studio left navigation pane.",
		//	          "insertionOrder": false,
		//	          "items": {
		//	            "enum": [
		//	              "DataWrangler",
		//	              "FeatureStore",
		//	              "EmrClusters",
		//	              "AutoMl",
		//	              "Experiments",
		//	              "Training",
		//	              "ModelEvaluation",
		//	              "Pipelines",
		//	              "Models",
		//	              "JumpStart",
		//	              "InferenceRecommender",
		//	              "Endpoints",
		//	              "Projects",
		//	              "InferenceOptimization",
		//	              "HyperPodClusters",
		//	              "Comet",
		//	              "DeepchecksLLMEvaluation",
		//	              "Fiddler",
		//	              "LakeraGuard"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": true
		//	        }
		//	      },
		//	      "type": "object"
		//	    }
		//	  },
		//	  "required": [
		//	    "ExecutionRole"
		//	  ],
		//	  "type": "object"
		//	}
		"default_user_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: CodeEditorAppSettings
				"code_editor_app_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: AppLifecycleManagement
						"app_lifecycle_management": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: IdleSettings
								"idle_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: IdleTimeoutInMinutes
										"idle_timeout_in_minutes": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The idle timeout value set in minutes",
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: LifecycleManagement
										"lifecycle_management": schema.StringAttribute{ /*START ATTRIBUTE*/
											Description: "A flag to enable/disable AppLifecycleManagement settings",
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: MaxIdleTimeoutInMinutes
										"max_idle_timeout_in_minutes": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The maximum idle timeout value set in minutes",
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: MinIdleTimeoutInMinutes
										"min_idle_timeout_in_minutes": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The minimum idle timeout value set in minutes",
											Computed:    true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: CustomImages
						"custom_images": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: AppImageConfigName
									"app_image_config_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "The Name of the AppImageConfig.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: ImageName
									"image_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "The name of the CustomImage. Must be unique to your account.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: ImageVersionNumber
									"image_version_number": schema.Int64Attribute{ /*START ATTRIBUTE*/
										Description: "The version number of the CustomImage.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Description: "A list of custom images for use for CodeEditor apps.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: DefaultResourceSpec
						"default_resource_spec": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: InstanceType
								"instance_type": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The instance type that the image version runs on.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: LifecycleConfigArn
								"lifecycle_config_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageArn
								"sage_maker_image_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageVersionArn
								"sage_maker_image_version_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the image version created on the instance.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Description: "The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the CodeEditor app.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: LifecycleConfigArns
						"lifecycle_config_arns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Description: "A list of LifecycleConfigArns available for use with CodeEditor apps.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "The CodeEditor app settings.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: CustomFileSystemConfigs
				"custom_file_system_configs": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: EFSFileSystemConfig
							"efs_file_system_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: FileSystemId
									"file_system_id": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: FileSystemPath
									"file_system_path": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Computed: true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: CustomPosixUserConfig
				"custom_posix_user_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: Gid
						"gid": schema.Int64Attribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: Uid
						"uid": schema.Int64Attribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: DefaultLandingUri
				"default_landing_uri": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "Defines which Amazon SageMaker application users are directed to by default.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ExecutionRole
				"execution_role": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "The execution role for the user.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: JupyterLabAppSettings
				"jupyter_lab_app_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: AppLifecycleManagement
						"app_lifecycle_management": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: IdleSettings
								"idle_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: IdleTimeoutInMinutes
										"idle_timeout_in_minutes": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The idle timeout value set in minutes",
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: LifecycleManagement
										"lifecycle_management": schema.StringAttribute{ /*START ATTRIBUTE*/
											Description: "A flag to enable/disable AppLifecycleManagement settings",
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: MaxIdleTimeoutInMinutes
										"max_idle_timeout_in_minutes": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The maximum idle timeout value set in minutes",
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: MinIdleTimeoutInMinutes
										"min_idle_timeout_in_minutes": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The minimum idle timeout value set in minutes",
											Computed:    true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: CodeRepositories
						"code_repositories": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: RepositoryUrl
									"repository_url": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "A CodeRepository (valid URL) to be used within Jupyter's Git extension.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Description: "A list of CodeRepositories available for use with JupyterLab apps.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: CustomImages
						"custom_images": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: AppImageConfigName
									"app_image_config_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "The Name of the AppImageConfig.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: ImageName
									"image_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "The name of the CustomImage. Must be unique to your account.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: ImageVersionNumber
									"image_version_number": schema.Int64Attribute{ /*START ATTRIBUTE*/
										Description: "The version number of the CustomImage.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Description: "A list of custom images for use for JupyterLab apps.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: DefaultResourceSpec
						"default_resource_spec": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: InstanceType
								"instance_type": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The instance type that the image version runs on.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: LifecycleConfigArn
								"lifecycle_config_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageArn
								"sage_maker_image_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageVersionArn
								"sage_maker_image_version_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the image version created on the instance.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Description: "The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the JupyterLab app.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: LifecycleConfigArns
						"lifecycle_config_arns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Description: "A list of LifecycleConfigArns available for use with JupyterLab apps.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "The JupyterLab app settings.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: JupyterServerAppSettings
				"jupyter_server_app_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: DefaultResourceSpec
						"default_resource_spec": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: InstanceType
								"instance_type": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The instance type that the image version runs on.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: LifecycleConfigArn
								"lifecycle_config_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageArn
								"sage_maker_image_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageVersionArn
								"sage_maker_image_version_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the image version created on the instance.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: LifecycleConfigArns
						"lifecycle_config_arns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Description: "A list of LifecycleConfigArns available for use with JupyterServer apps.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "The Jupyter server's app settings.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: KernelGatewayAppSettings
				"kernel_gateway_app_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: CustomImages
						"custom_images": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: AppImageConfigName
									"app_image_config_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "The Name of the AppImageConfig.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: ImageName
									"image_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "The name of the CustomImage. Must be unique to your account.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: ImageVersionNumber
									"image_version_number": schema.Int64Attribute{ /*START ATTRIBUTE*/
										Description: "The version number of the CustomImage.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Description: "A list of custom SageMaker images that are configured to run as a KernelGateway app.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: DefaultResourceSpec
						"default_resource_spec": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: InstanceType
								"instance_type": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The instance type that the image version runs on.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: LifecycleConfigArn
								"lifecycle_config_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageArn
								"sage_maker_image_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageVersionArn
								"sage_maker_image_version_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the image version created on the instance.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Description: "The default instance type and the Amazon Resource Name (ARN) of the default SageMaker image used by the KernelGateway app.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: LifecycleConfigArns
						"lifecycle_config_arns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Description: "A list of LifecycleConfigArns available for use with KernelGateway apps.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "The kernel gateway app settings.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: RSessionAppSettings
				"r_session_app_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: CustomImages
						"custom_images": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: AppImageConfigName
									"app_image_config_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "The Name of the AppImageConfig.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: ImageName
									"image_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "The name of the CustomImage. Must be unique to your account.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: ImageVersionNumber
									"image_version_number": schema.Int64Attribute{ /*START ATTRIBUTE*/
										Description: "The version number of the CustomImage.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Description: "A list of custom SageMaker images that are configured to run as a KernelGateway app.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: DefaultResourceSpec
						"default_resource_spec": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: InstanceType
								"instance_type": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The instance type that the image version runs on.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: LifecycleConfigArn
								"lifecycle_config_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageArn
								"sage_maker_image_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageVersionArn
								"sage_maker_image_version_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the image version created on the instance.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "A collection of settings that apply to an RSessionGateway app.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: RStudioServerProAppSettings
				"r_studio_server_pro_app_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: AccessStatus
						"access_status": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "Indicates whether the current user has access to the RStudioServerPro app.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: UserGroup
						"user_group": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The level of permissions that the user has within the RStudioServerPro app. This value defaults to User. The Admin value allows the user access to the RStudio Administrative Dashboard.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "A collection of settings that configure user interaction with the RStudioServerPro app.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: SecurityGroups
				"security_groups": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Description: "The security groups for the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: SharingSettings
				"sharing_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: NotebookOutputOption
						"notebook_output_option": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "Whether to include the notebook cell output when sharing the notebook. The default is Disabled.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: S3KmsKeyId
						"s3_kms_key_id": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "When NotebookOutputOption is Allowed, the AWS Key Management Service (KMS) encryption key ID used to encrypt the notebook cell output in the Amazon S3 bucket.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: S3OutputPath
						"s3_output_path": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "When NotebookOutputOption is Allowed, the Amazon S3 bucket used to store the shared notebook snapshots.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "The sharing settings.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: SpaceStorageSettings
				"space_storage_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: DefaultEbsStorageSettings
						"default_ebs_storage_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: DefaultEbsVolumeSizeInGb
								"default_ebs_volume_size_in_gb": schema.Int64Attribute{ /*START ATTRIBUTE*/
									Description: "Default size of the Amazon EBS volume in Gb",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: MaximumEbsVolumeSizeInGb
								"maximum_ebs_volume_size_in_gb": schema.Int64Attribute{ /*START ATTRIBUTE*/
									Description: "Maximum size of the Amazon EBS volume in Gb. Must be greater than or equal to the DefaultEbsVolumeSizeInGb.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Description: "Properties related to the Amazon Elastic Block Store volume. Must be provided if storage type is Amazon EBS and must not be provided if storage type is not Amazon EBS",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "Default storage settings for a space.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: StudioWebPortal
				"studio_web_portal": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "Indicates whether the Studio experience is available to users. If not, users cannot access Studio.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: StudioWebPortalSettings
				"studio_web_portal_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: HiddenAppTypes
						"hidden_app_types": schema.SetAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Description: "Applications supported in Studio that are hidden from the Studio left navigation pane.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: HiddenMlTools
						"hidden_ml_tools": schema.SetAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Description: "The machine learning tools that are hidden from the Studio left navigation pane.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "Studio settings. If these settings are applied on a user level, they take priority over the settings applied on a domain level.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "The default user settings.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DomainArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Amazon Resource Name (ARN) of the created domain.",
		//	  "maxLength": 256,
		//	  "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:domain/.*",
		//	  "type": "string"
		//	}
		"domain_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Amazon Resource Name (ARN) of the created domain.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DomainId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The domain name.",
		//	  "maxLength": 63,
		//	  "pattern": "^d-(-*[a-z0-9])+",
		//	  "type": "string"
		//	}
		"domain_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The domain name.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DomainName
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "A name for the domain.",
		//	  "maxLength": 63,
		//	  "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}",
		//	  "type": "string"
		//	}
		"domain_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "A name for the domain.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DomainSettings
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "A collection of Domain settings.",
		//	  "properties": {
		//	    "DockerSettings": {
		//	      "additionalProperties": false,
		//	      "description": "A collection of settings that are required to start docker-proxy server.",
		//	      "properties": {
		//	        "EnableDockerAccess": {
		//	          "description": "The flag to enable/disable docker-proxy server",
		//	          "enum": [
		//	            "ENABLED",
		//	            "DISABLED"
		//	          ],
		//	          "type": "string"
		//	        },
		//	        "VpcOnlyTrustedAccounts": {
		//	          "description": "A list of account id's that would be used to pull images from in VpcOnly mode",
		//	          "insertionOrder": false,
		//	          "items": {
		//	            "maxLength": 12,
		//	            "minLength": 12,
		//	            "pattern": "^\\d+$",
		//	            "type": "string"
		//	          },
		//	          "maxItems": 20,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": false
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "ExecutionRoleIdentityConfig": {
		//	      "description": "The configuration for attaching a SageMaker user profile name to the execution role as a sts:SourceIdentity key.",
		//	      "enum": [
		//	        "USER_PROFILE_NAME",
		//	        "DISABLED"
		//	      ],
		//	      "type": "string"
		//	    },
		//	    "RStudioServerProDomainSettings": {
		//	      "additionalProperties": false,
		//	      "description": "A collection of settings that update the current configuration for the RStudioServerPro Domain-level app.",
		//	      "properties": {
		//	        "DefaultResourceSpec": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "InstanceType": {
		//	              "description": "The instance type that the image version runs on.",
		//	              "enum": [
		//	                "system",
		//	                "ml.t3.micro",
		//	                "ml.t3.small",
		//	                "ml.t3.medium",
		//	                "ml.t3.large",
		//	                "ml.t3.xlarge",
		//	                "ml.t3.2xlarge",
		//	                "ml.m5.large",
		//	                "ml.m5.xlarge",
		//	                "ml.m5.2xlarge",
		//	                "ml.m5.4xlarge",
		//	                "ml.m5.8xlarge",
		//	                "ml.m5.12xlarge",
		//	                "ml.m5.16xlarge",
		//	                "ml.m5.24xlarge",
		//	                "ml.c5.large",
		//	                "ml.c5.xlarge",
		//	                "ml.c5.2xlarge",
		//	                "ml.c5.4xlarge",
		//	                "ml.c5.9xlarge",
		//	                "ml.c5.12xlarge",
		//	                "ml.c5.18xlarge",
		//	                "ml.c5.24xlarge",
		//	                "ml.p3.2xlarge",
		//	                "ml.p3.8xlarge",
		//	                "ml.p3.16xlarge",
		//	                "ml.g4dn.xlarge",
		//	                "ml.g4dn.2xlarge",
		//	                "ml.g4dn.4xlarge",
		//	                "ml.g4dn.8xlarge",
		//	                "ml.g4dn.12xlarge",
		//	                "ml.g4dn.16xlarge",
		//	                "ml.r5.large",
		//	                "ml.r5.xlarge",
		//	                "ml.r5.2xlarge",
		//	                "ml.r5.4xlarge",
		//	                "ml.r5.8xlarge",
		//	                "ml.r5.12xlarge",
		//	                "ml.r5.16xlarge",
		//	                "ml.r5.24xlarge",
		//	                "ml.p3dn.24xlarge",
		//	                "ml.m5d.large",
		//	                "ml.m5d.xlarge",
		//	                "ml.m5d.2xlarge",
		//	                "ml.m5d.4xlarge",
		//	                "ml.m5d.8xlarge",
		//	                "ml.m5d.12xlarge",
		//	                "ml.m5d.16xlarge",
		//	                "ml.m5d.24xlarge",
		//	                "ml.g5.xlarge",
		//	                "ml.g5.2xlarge",
		//	                "ml.g5.4xlarge",
		//	                "ml.g5.8xlarge",
		//	                "ml.g5.12xlarge",
		//	                "ml.g5.16xlarge",
		//	                "ml.g5.24xlarge",
		//	                "ml.g5.48xlarge",
		//	                "ml.p4d.24xlarge",
		//	                "ml.p4de.24xlarge",
		//	                "ml.geospatial.interactive",
		//	                "ml.trn1.2xlarge",
		//	                "ml.trn1.32xlarge",
		//	                "ml.trn1n.32xlarge"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "LifecycleConfigArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
		//	              "maxLength": 256,
		//	              "pattern": "arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:studio-lifecycle-config/.*",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$",
		//	              "type": "string"
		//	            },
		//	            "SageMakerImageVersionArn": {
		//	              "description": "The Amazon Resource Name (ARN) of the image version created on the instance.",
		//	              "maxLength": 256,
		//	              "pattern": "^arn:aws(-[\\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$",
		//	              "type": "string"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "DomainExecutionRoleArn": {
		//	          "description": "The ARN of the execution role for the RStudioServerPro Domain-level app.",
		//	          "maxLength": 2048,
		//	          "minLength": 20,
		//	          "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
		//	          "type": "string"
		//	        },
		//	        "RStudioConnectUrl": {
		//	          "description": "A URL pointing to an RStudio Connect server.",
		//	          "pattern": "^(https:|http:|www\\.)\\S*",
		//	          "type": "string"
		//	        },
		//	        "RStudioPackageManagerUrl": {
		//	          "description": "A URL pointing to an RStudio Package Manager server.",
		//	          "pattern": "^(https:|http:|www\\.)\\S*",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "DomainExecutionRoleArn"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "SecurityGroupIds": {
		//	      "description": "The security groups for the Amazon Virtual Private Cloud that the Domain uses for communication between Domain-level apps and user apps.",
		//	      "insertionOrder": false,
		//	      "items": {
		//	        "maxLength": 32,
		//	        "pattern": "[-0-9a-zA-Z]+",
		//	        "type": "string"
		//	      },
		//	      "maxItems": 3,
		//	      "minItems": 1,
		//	      "type": "array",
		//	      "uniqueItems": false
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"domain_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: DockerSettings
				"docker_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: EnableDockerAccess
						"enable_docker_access": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The flag to enable/disable docker-proxy server",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: VpcOnlyTrustedAccounts
						"vpc_only_trusted_accounts": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Description: "A list of account id's that would be used to pull images from in VpcOnly mode",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "A collection of settings that are required to start docker-proxy server.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: ExecutionRoleIdentityConfig
				"execution_role_identity_config": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "The configuration for attaching a SageMaker user profile name to the execution role as a sts:SourceIdentity key.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: RStudioServerProDomainSettings
				"r_studio_server_pro_domain_settings": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: DefaultResourceSpec
						"default_resource_spec": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: InstanceType
								"instance_type": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The instance type that the image version runs on.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: LifecycleConfigArn
								"lifecycle_config_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageArn
								"sage_maker_image_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the SageMaker image that the image version belongs to.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SageMakerImageVersionArn
								"sage_maker_image_version_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The Amazon Resource Name (ARN) of the image version created on the instance.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: DomainExecutionRoleArn
						"domain_execution_role_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The ARN of the execution role for the RStudioServerPro Domain-level app.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: RStudioConnectUrl
						"r_studio_connect_url": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "A URL pointing to an RStudio Connect server.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: RStudioPackageManagerUrl
						"r_studio_package_manager_url": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "A URL pointing to an RStudio Package Manager server.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "A collection of settings that update the current configuration for the RStudioServerPro Domain-level app.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: SecurityGroupIds
				"security_group_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Description: "The security groups for the Amazon Virtual Private Cloud that the Domain uses for communication between Domain-level apps and user apps.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "A collection of Domain settings.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: HomeEfsFileSystemId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The ID of the Amazon Elastic File System (EFS) managed by this Domain.",
		//	  "maxLength": 32,
		//	  "type": "string"
		//	}
		"home_efs_file_system_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The ID of the Amazon Elastic File System (EFS) managed by this Domain.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: KmsKeyId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "SageMaker uses AWS KMS to encrypt the EFS volume attached to the domain with an AWS managed customer master key (CMK) by default.",
		//	  "maxLength": 2048,
		//	  "pattern": ".*",
		//	  "type": "string"
		//	}
		"kms_key_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "SageMaker uses AWS KMS to encrypt the EFS volume attached to the domain with an AWS managed customer master key (CMK) by default.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SecurityGroupIdForDomainBoundary
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The ID of the security group that authorizes traffic between the RSessionGateway apps and the RStudioServerPro app.",
		//	  "maxLength": 32,
		//	  "pattern": "[-0-9a-zA-Z]+",
		//	  "type": "string"
		//	}
		"security_group_id_for_domain_boundary": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The ID of the security group that authorizes traffic between the RSessionGateway apps and the RStudioServerPro app.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SingleSignOnApplicationArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The ARN of the application managed by SageMaker in IAM Identity Center. This value is only returned for domains created after October 1, 2023.",
		//	  "pattern": "^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso::[0-9]+:application/[a-zA-Z0-9-_.]+/apl-[a-zA-Z0-9]+$",
		//	  "type": "string"
		//	}
		"single_sign_on_application_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The ARN of the application managed by SageMaker in IAM Identity Center. This value is only returned for domains created after October 1, 2023.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SingleSignOnManagedApplicationInstanceId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The SSO managed application instance ID.",
		//	  "maxLength": 256,
		//	  "type": "string"
		//	}
		"single_sign_on_managed_application_instance_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The SSO managed application instance ID.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: SubnetIds
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The VPC subnets that Studio uses for communication.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "maxLength": 32,
		//	    "pattern": "[-0-9a-zA-Z]+",
		//	    "type": "string"
		//	  },
		//	  "maxItems": 16,
		//	  "minItems": 1,
		//	  "type": "array",
		//	  "uniqueItems": false
		//	}
		"subnet_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "The VPC subnets that Studio uses for communication.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: TagPropagation
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Indicates whether the tags added to Domain, User Profile and Space entity is propagated to all SageMaker resources.",
		//	  "enum": [
		//	    "ENABLED",
		//	    "DISABLED"
		//	  ],
		//	  "type": "string"
		//	}
		"tag_propagation": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Indicates whether the tags added to Domain, User Profile and Space entity is propagated to all SageMaker resources.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "A list of tags to apply to the user profile.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "properties": {
		//	      "Key": {
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "maxItems": 50,
		//	  "minItems": 0,
		//	  "type": "array",
		//	  "uniqueItems": false
		//	}
		"tags": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Computed: true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Computed: true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "A list of tags to apply to the user profile.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Url
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The URL to the created domain.",
		//	  "maxLength": 1024,
		//	  "type": "string"
		//	}
		"url": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The URL to the created domain.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: VpcId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.",
		//	  "maxLength": 32,
		//	  "pattern": "[-0-9a-zA-Z]+",
		//	  "type": "string"
		//	}
		"vpc_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::SageMaker::Domain",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::SageMaker::Domain").WithTerraformTypeName("awscc_sagemaker_domain")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"access_status":                                  "AccessStatus",
		"app_image_config_name":                          "AppImageConfigName",
		"app_lifecycle_management":                       "AppLifecycleManagement",
		"app_network_access_type":                        "AppNetworkAccessType",
		"app_security_group_management":                  "AppSecurityGroupManagement",
		"auth_mode":                                      "AuthMode",
		"code_editor_app_settings":                       "CodeEditorAppSettings",
		"code_repositories":                              "CodeRepositories",
		"custom_file_system_configs":                     "CustomFileSystemConfigs",
		"custom_images":                                  "CustomImages",
		"custom_posix_user_config":                       "CustomPosixUserConfig",
		"default_ebs_storage_settings":                   "DefaultEbsStorageSettings",
		"default_ebs_volume_size_in_gb":                  "DefaultEbsVolumeSizeInGb",
		"default_landing_uri":                            "DefaultLandingUri",
		"default_resource_spec":                          "DefaultResourceSpec",
		"default_space_settings":                         "DefaultSpaceSettings",
		"default_user_settings":                          "DefaultUserSettings",
		"docker_settings":                                "DockerSettings",
		"domain_arn":                                     "DomainArn",
		"domain_execution_role_arn":                      "DomainExecutionRoleArn",
		"domain_id":                                      "DomainId",
		"domain_name":                                    "DomainName",
		"domain_settings":                                "DomainSettings",
		"efs_file_system_config":                         "EFSFileSystemConfig",
		"enable_docker_access":                           "EnableDockerAccess",
		"execution_role":                                 "ExecutionRole",
		"execution_role_identity_config":                 "ExecutionRoleIdentityConfig",
		"file_system_id":                                 "FileSystemId",
		"file_system_path":                               "FileSystemPath",
		"gid":                                            "Gid",
		"hidden_app_types":                               "HiddenAppTypes",
		"hidden_ml_tools":                                "HiddenMlTools",
		"home_efs_file_system_id":                        "HomeEfsFileSystemId",
		"idle_settings":                                  "IdleSettings",
		"idle_timeout_in_minutes":                        "IdleTimeoutInMinutes",
		"image_name":                                     "ImageName",
		"image_version_number":                           "ImageVersionNumber",
		"instance_type":                                  "InstanceType",
		"jupyter_lab_app_settings":                       "JupyterLabAppSettings",
		"jupyter_server_app_settings":                    "JupyterServerAppSettings",
		"kernel_gateway_app_settings":                    "KernelGatewayAppSettings",
		"key":                                            "Key",
		"kms_key_id":                                     "KmsKeyId",
		"lifecycle_config_arn":                           "LifecycleConfigArn",
		"lifecycle_config_arns":                          "LifecycleConfigArns",
		"lifecycle_management":                           "LifecycleManagement",
		"max_idle_timeout_in_minutes":                    "MaxIdleTimeoutInMinutes",
		"maximum_ebs_volume_size_in_gb":                  "MaximumEbsVolumeSizeInGb",
		"min_idle_timeout_in_minutes":                    "MinIdleTimeoutInMinutes",
		"notebook_output_option":                         "NotebookOutputOption",
		"r_session_app_settings":                         "RSessionAppSettings",
		"r_studio_connect_url":                           "RStudioConnectUrl",
		"r_studio_package_manager_url":                   "RStudioPackageManagerUrl",
		"r_studio_server_pro_app_settings":               "RStudioServerProAppSettings",
		"r_studio_server_pro_domain_settings":            "RStudioServerProDomainSettings",
		"repository_url":                                 "RepositoryUrl",
		"s3_kms_key_id":                                  "S3KmsKeyId",
		"s3_output_path":                                 "S3OutputPath",
		"sage_maker_image_arn":                           "SageMakerImageArn",
		"sage_maker_image_version_arn":                   "SageMakerImageVersionArn",
		"security_group_id_for_domain_boundary":          "SecurityGroupIdForDomainBoundary",
		"security_group_ids":                             "SecurityGroupIds",
		"security_groups":                                "SecurityGroups",
		"sharing_settings":                               "SharingSettings",
		"single_sign_on_application_arn":                 "SingleSignOnApplicationArn",
		"single_sign_on_managed_application_instance_id": "SingleSignOnManagedApplicationInstanceId",
		"space_storage_settings":                         "SpaceStorageSettings",
		"studio_web_portal":                              "StudioWebPortal",
		"studio_web_portal_settings":                     "StudioWebPortalSettings",
		"subnet_ids":                                     "SubnetIds",
		"tag_propagation":                                "TagPropagation",
		"tags":                                           "Tags",
		"uid":                                            "Uid",
		"url":                                            "Url",
		"user_group":                                     "UserGroup",
		"value":                                          "Value",
		"vpc_id":                                         "VpcId",
		"vpc_only_trusted_accounts":                      "VpcOnlyTrustedAccounts",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
