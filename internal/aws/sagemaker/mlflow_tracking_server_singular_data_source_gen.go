// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package sagemaker

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_sagemaker_mlflow_tracking_server", mlflowTrackingServerDataSource)
}

// mlflowTrackingServerDataSource returns the Terraform awscc_sagemaker_mlflow_tracking_server data source.
// This Terraform data source corresponds to the CloudFormation AWS::SageMaker::MlflowTrackingServer resource.
func mlflowTrackingServerDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: ArtifactStoreUri
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Amazon S3 URI for MLFlow Tracking Server artifacts.",
		//	  "maxLength": 2048,
		//	  "minLength": 1,
		//	  "pattern": "^s3:\\/\\/([^\\/]+)\\/?(.*)$",
		//	  "type": "string"
		//	}
		"artifact_store_uri": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Amazon S3 URI for MLFlow Tracking Server artifacts.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: AutomaticModelRegistration
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "A flag to enable Automatic SageMaker Model Registration.",
		//	  "type": "boolean"
		//	}
		"automatic_model_registration": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "A flag to enable Automatic SageMaker Model Registration.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: MlflowVersion
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The MLFlow Version used on the MLFlow Tracking Server.",
		//	  "maxLength": 32,
		//	  "minLength": 1,
		//	  "pattern": "^\\d+(\\.\\d+)+$",
		//	  "type": "string"
		//	}
		"mlflow_version": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The MLFlow Version used on the MLFlow Tracking Server.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: RoleArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on behalf of the customer.",
		//	  "maxLength": 2048,
		//	  "minLength": 20,
		//	  "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role\\/?[a-zA-Z_0-9+=,.@\\-_\\/]+$",
		//	  "type": "string"
		//	}
		"role_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on behalf of the customer.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "An array of key-value pairs to apply to this resource.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "A key-value pair to associate with a resource.",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
		//	        "maxLength": 256,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Value",
		//	      "Key"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "maxItems": 50,
		//	  "minItems": 1,
		//	  "type": "array"
		//	}
		"tags": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "An array of key-value pairs to apply to this resource.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: TrackingServerArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Amazon Resource Name (ARN) of the MLFlow Tracking Server.",
		//	  "maxLength": 2048,
		//	  "pattern": "^arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:mlflow-tracking-server/.*$",
		//	  "type": "string"
		//	}
		"tracking_server_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Amazon Resource Name (ARN) of the MLFlow Tracking Server.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: TrackingServerName
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The name of the MLFlow Tracking Server.",
		//	  "maxLength": 256,
		//	  "minLength": 1,
		//	  "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,255}$",
		//	  "type": "string"
		//	}
		"tracking_server_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The name of the MLFlow Tracking Server.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: TrackingServerSize
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The size of the MLFlow Tracking Server.",
		//	  "enum": [
		//	    "Small",
		//	    "Medium",
		//	    "Large"
		//	  ],
		//	  "type": "string"
		//	}
		"tracking_server_size": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The size of the MLFlow Tracking Server.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: WeeklyMaintenanceWindowStart
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The start of the time window for maintenance of the MLFlow Tracking Server in UTC time.",
		//	  "maxLength": 9,
		//	  "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun):([01]\\d|2[0-3]):([0-5]\\d)$",
		//	  "type": "string"
		//	}
		"weekly_maintenance_window_start": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The start of the time window for maintenance of the MLFlow Tracking Server in UTC time.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::SageMaker::MlflowTrackingServer",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::SageMaker::MlflowTrackingServer").WithTerraformTypeName("awscc_sagemaker_mlflow_tracking_server")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"artifact_store_uri":              "ArtifactStoreUri",
		"automatic_model_registration":    "AutomaticModelRegistration",
		"key":                             "Key",
		"mlflow_version":                  "MlflowVersion",
		"role_arn":                        "RoleArn",
		"tags":                            "Tags",
		"tracking_server_arn":             "TrackingServerArn",
		"tracking_server_name":            "TrackingServerName",
		"tracking_server_size":            "TrackingServerSize",
		"value":                           "Value",
		"weekly_maintenance_window_start": "WeeklyMaintenanceWindowStart",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
