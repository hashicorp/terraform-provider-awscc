// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package sagemaker

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_sagemaker_cluster", clusterDataSource)
}

// clusterDataSource returns the Terraform awscc_sagemaker_cluster data source.
// This Terraform data source corresponds to the CloudFormation AWS::SageMaker::Cluster resource.
func clusterDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: ClusterArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Amazon Resource Name (ARN) of the HyperPod Cluster.",
		//	  "maxLength": 256,
		//	  "pattern": "^arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:cluster/[a-z0-9]{12}$",
		//	  "type": "string"
		//	}
		"cluster_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Amazon Resource Name (ARN) of the HyperPod Cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ClusterName
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The name of the HyperPod Cluster.",
		//	  "maxLength": 63,
		//	  "minLength": 1,
		//	  "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$",
		//	  "type": "string"
		//	}
		"cluster_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The name of the HyperPod Cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ClusterStatus
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The status of the HyperPod Cluster.",
		//	  "enum": [
		//	    "Creating",
		//	    "Deleting",
		//	    "Failed",
		//	    "InService",
		//	    "RollingBack",
		//	    "SystemUpdating",
		//	    "Updating"
		//	  ],
		//	  "type": "string"
		//	}
		"cluster_status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The status of the HyperPod Cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CreationTime
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The time at which the HyperPod cluster was created.",
		//	  "type": "string"
		//	}
		"creation_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The time at which the HyperPod cluster was created.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: FailureMessage
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The failure message of the HyperPod Cluster.",
		//	  "type": "string"
		//	}
		"failure_message": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The failure message of the HyperPod Cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: InstanceGroups
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The instance groups of the SageMaker HyperPod cluster.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "Details of an instance group in a SageMaker HyperPod cluster.",
		//	    "properties": {
		//	      "CurrentCount": {
		//	        "description": "The number of instances that are currently in the instance group of a SageMaker HyperPod cluster.",
		//	        "minimum": 0,
		//	        "type": "integer"
		//	      },
		//	      "ExecutionRole": {
		//	        "description": "The execution role for the instance group to assume.",
		//	        "maxLength": 2048,
		//	        "minLength": 20,
		//	        "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
		//	        "type": "string"
		//	      },
		//	      "InstanceCount": {
		//	        "description": "The number of instances you specified to add to the instance group of a SageMaker HyperPod cluster.",
		//	        "minimum": 0,
		//	        "type": "integer"
		//	      },
		//	      "InstanceGroupName": {
		//	        "description": "The name of the instance group of a SageMaker HyperPod cluster.",
		//	        "maxLength": 63,
		//	        "minLength": 1,
		//	        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
		//	        "type": "string"
		//	      },
		//	      "InstanceStorageConfigs": {
		//	        "description": "The instance storage configuration for the instance group.",
		//	        "insertionOrder": false,
		//	        "items": {
		//	          "description": "Defines the configuration for attaching additional storage to the instances in the SageMaker HyperPod cluster instance group.",
		//	          "properties": {
		//	            "EbsVolumeConfig": {
		//	              "additionalProperties": false,
		//	              "description": "Defines the configuration for attaching additional Amazon Elastic Block Store (EBS) volumes to the instances in the SageMaker HyperPod cluster instance group. The additional EBS volume is attached to each instance within the SageMaker HyperPod cluster instance group and mounted to /opt/sagemaker.",
		//	              "properties": {
		//	                "VolumeSizeInGB": {
		//	                  "description": "The size in gigabytes (GB) of the additional EBS volume to be attached to the instances in the SageMaker HyperPod cluster instance group. The additional EBS volume is attached to each instance within the SageMaker HyperPod cluster instance group and mounted to /opt/sagemaker.",
		//	                  "maximum": 16384,
		//	                  "minimum": 1,
		//	                  "type": "integer"
		//	                }
		//	              },
		//	              "type": "object"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "maxItems": 1,
		//	        "type": "array"
		//	      },
		//	      "InstanceType": {
		//	        "description": "The instance type of the instance group of a SageMaker HyperPod cluster.",
		//	        "type": "string"
		//	      },
		//	      "LifeCycleConfig": {
		//	        "additionalProperties": false,
		//	        "description": "The lifecycle configuration for a SageMaker HyperPod cluster.",
		//	        "properties": {
		//	          "OnCreate": {
		//	            "description": "The file name of the entrypoint script of lifecycle scripts under SourceS3Uri. This entrypoint script runs during cluster creation.",
		//	            "maxLength": 128,
		//	            "minLength": 1,
		//	            "pattern": "^[\\S\\s]+$",
		//	            "type": "string"
		//	          },
		//	          "SourceS3Uri": {
		//	            "description": "An Amazon S3 bucket path where your lifecycle scripts are stored.",
		//	            "maxLength": 1024,
		//	            "pattern": "^(https|s3)://([^/]+)/?(.*)$",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "OnCreate",
		//	          "SourceS3Uri"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "OnStartDeepHealthChecks": {
		//	        "description": "Nodes will undergo advanced stress test to detect and replace faulty instances, based on the type of deep health check(s) passed in.",
		//	        "insertionOrder": false,
		//	        "items": {
		//	          "description": "The type of deep health check(s) to be performed on the instances in the SageMaker HyperPod cluster instance group.",
		//	          "enum": [
		//	            "InstanceStress",
		//	            "InstanceConnectivity"
		//	          ],
		//	          "type": "string"
		//	        },
		//	        "type": "array"
		//	      },
		//	      "OverrideVpcConfig": {
		//	        "additionalProperties": false,
		//	        "description": "Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs, hosted models, and compute resources have access to. You can control access to and from your resources by configuring a VPC.",
		//	        "properties": {
		//	          "SecurityGroupIds": {
		//	            "description": "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.",
		//	            "insertionOrder": false,
		//	            "items": {
		//	              "maxLength": 32,
		//	              "pattern": "[-0-9a-zA-Z]+",
		//	              "type": "string"
		//	            },
		//	            "maxItems": 5,
		//	            "minItems": 1,
		//	            "type": "array"
		//	          },
		//	          "Subnets": {
		//	            "description": "The ID of the subnets in the VPC to which you want to connect your training job or model.",
		//	            "insertionOrder": false,
		//	            "items": {
		//	              "maxLength": 32,
		//	              "pattern": "[-0-9a-zA-Z]+",
		//	              "type": "string"
		//	            },
		//	            "maxItems": 16,
		//	            "minItems": 1,
		//	            "type": "array"
		//	          }
		//	        },
		//	        "required": [
		//	          "SecurityGroupIds",
		//	          "Subnets"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "ThreadsPerCore": {
		//	        "description": "The number you specified to TreadsPerCore in CreateCluster for enabling or disabling multithreading. For instance types that support multithreading, you can specify 1 for disabling multithreading and 2 for enabling multithreading.",
		//	        "maximum": 2,
		//	        "minimum": 1,
		//	        "type": "integer"
		//	      }
		//	    },
		//	    "required": [
		//	      "ExecutionRole",
		//	      "InstanceCount",
		//	      "InstanceGroupName",
		//	      "InstanceType",
		//	      "LifeCycleConfig"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "minItems": 1,
		//	  "type": "array"
		//	}
		"instance_groups": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: CurrentCount
					"current_count": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "The number of instances that are currently in the instance group of a SageMaker HyperPod cluster.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: ExecutionRole
					"execution_role": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The execution role for the instance group to assume.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: InstanceCount
					"instance_count": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "The number of instances you specified to add to the instance group of a SageMaker HyperPod cluster.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: InstanceGroupName
					"instance_group_name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The name of the instance group of a SageMaker HyperPod cluster.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: InstanceStorageConfigs
					"instance_storage_configs": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
						NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: EbsVolumeConfig
								"ebs_volume_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: VolumeSizeInGB
										"volume_size_in_gb": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The size in gigabytes (GB) of the additional EBS volume to be attached to the instances in the SageMaker HyperPod cluster instance group. The additional EBS volume is attached to each instance within the SageMaker HyperPod cluster instance group and mounted to /opt/sagemaker.",
											Computed:    true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Description: "Defines the configuration for attaching additional Amazon Elastic Block Store (EBS) volumes to the instances in the SageMaker HyperPod cluster instance group. The additional EBS volume is attached to each instance within the SageMaker HyperPod cluster instance group and mounted to /opt/sagemaker.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
						}, /*END NESTED OBJECT*/
						Description: "The instance storage configuration for the instance group.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: InstanceType
					"instance_type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The instance type of the instance group of a SageMaker HyperPod cluster.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: LifeCycleConfig
					"life_cycle_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: OnCreate
							"on_create": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The file name of the entrypoint script of lifecycle scripts under SourceS3Uri. This entrypoint script runs during cluster creation.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: SourceS3Uri
							"source_s3_uri": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "An Amazon S3 bucket path where your lifecycle scripts are stored.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Description: "The lifecycle configuration for a SageMaker HyperPod cluster.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: OnStartDeepHealthChecks
					"on_start_deep_health_checks": schema.ListAttribute{ /*START ATTRIBUTE*/
						ElementType: types.StringType,
						Description: "Nodes will undergo advanced stress test to detect and replace faulty instances, based on the type of deep health check(s) passed in.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: OverrideVpcConfig
					"override_vpc_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: SecurityGroupIds
							"security_group_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
								ElementType: types.StringType,
								Description: "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
							// Property: Subnets
							"subnets": schema.ListAttribute{ /*START ATTRIBUTE*/
								ElementType: types.StringType,
								Description: "The ID of the subnets in the VPC to which you want to connect your training job or model.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Description: "Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs, hosted models, and compute resources have access to. You can control access to and from your resources by configuring a VPC.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: ThreadsPerCore
					"threads_per_core": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "The number you specified to TreadsPerCore in CreateCluster for enabling or disabling multithreading. For instance types that support multithreading, you can specify 1 for disabling multithreading and 2 for enabling multithreading.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "The instance groups of the SageMaker HyperPod cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: NodeRecovery
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "If node auto-recovery is set to true, faulty nodes will be replaced or rebooted when a failure is detected. If set to false, nodes will be labelled when a fault is detected.",
		//	  "enum": [
		//	    "Automatic",
		//	    "None"
		//	  ],
		//	  "type": "string"
		//	}
		"node_recovery": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "If node auto-recovery is set to true, faulty nodes will be replaced or rebooted when a failure is detected. If set to false, nodes will be labelled when a fault is detected.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Orchestrator
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Specifies parameter(s) specific to the orchestrator, e.g. specify the EKS cluster.",
		//	  "properties": {
		//	    "Eks": {
		//	      "additionalProperties": false,
		//	      "description": "Specifies parameter(s) related to EKS as orchestrator, e.g. the EKS cluster nodes will attach to,",
		//	      "properties": {
		//	        "ClusterArn": {
		//	          "description": "The ARN of the EKS cluster, such as arn:aws:eks:us-west-2:123456789012:cluster/my-eks-cluster",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "ClusterArn"
		//	      ],
		//	      "type": "object"
		//	    }
		//	  },
		//	  "required": [
		//	    "Eks"
		//	  ],
		//	  "type": "object"
		//	}
		"orchestrator": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: Eks
				"eks": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: ClusterArn
						"cluster_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The ARN of the EKS cluster, such as arn:aws:eks:us-west-2:123456789012:cluster/my-eks-cluster",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "Specifies parameter(s) related to EKS as orchestrator, e.g. the EKS cluster nodes will attach to,",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Specifies parameter(s) specific to the orchestrator, e.g. specify the EKS cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Custom tags for managing the SageMaker HyperPod cluster as an AWS resource. You can add tags to your cluster in the same way you add them in other AWS services that support tagging.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "A key-value pair to associate with a resource.",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
		//	        "maxLength": 256,
		//	        "minLength": 0,
		//	        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "maxItems": 50,
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "Custom tags for managing the SageMaker HyperPod cluster as an AWS resource. You can add tags to your cluster in the same way you add them in other AWS services that support tagging.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: VpcConfig
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs, hosted models, and compute resources have access to. You can control access to and from your resources by configuring a VPC.",
		//	  "properties": {
		//	    "SecurityGroupIds": {
		//	      "description": "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.",
		//	      "insertionOrder": false,
		//	      "items": {
		//	        "maxLength": 32,
		//	        "pattern": "[-0-9a-zA-Z]+",
		//	        "type": "string"
		//	      },
		//	      "maxItems": 5,
		//	      "minItems": 1,
		//	      "type": "array"
		//	    },
		//	    "Subnets": {
		//	      "description": "The ID of the subnets in the VPC to which you want to connect your training job or model.",
		//	      "insertionOrder": false,
		//	      "items": {
		//	        "maxLength": 32,
		//	        "pattern": "[-0-9a-zA-Z]+",
		//	        "type": "string"
		//	      },
		//	      "maxItems": 16,
		//	      "minItems": 1,
		//	      "type": "array"
		//	    }
		//	  },
		//	  "required": [
		//	    "SecurityGroupIds",
		//	    "Subnets"
		//	  ],
		//	  "type": "object"
		//	}
		"vpc_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: SecurityGroupIds
				"security_group_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Description: "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Subnets
				"subnets": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Description: "The ID of the subnets in the VPC to which you want to connect your training job or model.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs, hosted models, and compute resources have access to. You can control access to and from your resources by configuring a VPC.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::SageMaker::Cluster",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::SageMaker::Cluster").WithTerraformTypeName("awscc_sagemaker_cluster")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"cluster_arn":                 "ClusterArn",
		"cluster_name":                "ClusterName",
		"cluster_status":              "ClusterStatus",
		"creation_time":               "CreationTime",
		"current_count":               "CurrentCount",
		"ebs_volume_config":           "EbsVolumeConfig",
		"eks":                         "Eks",
		"execution_role":              "ExecutionRole",
		"failure_message":             "FailureMessage",
		"instance_count":              "InstanceCount",
		"instance_group_name":         "InstanceGroupName",
		"instance_groups":             "InstanceGroups",
		"instance_storage_configs":    "InstanceStorageConfigs",
		"instance_type":               "InstanceType",
		"key":                         "Key",
		"life_cycle_config":           "LifeCycleConfig",
		"node_recovery":               "NodeRecovery",
		"on_create":                   "OnCreate",
		"on_start_deep_health_checks": "OnStartDeepHealthChecks",
		"orchestrator":                "Orchestrator",
		"override_vpc_config":         "OverrideVpcConfig",
		"security_group_ids":          "SecurityGroupIds",
		"source_s3_uri":               "SourceS3Uri",
		"subnets":                     "Subnets",
		"tags":                        "Tags",
		"threads_per_core":            "ThreadsPerCore",
		"value":                       "Value",
		"volume_size_in_gb":           "VolumeSizeInGB",
		"vpc_config":                  "VpcConfig",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
