// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/resource/main.go; DO NOT EDIT.

package sagemaker

import (
	"context"
	"regexp"

	"github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/setvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/listplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/objectplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/setplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
	fwvalidators "github.com/hashicorp/terraform-provider-awscc/internal/validators"
)

func init() {
	registry.AddResourceFactory("awscc_sagemaker_cluster", clusterResource)
}

// clusterResource returns the Terraform awscc_sagemaker_cluster resource.
// This Terraform resource corresponds to the CloudFormation AWS::SageMaker::Cluster resource.
func clusterResource(ctx context.Context) (resource.Resource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: ClusterArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Amazon Resource Name (ARN) of the HyperPod Cluster.",
		//	  "maxLength": 256,
		//	  "pattern": "^arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:cluster/[a-z0-9]{12}$",
		//	  "type": "string"
		//	}
		"cluster_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Amazon Resource Name (ARN) of the HyperPod Cluster.",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ClusterName
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The name of the HyperPod Cluster.",
		//	  "maxLength": 63,
		//	  "minLength": 1,
		//	  "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$",
		//	  "type": "string"
		//	}
		"cluster_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The name of the HyperPod Cluster.",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.LengthBetween(1, 63),
				stringvalidator.RegexMatches(regexp.MustCompile("^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$"), ""),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ClusterStatus
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The status of the HyperPod Cluster.",
		//	  "enum": [
		//	    "Creating",
		//	    "Deleting",
		//	    "Failed",
		//	    "InService",
		//	    "RollingBack",
		//	    "SystemUpdating",
		//	    "Updating"
		//	  ],
		//	  "type": "string"
		//	}
		"cluster_status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The status of the HyperPod Cluster.",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: CreationTime
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The time at which the HyperPod cluster was created.",
		//	  "type": "string"
		//	}
		"creation_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The time at which the HyperPod cluster was created.",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: FailureMessage
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The failure message of the HyperPod Cluster.",
		//	  "type": "string"
		//	}
		"failure_message": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The failure message of the HyperPod Cluster.",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: InstanceGroups
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The instance groups of the SageMaker HyperPod cluster.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "Details of an instance group in a SageMaker HyperPod cluster.",
		//	    "properties": {
		//	      "CurrentCount": {
		//	        "description": "The number of instances that are currently in the instance group of a SageMaker HyperPod cluster.",
		//	        "minimum": 0,
		//	        "type": "integer"
		//	      },
		//	      "ExecutionRole": {
		//	        "description": "The execution role for the instance group to assume.",
		//	        "maxLength": 2048,
		//	        "minLength": 20,
		//	        "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
		//	        "type": "string"
		//	      },
		//	      "ImageId": {
		//	        "description": "AMI Id to be used for launching EC2 instances - HyperPodPublicAmiId or CustomAmiId",
		//	        "maxLength": 21,
		//	        "minLength": 12,
		//	        "pattern": "^ami-[0-9a-fA-F]{8,17}|default$",
		//	        "type": "string"
		//	      },
		//	      "InstanceCount": {
		//	        "description": "The number of instances you specified to add to the instance group of a SageMaker HyperPod cluster.",
		//	        "minimum": 0,
		//	        "type": "integer"
		//	      },
		//	      "InstanceGroupName": {
		//	        "description": "The name of the instance group of a SageMaker HyperPod cluster.",
		//	        "maxLength": 63,
		//	        "minLength": 1,
		//	        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
		//	        "type": "string"
		//	      },
		//	      "InstanceStorageConfigs": {
		//	        "description": "The instance storage configuration for the instance group.",
		//	        "insertionOrder": false,
		//	        "items": {
		//	          "description": "Defines the configuration for attaching additional storage to the instances in the SageMaker HyperPod cluster instance group.",
		//	          "properties": {
		//	            "EbsVolumeConfig": {
		//	              "additionalProperties": false,
		//	              "description": "Defines the configuration for attaching additional Amazon Elastic Block Store (EBS) volumes to the instances in the SageMaker HyperPod cluster instance group. The additional EBS volume is attached to each instance within the SageMaker HyperPod cluster instance group and mounted to /opt/sagemaker.",
		//	              "properties": {
		//	                "VolumeSizeInGB": {
		//	                  "description": "The size in gigabytes (GB) of the additional EBS volume to be attached to the instances in the SageMaker HyperPod cluster instance group. The additional EBS volume is attached to each instance within the SageMaker HyperPod cluster instance group and mounted to /opt/sagemaker.",
		//	                  "maximum": 16384,
		//	                  "minimum": 1,
		//	                  "type": "integer"
		//	                }
		//	              },
		//	              "type": "object"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "maxItems": 1,
		//	        "type": "array"
		//	      },
		//	      "InstanceType": {
		//	        "description": "The instance type of the instance group of a SageMaker HyperPod cluster.",
		//	        "type": "string"
		//	      },
		//	      "LifeCycleConfig": {
		//	        "additionalProperties": false,
		//	        "description": "The lifecycle configuration for a SageMaker HyperPod cluster.",
		//	        "properties": {
		//	          "OnCreate": {
		//	            "description": "The file name of the entrypoint script of lifecycle scripts under SourceS3Uri. This entrypoint script runs during cluster creation.",
		//	            "maxLength": 128,
		//	            "minLength": 1,
		//	            "pattern": "^[\\S\\s]+$",
		//	            "type": "string"
		//	          },
		//	          "SourceS3Uri": {
		//	            "description": "An Amazon S3 bucket path where your lifecycle scripts are stored.",
		//	            "maxLength": 1024,
		//	            "pattern": "^(https|s3)://([^/]+)/?(.*)$",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "OnCreate",
		//	          "SourceS3Uri"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "OnStartDeepHealthChecks": {
		//	        "description": "Nodes will undergo advanced stress test to detect and replace faulty instances, based on the type of deep health check(s) passed in.",
		//	        "insertionOrder": false,
		//	        "items": {
		//	          "description": "The type of deep health check(s) to be performed on the instances in the SageMaker HyperPod cluster instance group.",
		//	          "enum": [
		//	            "InstanceStress",
		//	            "InstanceConnectivity"
		//	          ],
		//	          "type": "string"
		//	        },
		//	        "type": "array"
		//	      },
		//	      "OverrideVpcConfig": {
		//	        "additionalProperties": false,
		//	        "description": "Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs, hosted models, and compute resources have access to. You can control access to and from your resources by configuring a VPC.",
		//	        "properties": {
		//	          "SecurityGroupIds": {
		//	            "description": "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.",
		//	            "insertionOrder": false,
		//	            "items": {
		//	              "maxLength": 32,
		//	              "pattern": "[-0-9a-zA-Z]+",
		//	              "type": "string"
		//	            },
		//	            "maxItems": 5,
		//	            "minItems": 1,
		//	            "type": "array"
		//	          },
		//	          "Subnets": {
		//	            "description": "The ID of the subnets in the VPC to which you want to connect your training job or model.",
		//	            "insertionOrder": false,
		//	            "items": {
		//	              "maxLength": 32,
		//	              "pattern": "[-0-9a-zA-Z]+",
		//	              "type": "string"
		//	            },
		//	            "maxItems": 16,
		//	            "minItems": 1,
		//	            "type": "array"
		//	          }
		//	        },
		//	        "required": [
		//	          "SecurityGroupIds",
		//	          "Subnets"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "ScheduledUpdateConfig": {
		//	        "additionalProperties": false,
		//	        "description": "The configuration object of the schedule that SageMaker follows when updating the AMI.",
		//	        "properties": {
		//	          "DeploymentConfig": {
		//	            "additionalProperties": false,
		//	            "description": "The configuration to use when updating the AMI versions.",
		//	            "properties": {
		//	              "AutoRollbackConfiguration": {
		//	                "description": "An array that contains the alarms that SageMaker monitors to know whether to roll back the AMI update.",
		//	                "insertionOrder": false,
		//	                "items": {
		//	                  "additionalProperties": false,
		//	                  "description": "The details of the alarm to monitor during the AMI update.",
		//	                  "properties": {
		//	                    "AlarmName": {
		//	                      "description": "The name of the alarm.",
		//	                      "maxLength": 256,
		//	                      "minLength": 1,
		//	                      "pattern": "",
		//	                      "type": "string"
		//	                    }
		//	                  },
		//	                  "required": [
		//	                    "AlarmName"
		//	                  ],
		//	                  "type": "object"
		//	                },
		//	                "type": "array"
		//	              },
		//	              "RollingUpdatePolicy": {
		//	                "additionalProperties": false,
		//	                "description": "The policy that SageMaker uses when updating the AMI versions of the cluster.",
		//	                "properties": {
		//	                  "MaximumBatchSize": {
		//	                    "additionalProperties": false,
		//	                    "description": "The configuration of the size measurements of the AMI update. Using this configuration, you can specify whether SageMaker should update your instance group by an amount or percentage of instances.",
		//	                    "properties": {
		//	                      "Type": {
		//	                        "description": "Specifies whether SageMaker should process the update by amount or percentage of instances.",
		//	                        "pattern": "INSTANCE_COUNT|CAPACITY_PERCENTAGE",
		//	                        "type": "string"
		//	                      },
		//	                      "Value": {
		//	                        "description": "Specifies the amount or percentage of instances SageMaker updates at a time.",
		//	                        "minimum": 1,
		//	                        "type": "integer"
		//	                      }
		//	                    },
		//	                    "required": [
		//	                      "Type",
		//	                      "Value"
		//	                    ],
		//	                    "type": "object"
		//	                  },
		//	                  "RollbackMaximumBatchSize": {
		//	                    "additionalProperties": false,
		//	                    "description": "The configuration of the size measurements of the AMI update. Using this configuration, you can specify whether SageMaker should update your instance group by an amount or percentage of instances.",
		//	                    "properties": {
		//	                      "Type": {
		//	                        "description": "Specifies whether SageMaker should process the update by amount or percentage of instances.",
		//	                        "pattern": "INSTANCE_COUNT|CAPACITY_PERCENTAGE",
		//	                        "type": "string"
		//	                      },
		//	                      "Value": {
		//	                        "description": "Specifies the amount or percentage of instances SageMaker updates at a time.",
		//	                        "minimum": 1,
		//	                        "type": "integer"
		//	                      }
		//	                    },
		//	                    "required": [
		//	                      "Type",
		//	                      "Value"
		//	                    ],
		//	                    "type": "object"
		//	                  }
		//	                },
		//	                "required": [
		//	                  "MaximumBatchSize"
		//	                ],
		//	                "type": "object"
		//	              },
		//	              "WaitIntervalInSeconds": {
		//	                "description": "The duration in seconds that SageMaker waits before updating more instances in the cluster.",
		//	                "maximum": 3600,
		//	                "minimum": 0,
		//	                "type": "integer"
		//	              }
		//	            },
		//	            "type": "object"
		//	          },
		//	          "ScheduleExpression": {
		//	            "description": "A cron expression that specifies the schedule that SageMaker follows when updating the AMI.",
		//	            "maxLength": 256,
		//	            "minLength": 1,
		//	            "pattern": "cron\\((?:[0-5][0-9]|[0-9]|) (?:[01][0-9]|2[0-3]|[0-9]) (?:[1-9]|0[1-9]|[12][0-9]|3[01]|\\?) (?:[1-9]|0[1-9]|1[0-2]|\\*|\\*/(?:[1-9]|1[0-2])|) (?:MON|TUE|WED|THU|FRI|SAT|SUN|[1-7]|\\?|L|(?:[1-7]#[1-5])|(?:[1-7]L)) (?:20[2-9][0-9]|\\*|)\\)",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "ScheduleExpression"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "ThreadsPerCore": {
		//	        "description": "The number you specified to TreadsPerCore in CreateCluster for enabling or disabling multithreading. For instance types that support multithreading, you can specify 1 for disabling multithreading and 2 for enabling multithreading.",
		//	        "maximum": 2,
		//	        "minimum": 1,
		//	        "type": "integer"
		//	      },
		//	      "TrainingPlanArn": {
		//	        "description": "The Amazon Resource Name (ARN) of the training plan to use for this cluster instance group. For more information about how to reserve GPU capacity for your SageMaker HyperPod clusters using Amazon SageMaker Training Plan, see CreateTrainingPlan.",
		//	        "maxLength": 2048,
		//	        "minLength": 50,
		//	        "pattern": "^arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:training-plan/.*$",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "ExecutionRole",
		//	      "InstanceCount",
		//	      "InstanceGroupName",
		//	      "InstanceType",
		//	      "LifeCycleConfig"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "minItems": 1,
		//	  "type": "array"
		//	}
		"instance_groups": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: CurrentCount
					"current_count": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "The number of instances that are currently in the instance group of a SageMaker HyperPod cluster.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.Int64{ /*START VALIDATORS*/
							int64validator.AtLeast(0),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
							int64planmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: ExecutionRole
					"execution_role": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The execution role for the instance group to assume.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(20, 2048),
							stringvalidator.RegexMatches(regexp.MustCompile("^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$"), ""),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: ImageId
					"image_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "AMI Id to be used for launching EC2 instances - HyperPodPublicAmiId or CustomAmiId",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(12, 21),
							stringvalidator.RegexMatches(regexp.MustCompile("^ami-[0-9a-fA-F]{8,17}|default$"), ""),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: InstanceCount
					"instance_count": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "The number of instances you specified to add to the instance group of a SageMaker HyperPod cluster.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.Int64{ /*START VALIDATORS*/
							int64validator.AtLeast(0),
							fwvalidators.NotNullInt64(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
							int64planmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: InstanceGroupName
					"instance_group_name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The name of the instance group of a SageMaker HyperPod cluster.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(1, 63),
							stringvalidator.RegexMatches(regexp.MustCompile("^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"), ""),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: InstanceStorageConfigs
					"instance_storage_configs": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
						NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: EbsVolumeConfig
								"ebs_volume_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: VolumeSizeInGB
										"volume_size_in_gb": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The size in gigabytes (GB) of the additional EBS volume to be attached to the instances in the SageMaker HyperPod cluster instance group. The additional EBS volume is attached to each instance within the SageMaker HyperPod cluster instance group and mounted to /opt/sagemaker.",
											Optional:    true,
											Computed:    true,
											Validators: []validator.Int64{ /*START VALIDATORS*/
												int64validator.Between(1, 16384),
											}, /*END VALIDATORS*/
											PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
												int64planmodifier.UseStateForUnknown(),
											}, /*END PLAN MODIFIERS*/
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Description: "Defines the configuration for attaching additional Amazon Elastic Block Store (EBS) volumes to the instances in the SageMaker HyperPod cluster instance group. The additional EBS volume is attached to each instance within the SageMaker HyperPod cluster instance group and mounted to /opt/sagemaker.",
									Optional:    true,
									Computed:    true,
									PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
										objectplanmodifier.UseStateForUnknown(),
									}, /*END PLAN MODIFIERS*/
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
						}, /*END NESTED OBJECT*/
						Description: "The instance storage configuration for the instance group.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.List{ /*START VALIDATORS*/
							listvalidator.SizeAtMost(1),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
							generic.Multiset(),
							listplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: InstanceType
					"instance_type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The instance type of the instance group of a SageMaker HyperPod cluster.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: LifeCycleConfig
					"life_cycle_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: OnCreate
							"on_create": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "The file name of the entrypoint script of lifecycle scripts under SourceS3Uri. This entrypoint script runs during cluster creation.",
								Optional:    true,
								Computed:    true,
								Validators: []validator.String{ /*START VALIDATORS*/
									stringvalidator.LengthBetween(1, 128),
									stringvalidator.RegexMatches(regexp.MustCompile("^[\\S\\s]+$"), ""),
									fwvalidators.NotNullString(),
								}, /*END VALIDATORS*/
								PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
									stringplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
							// Property: SourceS3Uri
							"source_s3_uri": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "An Amazon S3 bucket path where your lifecycle scripts are stored.",
								Optional:    true,
								Computed:    true,
								Validators: []validator.String{ /*START VALIDATORS*/
									stringvalidator.LengthAtMost(1024),
									stringvalidator.RegexMatches(regexp.MustCompile("^(https|s3)://([^/]+)/?(.*)$"), ""),
									fwvalidators.NotNullString(),
								}, /*END VALIDATORS*/
								PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
									stringplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Description: "The lifecycle configuration for a SageMaker HyperPod cluster.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.Object{ /*START VALIDATORS*/
							fwvalidators.NotNullObject(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
							objectplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: OnStartDeepHealthChecks
					"on_start_deep_health_checks": schema.ListAttribute{ /*START ATTRIBUTE*/
						ElementType: types.StringType,
						Description: "Nodes will undergo advanced stress test to detect and replace faulty instances, based on the type of deep health check(s) passed in.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.List{ /*START VALIDATORS*/
							listvalidator.ValueStringsAre(
								stringvalidator.OneOf(
									"InstanceStress",
									"InstanceConnectivity",
								),
							),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
							generic.Multiset(),
							listplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: OverrideVpcConfig
					"override_vpc_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: SecurityGroupIds
							"security_group_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
								ElementType: types.StringType,
								Description: "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.",
								Optional:    true,
								Computed:    true,
								Validators: []validator.List{ /*START VALIDATORS*/
									listvalidator.SizeBetween(1, 5),
									listvalidator.ValueStringsAre(
										stringvalidator.LengthAtMost(32),
										stringvalidator.RegexMatches(regexp.MustCompile("[-0-9a-zA-Z]+"), ""),
									),
									fwvalidators.NotNullList(),
								}, /*END VALIDATORS*/
								PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
									generic.Multiset(),
									listplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
							// Property: Subnets
							"subnets": schema.ListAttribute{ /*START ATTRIBUTE*/
								ElementType: types.StringType,
								Description: "The ID of the subnets in the VPC to which you want to connect your training job or model.",
								Optional:    true,
								Computed:    true,
								Validators: []validator.List{ /*START VALIDATORS*/
									listvalidator.SizeBetween(1, 16),
									listvalidator.ValueStringsAre(
										stringvalidator.LengthAtMost(32),
										stringvalidator.RegexMatches(regexp.MustCompile("[-0-9a-zA-Z]+"), ""),
									),
									fwvalidators.NotNullList(),
								}, /*END VALIDATORS*/
								PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
									generic.Multiset(),
									listplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Description: "Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs, hosted models, and compute resources have access to. You can control access to and from your resources by configuring a VPC.",
						Optional:    true,
						Computed:    true,
						PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
							objectplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: ScheduledUpdateConfig
					"scheduled_update_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: DeploymentConfig
							"deployment_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: AutoRollbackConfiguration
									"auto_rollback_configuration": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
										NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
											Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
												// Property: AlarmName
												"alarm_name": schema.StringAttribute{ /*START ATTRIBUTE*/
													Description: "The name of the alarm.",
													Optional:    true,
													Computed:    true,
													Validators: []validator.String{ /*START VALIDATORS*/
														stringvalidator.LengthBetween(1, 256),
														fwvalidators.NotNullString(),
													}, /*END VALIDATORS*/
													PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
														stringplanmodifier.UseStateForUnknown(),
													}, /*END PLAN MODIFIERS*/
												}, /*END ATTRIBUTE*/
											}, /*END SCHEMA*/
										}, /*END NESTED OBJECT*/
										Description: "An array that contains the alarms that SageMaker monitors to know whether to roll back the AMI update.",
										Optional:    true,
										Computed:    true,
										PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
											generic.Multiset(),
											listplanmodifier.UseStateForUnknown(),
										}, /*END PLAN MODIFIERS*/
									}, /*END ATTRIBUTE*/
									// Property: RollingUpdatePolicy
									"rolling_update_policy": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: MaximumBatchSize
											"maximum_batch_size": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
												Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
													// Property: Type
													"type": schema.StringAttribute{ /*START ATTRIBUTE*/
														Description: "Specifies whether SageMaker should process the update by amount or percentage of instances.",
														Optional:    true,
														Computed:    true,
														Validators: []validator.String{ /*START VALIDATORS*/
															stringvalidator.RegexMatches(regexp.MustCompile("INSTANCE_COUNT|CAPACITY_PERCENTAGE"), ""),
															fwvalidators.NotNullString(),
														}, /*END VALIDATORS*/
														PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
															stringplanmodifier.UseStateForUnknown(),
														}, /*END PLAN MODIFIERS*/
													}, /*END ATTRIBUTE*/
													// Property: Value
													"value": schema.Int64Attribute{ /*START ATTRIBUTE*/
														Description: "Specifies the amount or percentage of instances SageMaker updates at a time.",
														Optional:    true,
														Computed:    true,
														Validators: []validator.Int64{ /*START VALIDATORS*/
															int64validator.AtLeast(1),
															fwvalidators.NotNullInt64(),
														}, /*END VALIDATORS*/
														PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
															int64planmodifier.UseStateForUnknown(),
														}, /*END PLAN MODIFIERS*/
													}, /*END ATTRIBUTE*/
												}, /*END SCHEMA*/
												Description: "The configuration of the size measurements of the AMI update. Using this configuration, you can specify whether SageMaker should update your instance group by an amount or percentage of instances.",
												Optional:    true,
												Computed:    true,
												Validators: []validator.Object{ /*START VALIDATORS*/
													fwvalidators.NotNullObject(),
												}, /*END VALIDATORS*/
												PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
													objectplanmodifier.UseStateForUnknown(),
												}, /*END PLAN MODIFIERS*/
											}, /*END ATTRIBUTE*/
											// Property: RollbackMaximumBatchSize
											"rollback_maximum_batch_size": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
												Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
													// Property: Type
													"type": schema.StringAttribute{ /*START ATTRIBUTE*/
														Description: "Specifies whether SageMaker should process the update by amount or percentage of instances.",
														Optional:    true,
														Computed:    true,
														Validators: []validator.String{ /*START VALIDATORS*/
															stringvalidator.RegexMatches(regexp.MustCompile("INSTANCE_COUNT|CAPACITY_PERCENTAGE"), ""),
															fwvalidators.NotNullString(),
														}, /*END VALIDATORS*/
														PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
															stringplanmodifier.UseStateForUnknown(),
														}, /*END PLAN MODIFIERS*/
													}, /*END ATTRIBUTE*/
													// Property: Value
													"value": schema.Int64Attribute{ /*START ATTRIBUTE*/
														Description: "Specifies the amount or percentage of instances SageMaker updates at a time.",
														Optional:    true,
														Computed:    true,
														Validators: []validator.Int64{ /*START VALIDATORS*/
															int64validator.AtLeast(1),
															fwvalidators.NotNullInt64(),
														}, /*END VALIDATORS*/
														PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
															int64planmodifier.UseStateForUnknown(),
														}, /*END PLAN MODIFIERS*/
													}, /*END ATTRIBUTE*/
												}, /*END SCHEMA*/
												Description: "The configuration of the size measurements of the AMI update. Using this configuration, you can specify whether SageMaker should update your instance group by an amount or percentage of instances.",
												Optional:    true,
												Computed:    true,
												PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
													objectplanmodifier.UseStateForUnknown(),
												}, /*END PLAN MODIFIERS*/
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
										Description: "The policy that SageMaker uses when updating the AMI versions of the cluster.",
										Optional:    true,
										Computed:    true,
										PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
											objectplanmodifier.UseStateForUnknown(),
										}, /*END PLAN MODIFIERS*/
									}, /*END ATTRIBUTE*/
									// Property: WaitIntervalInSeconds
									"wait_interval_in_seconds": schema.Int64Attribute{ /*START ATTRIBUTE*/
										Description: "The duration in seconds that SageMaker waits before updating more instances in the cluster.",
										Optional:    true,
										Computed:    true,
										Validators: []validator.Int64{ /*START VALIDATORS*/
											int64validator.Between(0, 3600),
										}, /*END VALIDATORS*/
										PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
											int64planmodifier.UseStateForUnknown(),
										}, /*END PLAN MODIFIERS*/
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Description: "The configuration to use when updating the AMI versions.",
								Optional:    true,
								Computed:    true,
								PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
									objectplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
							// Property: ScheduleExpression
							"schedule_expression": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "A cron expression that specifies the schedule that SageMaker follows when updating the AMI.",
								Optional:    true,
								Computed:    true,
								Validators: []validator.String{ /*START VALIDATORS*/
									stringvalidator.LengthBetween(1, 256),
									stringvalidator.RegexMatches(regexp.MustCompile("cron\\((?:[0-5][0-9]|[0-9]|) (?:[01][0-9]|2[0-3]|[0-9]) (?:[1-9]|0[1-9]|[12][0-9]|3[01]|\\?) (?:[1-9]|0[1-9]|1[0-2]|\\*|\\*/(?:[1-9]|1[0-2])|) (?:MON|TUE|WED|THU|FRI|SAT|SUN|[1-7]|\\?|L|(?:[1-7]#[1-5])|(?:[1-7]L)) (?:20[2-9][0-9]|\\*|)\\)"), ""),
									fwvalidators.NotNullString(),
								}, /*END VALIDATORS*/
								PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
									stringplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Description: "The configuration object of the schedule that SageMaker follows when updating the AMI.",
						Optional:    true,
						Computed:    true,
						PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
							objectplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: ThreadsPerCore
					"threads_per_core": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "The number you specified to TreadsPerCore in CreateCluster for enabling or disabling multithreading. For instance types that support multithreading, you can specify 1 for disabling multithreading and 2 for enabling multithreading.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.Int64{ /*START VALIDATORS*/
							int64validator.Between(1, 2),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
							int64planmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: TrainingPlanArn
					"training_plan_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The Amazon Resource Name (ARN) of the training plan to use for this cluster instance group. For more information about how to reserve GPU capacity for your SageMaker HyperPod clusters using Amazon SageMaker Training Plan, see CreateTrainingPlan.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(50, 2048),
							stringvalidator.RegexMatches(regexp.MustCompile("^arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:training-plan/.*$"), ""),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "The instance groups of the SageMaker HyperPod cluster.",
			Optional:    true,
			Computed:    true,
			Validators: []validator.List{ /*START VALIDATORS*/
				listvalidator.SizeAtLeast(1),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
				generic.Multiset(),
				listplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: NodeProvisioningMode
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Determines the scaling strategy for the SageMaker HyperPod cluster. When set to 'Continuous', enables continuous scaling which dynamically manages node provisioning. If the parameter is omitted, uses the standard scaling approach in previous release.",
		//	  "enum": [
		//	    "Continuous"
		//	  ],
		//	  "type": "string"
		//	}
		"node_provisioning_mode": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Determines the scaling strategy for the SageMaker HyperPod cluster. When set to 'Continuous', enables continuous scaling which dynamically manages node provisioning. If the parameter is omitted, uses the standard scaling approach in previous release.",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.OneOf(
					"Continuous",
				),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: NodeRecovery
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "If node auto-recovery is set to true, faulty nodes will be replaced or rebooted when a failure is detected. If set to false, nodes will be labelled when a fault is detected.",
		//	  "enum": [
		//	    "Automatic",
		//	    "None"
		//	  ],
		//	  "type": "string"
		//	}
		"node_recovery": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "If node auto-recovery is set to true, faulty nodes will be replaced or rebooted when a failure is detected. If set to false, nodes will be labelled when a fault is detected.",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.OneOf(
					"Automatic",
					"None",
				),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Orchestrator
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Specifies parameter(s) specific to the orchestrator, e.g. specify the EKS cluster.",
		//	  "properties": {
		//	    "Eks": {
		//	      "additionalProperties": false,
		//	      "description": "Specifies parameter(s) related to EKS as orchestrator, e.g. the EKS cluster nodes will attach to,",
		//	      "properties": {
		//	        "ClusterArn": {
		//	          "description": "The ARN of the EKS cluster, such as arn:aws:eks:us-west-2:123456789012:cluster/my-eks-cluster",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "ClusterArn"
		//	      ],
		//	      "type": "object"
		//	    }
		//	  },
		//	  "required": [
		//	    "Eks"
		//	  ],
		//	  "type": "object"
		//	}
		"orchestrator": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: Eks
				"eks": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: ClusterArn
						"cluster_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The ARN of the EKS cluster, such as arn:aws:eks:us-west-2:123456789012:cluster/my-eks-cluster",
							Optional:    true,
							Computed:    true,
							Validators: []validator.String{ /*START VALIDATORS*/
								fwvalidators.NotNullString(),
							}, /*END VALIDATORS*/
							PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
								stringplanmodifier.UseStateForUnknown(),
							}, /*END PLAN MODIFIERS*/
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "Specifies parameter(s) related to EKS as orchestrator, e.g. the EKS cluster nodes will attach to,",
					Optional:    true,
					Computed:    true,
					Validators: []validator.Object{ /*START VALIDATORS*/
						fwvalidators.NotNullObject(),
					}, /*END VALIDATORS*/
					PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
						objectplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Specifies parameter(s) specific to the orchestrator, e.g. specify the EKS cluster.",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
				objectplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: RestrictedInstanceGroups
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The restricted instance groups of the SageMaker HyperPod cluster.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "Details of a restricted instance group in a SageMaker HyperPod cluster.",
		//	    "properties": {
		//	      "CurrentCount": {
		//	        "description": "The number of instances that are currently in the restricted instance group of a SageMaker HyperPod cluster.",
		//	        "minimum": 0,
		//	        "type": "integer"
		//	      },
		//	      "EnvironmentConfig": {
		//	        "additionalProperties": false,
		//	        "description": "The configuration for the restricted instance groups (RIG) environment.",
		//	        "properties": {
		//	          "FSxLustreConfig": {
		//	            "additionalProperties": false,
		//	            "description": "Configuration settings for an Amazon FSx for Lustre file system to be used with the cluster.",
		//	            "properties": {
		//	              "PerUnitStorageThroughput": {
		//	                "description": "The throughput capacity of the FSx for Lustre file system, measured in MB/s per TiB of storage.",
		//	                "maximum": 1000,
		//	                "minimum": 125,
		//	                "type": "integer"
		//	              },
		//	              "SizeInGiB": {
		//	                "description": "The storage capacity of the FSx for Lustre file system, specified in gibibytes (GiB).",
		//	                "maximum": 100800,
		//	                "minimum": 1200,
		//	                "type": "integer"
		//	              }
		//	            },
		//	            "required": [
		//	              "SizeInGiB",
		//	              "PerUnitStorageThroughput"
		//	            ],
		//	            "type": "object"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "ExecutionRole": {
		//	        "description": "The execution role for the instance group to assume.",
		//	        "maxLength": 2048,
		//	        "minLength": 20,
		//	        "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
		//	        "type": "string"
		//	      },
		//	      "InstanceCount": {
		//	        "description": "The number of instances you specified to add to the restricted instance group of a SageMaker HyperPod cluster.",
		//	        "minimum": 0,
		//	        "type": "integer"
		//	      },
		//	      "InstanceGroupName": {
		//	        "description": "The name of the instance group of a SageMaker HyperPod cluster.",
		//	        "maxLength": 63,
		//	        "minLength": 1,
		//	        "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*$",
		//	        "type": "string"
		//	      },
		//	      "InstanceStorageConfigs": {
		//	        "description": "The instance storage configuration for the instance group.",
		//	        "insertionOrder": false,
		//	        "items": {
		//	          "description": "Defines the configuration for attaching additional storage to the instances in the SageMaker HyperPod cluster instance group.",
		//	          "properties": {
		//	            "EbsVolumeConfig": {
		//	              "additionalProperties": false,
		//	              "description": "Defines the configuration for attaching additional Amazon Elastic Block Store (EBS) volumes to the instances in the SageMaker HyperPod cluster instance group. The additional EBS volume is attached to each instance within the SageMaker HyperPod cluster instance group and mounted to /opt/sagemaker.",
		//	              "properties": {
		//	                "VolumeSizeInGB": {
		//	                  "description": "The size in gigabytes (GB) of the additional EBS volume to be attached to the instances in the SageMaker HyperPod cluster instance group. The additional EBS volume is attached to each instance within the SageMaker HyperPod cluster instance group and mounted to /opt/sagemaker.",
		//	                  "maximum": 16384,
		//	                  "minimum": 1,
		//	                  "type": "integer"
		//	                }
		//	              },
		//	              "type": "object"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "maxItems": 1,
		//	        "type": "array"
		//	      },
		//	      "InstanceType": {
		//	        "description": "The instance type of the instance group of a SageMaker HyperPod cluster.",
		//	        "type": "string"
		//	      },
		//	      "OnStartDeepHealthChecks": {
		//	        "description": "Nodes will undergo advanced stress test to detect and replace faulty instances, based on the type of deep health check(s) passed in.",
		//	        "insertionOrder": false,
		//	        "items": {
		//	          "description": "The type of deep health check(s) to be performed on the instances in the SageMaker HyperPod cluster instance group.",
		//	          "enum": [
		//	            "InstanceStress",
		//	            "InstanceConnectivity"
		//	          ],
		//	          "type": "string"
		//	        },
		//	        "type": "array"
		//	      },
		//	      "OverrideVpcConfig": {
		//	        "additionalProperties": false,
		//	        "description": "Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs, hosted models, and compute resources have access to. You can control access to and from your resources by configuring a VPC.",
		//	        "properties": {
		//	          "SecurityGroupIds": {
		//	            "description": "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.",
		//	            "insertionOrder": false,
		//	            "items": {
		//	              "maxLength": 32,
		//	              "pattern": "[-0-9a-zA-Z]+",
		//	              "type": "string"
		//	            },
		//	            "maxItems": 5,
		//	            "minItems": 1,
		//	            "type": "array"
		//	          },
		//	          "Subnets": {
		//	            "description": "The ID of the subnets in the VPC to which you want to connect your training job or model.",
		//	            "insertionOrder": false,
		//	            "items": {
		//	              "maxLength": 32,
		//	              "pattern": "[-0-9a-zA-Z]+",
		//	              "type": "string"
		//	            },
		//	            "maxItems": 16,
		//	            "minItems": 1,
		//	            "type": "array"
		//	          }
		//	        },
		//	        "required": [
		//	          "SecurityGroupIds",
		//	          "Subnets"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "ThreadsPerCore": {
		//	        "description": "The number you specified to TreadsPerCore in CreateCluster for enabling or disabling multithreading. For instance types that support multithreading, you can specify 1 for disabling multithreading and 2 for enabling multithreading.",
		//	        "maximum": 2,
		//	        "minimum": 1,
		//	        "type": "integer"
		//	      },
		//	      "TrainingPlanArn": {
		//	        "description": "The Amazon Resource Name (ARN) of the training plan to use for this cluster restricted instance group. For more information about how to reserve GPU capacity for your SageMaker HyperPod clusters using Amazon SageMaker Training Plan, see CreateTrainingPlan.",
		//	        "maxLength": 2048,
		//	        "minLength": 50,
		//	        "pattern": "^arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:training-plan/.*$",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "ExecutionRole",
		//	      "InstanceCount",
		//	      "InstanceGroupName",
		//	      "InstanceType",
		//	      "EnvironmentConfig"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "minItems": 1,
		//	  "type": "array"
		//	}
		"restricted_instance_groups": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: CurrentCount
					"current_count": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "The number of instances that are currently in the restricted instance group of a SageMaker HyperPod cluster.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.Int64{ /*START VALIDATORS*/
							int64validator.AtLeast(0),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
							int64planmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: EnvironmentConfig
					"environment_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: FSxLustreConfig
							"fsx_lustre_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: PerUnitStorageThroughput
									"per_unit_storage_throughput": schema.Int64Attribute{ /*START ATTRIBUTE*/
										Description: "The throughput capacity of the FSx for Lustre file system, measured in MB/s per TiB of storage.",
										Optional:    true,
										Computed:    true,
										Validators: []validator.Int64{ /*START VALIDATORS*/
											int64validator.Between(125, 1000),
											fwvalidators.NotNullInt64(),
										}, /*END VALIDATORS*/
										PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
											int64planmodifier.UseStateForUnknown(),
										}, /*END PLAN MODIFIERS*/
									}, /*END ATTRIBUTE*/
									// Property: SizeInGiB
									"size_in_gi_b": schema.Int64Attribute{ /*START ATTRIBUTE*/
										Description: "The storage capacity of the FSx for Lustre file system, specified in gibibytes (GiB).",
										Optional:    true,
										Computed:    true,
										Validators: []validator.Int64{ /*START VALIDATORS*/
											int64validator.Between(1200, 100800),
											fwvalidators.NotNullInt64(),
										}, /*END VALIDATORS*/
										PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
											int64planmodifier.UseStateForUnknown(),
										}, /*END PLAN MODIFIERS*/
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Description: "Configuration settings for an Amazon FSx for Lustre file system to be used with the cluster.",
								Optional:    true,
								Computed:    true,
								PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
									objectplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Description: "The configuration for the restricted instance groups (RIG) environment.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.Object{ /*START VALIDATORS*/
							fwvalidators.NotNullObject(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
							objectplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: ExecutionRole
					"execution_role": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The execution role for the instance group to assume.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(20, 2048),
							stringvalidator.RegexMatches(regexp.MustCompile("^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$"), ""),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: InstanceCount
					"instance_count": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "The number of instances you specified to add to the restricted instance group of a SageMaker HyperPod cluster.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.Int64{ /*START VALIDATORS*/
							int64validator.AtLeast(0),
							fwvalidators.NotNullInt64(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
							int64planmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: InstanceGroupName
					"instance_group_name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The name of the instance group of a SageMaker HyperPod cluster.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(1, 63),
							stringvalidator.RegexMatches(regexp.MustCompile("^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"), ""),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: InstanceStorageConfigs
					"instance_storage_configs": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
						NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: EbsVolumeConfig
								"ebs_volume_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: VolumeSizeInGB
										"volume_size_in_gb": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The size in gigabytes (GB) of the additional EBS volume to be attached to the instances in the SageMaker HyperPod cluster instance group. The additional EBS volume is attached to each instance within the SageMaker HyperPod cluster instance group and mounted to /opt/sagemaker.",
											Optional:    true,
											Computed:    true,
											Validators: []validator.Int64{ /*START VALIDATORS*/
												int64validator.Between(1, 16384),
											}, /*END VALIDATORS*/
											PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
												int64planmodifier.UseStateForUnknown(),
											}, /*END PLAN MODIFIERS*/
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Description: "Defines the configuration for attaching additional Amazon Elastic Block Store (EBS) volumes to the instances in the SageMaker HyperPod cluster instance group. The additional EBS volume is attached to each instance within the SageMaker HyperPod cluster instance group and mounted to /opt/sagemaker.",
									Optional:    true,
									Computed:    true,
									PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
										objectplanmodifier.UseStateForUnknown(),
									}, /*END PLAN MODIFIERS*/
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
						}, /*END NESTED OBJECT*/
						Description: "The instance storage configuration for the instance group.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.List{ /*START VALIDATORS*/
							listvalidator.SizeAtMost(1),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
							generic.Multiset(),
							listplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: InstanceType
					"instance_type": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The instance type of the instance group of a SageMaker HyperPod cluster.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: OnStartDeepHealthChecks
					"on_start_deep_health_checks": schema.ListAttribute{ /*START ATTRIBUTE*/
						ElementType: types.StringType,
						Description: "Nodes will undergo advanced stress test to detect and replace faulty instances, based on the type of deep health check(s) passed in.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.List{ /*START VALIDATORS*/
							listvalidator.ValueStringsAre(
								stringvalidator.OneOf(
									"InstanceStress",
									"InstanceConnectivity",
								),
							),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
							generic.Multiset(),
							listplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: OverrideVpcConfig
					"override_vpc_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: SecurityGroupIds
							"security_group_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
								ElementType: types.StringType,
								Description: "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.",
								Optional:    true,
								Computed:    true,
								Validators: []validator.List{ /*START VALIDATORS*/
									listvalidator.SizeBetween(1, 5),
									listvalidator.ValueStringsAre(
										stringvalidator.LengthAtMost(32),
										stringvalidator.RegexMatches(regexp.MustCompile("[-0-9a-zA-Z]+"), ""),
									),
									fwvalidators.NotNullList(),
								}, /*END VALIDATORS*/
								PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
									generic.Multiset(),
									listplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
							// Property: Subnets
							"subnets": schema.ListAttribute{ /*START ATTRIBUTE*/
								ElementType: types.StringType,
								Description: "The ID of the subnets in the VPC to which you want to connect your training job or model.",
								Optional:    true,
								Computed:    true,
								Validators: []validator.List{ /*START VALIDATORS*/
									listvalidator.SizeBetween(1, 16),
									listvalidator.ValueStringsAre(
										stringvalidator.LengthAtMost(32),
										stringvalidator.RegexMatches(regexp.MustCompile("[-0-9a-zA-Z]+"), ""),
									),
									fwvalidators.NotNullList(),
								}, /*END VALIDATORS*/
								PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
									generic.Multiset(),
									listplanmodifier.UseStateForUnknown(),
								}, /*END PLAN MODIFIERS*/
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Description: "Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs, hosted models, and compute resources have access to. You can control access to and from your resources by configuring a VPC.",
						Optional:    true,
						Computed:    true,
						PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
							objectplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: ThreadsPerCore
					"threads_per_core": schema.Int64Attribute{ /*START ATTRIBUTE*/
						Description: "The number you specified to TreadsPerCore in CreateCluster for enabling or disabling multithreading. For instance types that support multithreading, you can specify 1 for disabling multithreading and 2 for enabling multithreading.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.Int64{ /*START VALIDATORS*/
							int64validator.Between(1, 2),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
							int64planmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: TrainingPlanArn
					"training_plan_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The Amazon Resource Name (ARN) of the training plan to use for this cluster restricted instance group. For more information about how to reserve GPU capacity for your SageMaker HyperPod clusters using Amazon SageMaker Training Plan, see CreateTrainingPlan.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(50, 2048),
							stringvalidator.RegexMatches(regexp.MustCompile("^arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:training-plan/.*$"), ""),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "The restricted instance groups of the SageMaker HyperPod cluster.",
			Optional:    true,
			Computed:    true,
			Validators: []validator.List{ /*START VALIDATORS*/
				listvalidator.SizeAtLeast(1),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
				generic.Multiset(),
				listplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Custom tags for managing the SageMaker HyperPod cluster as an AWS resource. You can add tags to your cluster in the same way you add them in other AWS services that support tagging.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "A key-value pair to associate with a resource.",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
		//	        "maxLength": 256,
		//	        "minLength": 0,
		//	        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "maxItems": 50,
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(1, 128),
							stringvalidator.RegexMatches(regexp.MustCompile("^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"), ""),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(0, 256),
							stringvalidator.RegexMatches(regexp.MustCompile("^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$"), ""),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "Custom tags for managing the SageMaker HyperPod cluster as an AWS resource. You can add tags to your cluster in the same way you add them in other AWS services that support tagging.",
			Optional:    true,
			Computed:    true,
			Validators: []validator.Set{ /*START VALIDATORS*/
				setvalidator.SizeAtMost(50),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: VpcConfig
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs, hosted models, and compute resources have access to. You can control access to and from your resources by configuring a VPC.",
		//	  "properties": {
		//	    "SecurityGroupIds": {
		//	      "description": "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.",
		//	      "insertionOrder": false,
		//	      "items": {
		//	        "maxLength": 32,
		//	        "pattern": "[-0-9a-zA-Z]+",
		//	        "type": "string"
		//	      },
		//	      "maxItems": 5,
		//	      "minItems": 1,
		//	      "type": "array"
		//	    },
		//	    "Subnets": {
		//	      "description": "The ID of the subnets in the VPC to which you want to connect your training job or model.",
		//	      "insertionOrder": false,
		//	      "items": {
		//	        "maxLength": 32,
		//	        "pattern": "[-0-9a-zA-Z]+",
		//	        "type": "string"
		//	      },
		//	      "maxItems": 16,
		//	      "minItems": 1,
		//	      "type": "array"
		//	    }
		//	  },
		//	  "required": [
		//	    "SecurityGroupIds",
		//	    "Subnets"
		//	  ],
		//	  "type": "object"
		//	}
		"vpc_config": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: SecurityGroupIds
				"security_group_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Description: "The VPC security group IDs, in the form sg-xxxxxxxx. Specify the security groups for the VPC that is specified in the Subnets field.",
					Optional:    true,
					Computed:    true,
					Validators: []validator.List{ /*START VALIDATORS*/
						listvalidator.SizeBetween(1, 5),
						listvalidator.ValueStringsAre(
							stringvalidator.LengthAtMost(32),
							stringvalidator.RegexMatches(regexp.MustCompile("[-0-9a-zA-Z]+"), ""),
						),
						fwvalidators.NotNullList(),
					}, /*END VALIDATORS*/
					PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
						generic.Multiset(),
						listplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: Subnets
				"subnets": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Description: "The ID of the subnets in the VPC to which you want to connect your training job or model.",
					Optional:    true,
					Computed:    true,
					Validators: []validator.List{ /*START VALIDATORS*/
						listvalidator.SizeBetween(1, 16),
						listvalidator.ValueStringsAre(
							stringvalidator.LengthAtMost(32),
							stringvalidator.RegexMatches(regexp.MustCompile("[-0-9a-zA-Z]+"), ""),
						),
						fwvalidators.NotNullList(),
					}, /*END VALIDATORS*/
					PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
						generic.Multiset(),
						listplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs, hosted models, and compute resources have access to. You can control access to and from your resources by configuring a VPC.",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
				objectplanmodifier.UseStateForUnknown(),
				objectplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	// Corresponds to CloudFormation primaryIdentifier.
	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Computed:    true,
		PlanModifiers: []planmodifier.String{
			stringplanmodifier.UseStateForUnknown(),
		},
	}

	schema := schema.Schema{
		Description: "Resource Type definition for AWS::SageMaker::Cluster",
		Version:     1,
		Attributes:  attributes,
	}

	var opts generic.ResourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::SageMaker::Cluster").WithTerraformTypeName("awscc_sagemaker_cluster")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"alarm_name":                  "AlarmName",
		"auto_rollback_configuration": "AutoRollbackConfiguration",
		"cluster_arn":                 "ClusterArn",
		"cluster_name":                "ClusterName",
		"cluster_status":              "ClusterStatus",
		"creation_time":               "CreationTime",
		"current_count":               "CurrentCount",
		"deployment_config":           "DeploymentConfig",
		"ebs_volume_config":           "EbsVolumeConfig",
		"eks":                         "Eks",
		"environment_config":          "EnvironmentConfig",
		"execution_role":              "ExecutionRole",
		"failure_message":             "FailureMessage",
		"fsx_lustre_config":           "FSxLustreConfig",
		"image_id":                    "ImageId",
		"instance_count":              "InstanceCount",
		"instance_group_name":         "InstanceGroupName",
		"instance_groups":             "InstanceGroups",
		"instance_storage_configs":    "InstanceStorageConfigs",
		"instance_type":               "InstanceType",
		"key":                         "Key",
		"life_cycle_config":           "LifeCycleConfig",
		"maximum_batch_size":          "MaximumBatchSize",
		"node_provisioning_mode":      "NodeProvisioningMode",
		"node_recovery":               "NodeRecovery",
		"on_create":                   "OnCreate",
		"on_start_deep_health_checks": "OnStartDeepHealthChecks",
		"orchestrator":                "Orchestrator",
		"override_vpc_config":         "OverrideVpcConfig",
		"per_unit_storage_throughput": "PerUnitStorageThroughput",
		"restricted_instance_groups":  "RestrictedInstanceGroups",
		"rollback_maximum_batch_size": "RollbackMaximumBatchSize",
		"rolling_update_policy":       "RollingUpdatePolicy",
		"schedule_expression":         "ScheduleExpression",
		"scheduled_update_config":     "ScheduledUpdateConfig",
		"security_group_ids":          "SecurityGroupIds",
		"size_in_gi_b":                "SizeInGiB",
		"source_s3_uri":               "SourceS3Uri",
		"subnets":                     "Subnets",
		"tags":                        "Tags",
		"threads_per_core":            "ThreadsPerCore",
		"training_plan_arn":           "TrainingPlanArn",
		"type":                        "Type",
		"value":                       "Value",
		"volume_size_in_gb":           "VolumeSizeInGB",
		"vpc_config":                  "VpcConfig",
		"wait_interval_in_seconds":    "WaitIntervalInSeconds",
	})

	opts = opts.WithCreateTimeoutInMinutes(720).WithDeleteTimeoutInMinutes(720)

	opts = opts.WithUpdateTimeoutInMinutes(720)

	v, err := generic.NewResource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
