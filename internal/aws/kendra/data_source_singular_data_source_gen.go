// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package kendra

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-jsontypes/jsontypes"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_kendra_data_source", dataSourceDataSource)
}

// dataSourceDataSource returns the Terraform awscc_kendra_data_source data source.
// This Terraform data source corresponds to the CloudFormation AWS::Kendra::DataSource resource.
func dataSourceDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: Arn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "maxLength": 1000,
		//	  "type": "string"
		//	}
		"arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: CustomDocumentEnrichmentConfiguration
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "properties": {
		//	    "InlineConfigurations": {
		//	      "description": "List of InlineCustomDocumentEnrichmentConfigurations",
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "properties": {
		//	          "Condition": {
		//	            "additionalProperties": false,
		//	            "properties": {
		//	              "ConditionDocumentAttributeKey": {
		//	                "maxLength": 200,
		//	                "minLength": 1,
		//	                "pattern": "[a-zA-Z0-9_][a-zA-Z0-9_-]*",
		//	                "type": "string"
		//	              },
		//	              "ConditionOnValue": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "DateValue": {
		//	                    "type": "string"
		//	                  },
		//	                  "LongValue": {
		//	                    "format": "int64",
		//	                    "type": "integer"
		//	                  },
		//	                  "StringListValue": {
		//	                    "items": {
		//	                      "type": "string"
		//	                    },
		//	                    "type": "array"
		//	                  },
		//	                  "StringValue": {
		//	                    "maxLength": 2048,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  }
		//	                },
		//	                "type": "object"
		//	              },
		//	              "Operator": {
		//	                "enum": [
		//	                  "GreaterThan",
		//	                  "GreaterThanOrEquals",
		//	                  "LessThan",
		//	                  "LessThanOrEquals",
		//	                  "Equals",
		//	                  "NotEquals",
		//	                  "Contains",
		//	                  "NotContains",
		//	                  "Exists",
		//	                  "NotExists",
		//	                  "BeginsWith"
		//	                ],
		//	                "type": "string"
		//	              }
		//	            },
		//	            "required": [
		//	              "ConditionDocumentAttributeKey",
		//	              "Operator"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "DocumentContentDeletion": {
		//	            "type": "boolean"
		//	          },
		//	          "Target": {
		//	            "additionalProperties": false,
		//	            "properties": {
		//	              "TargetDocumentAttributeKey": {
		//	                "maxLength": 200,
		//	                "minLength": 1,
		//	                "pattern": "[a-zA-Z0-9_][a-zA-Z0-9_-]*",
		//	                "type": "string"
		//	              },
		//	              "TargetDocumentAttributeValue": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "DateValue": {
		//	                    "type": "string"
		//	                  },
		//	                  "LongValue": {
		//	                    "format": "int64",
		//	                    "type": "integer"
		//	                  },
		//	                  "StringListValue": {
		//	                    "items": {
		//	                      "type": "string"
		//	                    },
		//	                    "type": "array"
		//	                  },
		//	                  "StringValue": {
		//	                    "maxLength": 2048,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  }
		//	                },
		//	                "type": "object"
		//	              },
		//	              "TargetDocumentAttributeValueDeletion": {
		//	                "type": "boolean"
		//	              }
		//	            },
		//	            "required": [
		//	              "TargetDocumentAttributeKey"
		//	            ],
		//	            "type": "object"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "maxItems": 100,
		//	      "type": "array"
		//	    },
		//	    "PostExtractionHookConfiguration": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "InvocationCondition": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "ConditionDocumentAttributeKey": {
		//	              "maxLength": 200,
		//	              "minLength": 1,
		//	              "pattern": "[a-zA-Z0-9_][a-zA-Z0-9_-]*",
		//	              "type": "string"
		//	            },
		//	            "ConditionOnValue": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "DateValue": {
		//	                  "type": "string"
		//	                },
		//	                "LongValue": {
		//	                  "format": "int64",
		//	                  "type": "integer"
		//	                },
		//	                "StringListValue": {
		//	                  "items": {
		//	                    "type": "string"
		//	                  },
		//	                  "type": "array"
		//	                },
		//	                "StringValue": {
		//	                  "maxLength": 2048,
		//	                  "minLength": 1,
		//	                  "type": "string"
		//	                }
		//	              },
		//	              "type": "object"
		//	            },
		//	            "Operator": {
		//	              "enum": [
		//	                "GreaterThan",
		//	                "GreaterThanOrEquals",
		//	                "LessThan",
		//	                "LessThanOrEquals",
		//	                "Equals",
		//	                "NotEquals",
		//	                "Contains",
		//	                "NotContains",
		//	                "Exists",
		//	                "NotExists",
		//	                "BeginsWith"
		//	              ],
		//	              "type": "string"
		//	            }
		//	          },
		//	          "required": [
		//	            "ConditionDocumentAttributeKey",
		//	            "Operator"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "LambdaArn": {
		//	          "maxLength": 2048,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "S3Bucket": {
		//	          "maxLength": 63,
		//	          "minLength": 3,
		//	          "pattern": "[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "LambdaArn",
		//	        "S3Bucket"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "PreExtractionHookConfiguration": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "InvocationCondition": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "ConditionDocumentAttributeKey": {
		//	              "maxLength": 200,
		//	              "minLength": 1,
		//	              "pattern": "[a-zA-Z0-9_][a-zA-Z0-9_-]*",
		//	              "type": "string"
		//	            },
		//	            "ConditionOnValue": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "DateValue": {
		//	                  "type": "string"
		//	                },
		//	                "LongValue": {
		//	                  "format": "int64",
		//	                  "type": "integer"
		//	                },
		//	                "StringListValue": {
		//	                  "items": {
		//	                    "type": "string"
		//	                  },
		//	                  "type": "array"
		//	                },
		//	                "StringValue": {
		//	                  "maxLength": 2048,
		//	                  "minLength": 1,
		//	                  "type": "string"
		//	                }
		//	              },
		//	              "type": "object"
		//	            },
		//	            "Operator": {
		//	              "enum": [
		//	                "GreaterThan",
		//	                "GreaterThanOrEquals",
		//	                "LessThan",
		//	                "LessThanOrEquals",
		//	                "Equals",
		//	                "NotEquals",
		//	                "Contains",
		//	                "NotContains",
		//	                "Exists",
		//	                "NotExists",
		//	                "BeginsWith"
		//	              ],
		//	              "type": "string"
		//	            }
		//	          },
		//	          "required": [
		//	            "ConditionDocumentAttributeKey",
		//	            "Operator"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "LambdaArn": {
		//	          "maxLength": 2048,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "S3Bucket": {
		//	          "maxLength": 63,
		//	          "minLength": 3,
		//	          "pattern": "[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "LambdaArn",
		//	        "S3Bucket"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "RoleArn": {
		//	      "description": "Role ARN",
		//	      "maxLength": 1284,
		//	      "minLength": 1,
		//	      "pattern": "",
		//	      "type": "string"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"custom_document_enrichment_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: InlineConfigurations
				"inline_configurations": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Condition
							"condition": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: ConditionDocumentAttributeKey
									"condition_document_attribute_key": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: ConditionOnValue
									"condition_on_value": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: DateValue
											"date_value": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: LongValue
											"long_value": schema.Int64Attribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: StringListValue
											"string_list_value": schema.ListAttribute{ /*START ATTRIBUTE*/
												ElementType: types.StringType,
												Computed:    true,
											}, /*END ATTRIBUTE*/
											// Property: StringValue
											"string_value": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: Operator
									"operator": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Computed: true,
							}, /*END ATTRIBUTE*/
							// Property: DocumentContentDeletion
							"document_content_deletion": schema.BoolAttribute{ /*START ATTRIBUTE*/
								Computed: true,
							}, /*END ATTRIBUTE*/
							// Property: Target
							"target": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: TargetDocumentAttributeKey
									"target_document_attribute_key": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: TargetDocumentAttributeValue
									"target_document_attribute_value": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: DateValue
											"date_value": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: LongValue
											"long_value": schema.Int64Attribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: StringListValue
											"string_list_value": schema.ListAttribute{ /*START ATTRIBUTE*/
												ElementType: types.StringType,
												Computed:    true,
											}, /*END ATTRIBUTE*/
											// Property: StringValue
											"string_value": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: TargetDocumentAttributeValueDeletion
									"target_document_attribute_value_deletion": schema.BoolAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Computed: true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Description: "List of InlineCustomDocumentEnrichmentConfigurations",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: PostExtractionHookConfiguration
				"post_extraction_hook_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: InvocationCondition
						"invocation_condition": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: ConditionDocumentAttributeKey
								"condition_document_attribute_key": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: ConditionOnValue
								"condition_on_value": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: DateValue
										"date_value": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: LongValue
										"long_value": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: StringListValue
										"string_list_value": schema.ListAttribute{ /*START ATTRIBUTE*/
											ElementType: types.StringType,
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: StringValue
										"string_value": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: Operator
								"operator": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: LambdaArn
						"lambda_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: S3Bucket
						"s3_bucket": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: PreExtractionHookConfiguration
				"pre_extraction_hook_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: InvocationCondition
						"invocation_condition": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: ConditionDocumentAttributeKey
								"condition_document_attribute_key": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: ConditionOnValue
								"condition_on_value": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: DateValue
										"date_value": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: LongValue
										"long_value": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: StringListValue
										"string_list_value": schema.ListAttribute{ /*START ATTRIBUTE*/
											ElementType: types.StringType,
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: StringValue
										"string_value": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: Operator
								"operator": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: LambdaArn
						"lambda_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: S3Bucket
						"s3_bucket": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: RoleArn
				"role_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "Role ARN",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: DataSourceConfiguration
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "oneOf": [
		//	    {
		//	      "required": [
		//	        "S3Configuration"
		//	      ]
		//	    },
		//	    {
		//	      "required": [
		//	        "SharePointConfiguration"
		//	      ]
		//	    },
		//	    {
		//	      "required": [
		//	        "SalesforceConfiguration"
		//	      ]
		//	    },
		//	    {
		//	      "required": [
		//	        "OneDriveConfiguration"
		//	      ]
		//	    },
		//	    {
		//	      "required": [
		//	        "ServiceNowConfiguration"
		//	      ]
		//	    },
		//	    {
		//	      "required": [
		//	        "DatabaseConfiguration"
		//	      ]
		//	    },
		//	    {
		//	      "required": [
		//	        "ConfluenceConfiguration"
		//	      ]
		//	    },
		//	    {
		//	      "required": [
		//	        "GoogleDriveConfiguration"
		//	      ]
		//	    },
		//	    {
		//	      "required": [
		//	        "WebCrawlerConfiguration"
		//	      ]
		//	    },
		//	    {
		//	      "required": [
		//	        "WorkDocsConfiguration"
		//	      ]
		//	    },
		//	    {
		//	      "required": [
		//	        "TemplateConfiguration"
		//	      ]
		//	    }
		//	  ],
		//	  "properties": {
		//	    "ConfluenceConfiguration": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "AttachmentConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "AttachmentFieldMappings": {
		//	              "items": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "DataSourceFieldName": {
		//	                    "enum": [
		//	                      "AUTHOR",
		//	                      "CONTENT_TYPE",
		//	                      "CREATED_DATE",
		//	                      "DISPLAY_URL",
		//	                      "FILE_SIZE",
		//	                      "ITEM_TYPE",
		//	                      "PARENT_ID",
		//	                      "SPACE_KEY",
		//	                      "SPACE_NAME",
		//	                      "URL",
		//	                      "VERSION"
		//	                    ],
		//	                    "type": "string"
		//	                  },
		//	                  "DateFieldFormat": {
		//	                    "maxLength": 40,
		//	                    "minLength": 4,
		//	                    "type": "string"
		//	                  },
		//	                  "IndexFieldName": {
		//	                    "maxLength": 30,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  }
		//	                },
		//	                "required": [
		//	                  "DataSourceFieldName",
		//	                  "IndexFieldName"
		//	                ],
		//	                "type": "object"
		//	              },
		//	              "maxItems": 11,
		//	              "minItems": 1,
		//	              "type": "array"
		//	            },
		//	            "CrawlAttachments": {
		//	              "type": "boolean"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "BlogConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "BlogFieldMappings": {
		//	              "items": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "DataSourceFieldName": {
		//	                    "enum": [
		//	                      "AUTHOR",
		//	                      "DISPLAY_URL",
		//	                      "ITEM_TYPE",
		//	                      "LABELS",
		//	                      "PUBLISH_DATE",
		//	                      "SPACE_KEY",
		//	                      "SPACE_NAME",
		//	                      "URL",
		//	                      "VERSION"
		//	                    ],
		//	                    "type": "string"
		//	                  },
		//	                  "DateFieldFormat": {
		//	                    "maxLength": 40,
		//	                    "minLength": 4,
		//	                    "type": "string"
		//	                  },
		//	                  "IndexFieldName": {
		//	                    "maxLength": 30,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  }
		//	                },
		//	                "required": [
		//	                  "DataSourceFieldName",
		//	                  "IndexFieldName"
		//	                ],
		//	                "type": "object"
		//	              },
		//	              "maxItems": 9,
		//	              "minItems": 1,
		//	              "type": "array"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "ExclusionPatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "InclusionPatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "PageConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "PageFieldMappings": {
		//	              "items": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "DataSourceFieldName": {
		//	                    "enum": [
		//	                      "AUTHOR",
		//	                      "CONTENT_STATUS",
		//	                      "CREATED_DATE",
		//	                      "DISPLAY_URL",
		//	                      "ITEM_TYPE",
		//	                      "LABELS",
		//	                      "MODIFIED_DATE",
		//	                      "PARENT_ID",
		//	                      "SPACE_KEY",
		//	                      "SPACE_NAME",
		//	                      "URL",
		//	                      "VERSION"
		//	                    ],
		//	                    "type": "string"
		//	                  },
		//	                  "DateFieldFormat": {
		//	                    "maxLength": 40,
		//	                    "minLength": 4,
		//	                    "type": "string"
		//	                  },
		//	                  "IndexFieldName": {
		//	                    "maxLength": 30,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  }
		//	                },
		//	                "required": [
		//	                  "DataSourceFieldName",
		//	                  "IndexFieldName"
		//	                ],
		//	                "type": "object"
		//	              },
		//	              "maxItems": 12,
		//	              "minItems": 1,
		//	              "type": "array"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "SecretArn": {
		//	          "maxLength": 1284,
		//	          "minLength": 1,
		//	          "pattern": "",
		//	          "type": "string"
		//	        },
		//	        "ServerUrl": {
		//	          "maxLength": 2048,
		//	          "minLength": 1,
		//	          "pattern": "^(https?|ftp|file)://([^\\s]*)",
		//	          "type": "string"
		//	        },
		//	        "SpaceConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "CrawlArchivedSpaces": {
		//	              "type": "boolean"
		//	            },
		//	            "CrawlPersonalSpaces": {
		//	              "type": "boolean"
		//	            },
		//	            "ExcludeSpaces": {
		//	              "items": {
		//	                "maxLength": 255,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              },
		//	              "minItems": 1,
		//	              "type": "array"
		//	            },
		//	            "IncludeSpaces": {
		//	              "items": {
		//	                "maxLength": 255,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              },
		//	              "minItems": 1,
		//	              "type": "array"
		//	            },
		//	            "SpaceFieldMappings": {
		//	              "items": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "DataSourceFieldName": {
		//	                    "enum": [
		//	                      "DISPLAY_URL",
		//	                      "ITEM_TYPE",
		//	                      "SPACE_KEY",
		//	                      "URL"
		//	                    ],
		//	                    "type": "string"
		//	                  },
		//	                  "DateFieldFormat": {
		//	                    "maxLength": 40,
		//	                    "minLength": 4,
		//	                    "type": "string"
		//	                  },
		//	                  "IndexFieldName": {
		//	                    "maxLength": 30,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  }
		//	                },
		//	                "required": [
		//	                  "DataSourceFieldName",
		//	                  "IndexFieldName"
		//	                ],
		//	                "type": "object"
		//	              },
		//	              "maxItems": 4,
		//	              "minItems": 1,
		//	              "type": "array"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "Version": {
		//	          "enum": [
		//	            "CLOUD",
		//	            "SERVER"
		//	          ],
		//	          "type": "string"
		//	        },
		//	        "VpcConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "SecurityGroupIds": {
		//	              "items": {
		//	                "maxLength": 200,
		//	                "minLength": 1,
		//	                "pattern": "[\\-0-9a-zA-Z]+",
		//	                "type": "string"
		//	              },
		//	              "maxItems": 10,
		//	              "type": "array"
		//	            },
		//	            "SubnetIds": {
		//	              "items": {
		//	                "maxLength": 200,
		//	                "minLength": 1,
		//	                "pattern": "[\\-0-9a-zA-Z]+",
		//	                "type": "string"
		//	              },
		//	              "maxItems": 6,
		//	              "type": "array"
		//	            }
		//	          },
		//	          "required": [
		//	            "SubnetIds",
		//	            "SecurityGroupIds"
		//	          ],
		//	          "type": "object"
		//	        }
		//	      },
		//	      "required": [
		//	        "ServerUrl",
		//	        "SecretArn",
		//	        "Version"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "DatabaseConfiguration": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "AclConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "AllowedGroupsColumnName": {
		//	              "maxLength": 100,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            }
		//	          },
		//	          "required": [
		//	            "AllowedGroupsColumnName"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "ColumnConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "ChangeDetectingColumns": {
		//	              "items": {
		//	                "maxLength": 100,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              },
		//	              "maxItems": 5,
		//	              "minItems": 1,
		//	              "type": "array"
		//	            },
		//	            "DocumentDataColumnName": {
		//	              "maxLength": 100,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            },
		//	            "DocumentIdColumnName": {
		//	              "maxLength": 100,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            },
		//	            "DocumentTitleColumnName": {
		//	              "maxLength": 100,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            },
		//	            "FieldMappings": {
		//	              "items": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "DataSourceFieldName": {
		//	                    "maxLength": 100,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  },
		//	                  "DateFieldFormat": {
		//	                    "maxLength": 40,
		//	                    "minLength": 4,
		//	                    "type": "string"
		//	                  },
		//	                  "IndexFieldName": {
		//	                    "maxLength": 30,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  }
		//	                },
		//	                "required": [
		//	                  "DataSourceFieldName",
		//	                  "IndexFieldName"
		//	                ],
		//	                "type": "object"
		//	              },
		//	              "maxItems": 100,
		//	              "type": "array"
		//	            }
		//	          },
		//	          "required": [
		//	            "DocumentIdColumnName",
		//	            "DocumentDataColumnName",
		//	            "ChangeDetectingColumns"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "ConnectionConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "DatabaseHost": {
		//	              "maxLength": 253,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            },
		//	            "DatabaseName": {
		//	              "maxLength": 100,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            },
		//	            "DatabasePort": {
		//	              "maximum": 65535,
		//	              "minimum": 1,
		//	              "type": "integer"
		//	            },
		//	            "SecretArn": {
		//	              "maxLength": 1284,
		//	              "minLength": 1,
		//	              "pattern": "",
		//	              "type": "string"
		//	            },
		//	            "TableName": {
		//	              "maxLength": 100,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            }
		//	          },
		//	          "required": [
		//	            "DatabaseHost",
		//	            "DatabasePort",
		//	            "DatabaseName",
		//	            "TableName",
		//	            "SecretArn"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "DatabaseEngineType": {
		//	          "enum": [
		//	            "RDS_AURORA_MYSQL",
		//	            "RDS_AURORA_POSTGRESQL",
		//	            "RDS_MYSQL",
		//	            "RDS_POSTGRESQL"
		//	          ],
		//	          "type": "string"
		//	        },
		//	        "SqlConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "QueryIdentifiersEnclosingOption": {
		//	              "enum": [
		//	                "DOUBLE_QUOTES",
		//	                "NONE"
		//	              ],
		//	              "type": "string"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "VpcConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "SecurityGroupIds": {
		//	              "items": {
		//	                "maxLength": 200,
		//	                "minLength": 1,
		//	                "pattern": "[\\-0-9a-zA-Z]+",
		//	                "type": "string"
		//	              },
		//	              "maxItems": 10,
		//	              "type": "array"
		//	            },
		//	            "SubnetIds": {
		//	              "items": {
		//	                "maxLength": 200,
		//	                "minLength": 1,
		//	                "pattern": "[\\-0-9a-zA-Z]+",
		//	                "type": "string"
		//	              },
		//	              "maxItems": 6,
		//	              "type": "array"
		//	            }
		//	          },
		//	          "required": [
		//	            "SubnetIds",
		//	            "SecurityGroupIds"
		//	          ],
		//	          "type": "object"
		//	        }
		//	      },
		//	      "required": [
		//	        "ConnectionConfiguration",
		//	        "ColumnConfiguration",
		//	        "DatabaseEngineType"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "GoogleDriveConfiguration": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "ExcludeMimeTypes": {
		//	          "items": {
		//	            "maxLength": 256,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 30,
		//	          "minItems": 0,
		//	          "type": "array"
		//	        },
		//	        "ExcludeSharedDrives": {
		//	          "items": {
		//	            "maxLength": 256,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "minItems": 0,
		//	          "type": "array"
		//	        },
		//	        "ExcludeUserAccounts": {
		//	          "items": {
		//	            "maxLength": 256,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "minItems": 0,
		//	          "type": "array"
		//	        },
		//	        "ExclusionPatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "FieldMappings": {
		//	          "items": {
		//	            "additionalProperties": false,
		//	            "properties": {
		//	              "DataSourceFieldName": {
		//	                "maxLength": 100,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              },
		//	              "DateFieldFormat": {
		//	                "maxLength": 40,
		//	                "minLength": 4,
		//	                "type": "string"
		//	              },
		//	              "IndexFieldName": {
		//	                "maxLength": 30,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              }
		//	            },
		//	            "required": [
		//	              "DataSourceFieldName",
		//	              "IndexFieldName"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "InclusionPatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "SecretArn": {
		//	          "maxLength": 1284,
		//	          "minLength": 1,
		//	          "pattern": "",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "SecretArn"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "OneDriveConfiguration": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "DisableLocalGroups": {
		//	          "type": "boolean"
		//	        },
		//	        "ExclusionPatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "FieldMappings": {
		//	          "items": {
		//	            "additionalProperties": false,
		//	            "properties": {
		//	              "DataSourceFieldName": {
		//	                "maxLength": 100,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              },
		//	              "DateFieldFormat": {
		//	                "maxLength": 40,
		//	                "minLength": 4,
		//	                "type": "string"
		//	              },
		//	              "IndexFieldName": {
		//	                "maxLength": 30,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              }
		//	            },
		//	            "required": [
		//	              "DataSourceFieldName",
		//	              "IndexFieldName"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "InclusionPatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "OneDriveUsers": {
		//	          "additionalProperties": false,
		//	          "oneOf": [
		//	            {
		//	              "required": [
		//	                "OneDriveUserList"
		//	              ]
		//	            },
		//	            {
		//	              "required": [
		//	                "OneDriveUserS3Path"
		//	              ]
		//	            }
		//	          ],
		//	          "properties": {
		//	            "OneDriveUserList": {
		//	              "items": {
		//	                "maxLength": 256,
		//	                "minLength": 1,
		//	                "pattern": "",
		//	                "type": "string"
		//	              },
		//	              "maxItems": 100,
		//	              "minItems": 1,
		//	              "type": "array"
		//	            },
		//	            "OneDriveUserS3Path": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "Bucket": {
		//	                  "maxLength": 63,
		//	                  "minLength": 3,
		//	                  "pattern": "[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]",
		//	                  "type": "string"
		//	                },
		//	                "Key": {
		//	                  "maxLength": 1024,
		//	                  "minLength": 1,
		//	                  "type": "string"
		//	                }
		//	              },
		//	              "required": [
		//	                "Bucket",
		//	                "Key"
		//	              ],
		//	              "type": "object"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "SecretArn": {
		//	          "maxLength": 1284,
		//	          "minLength": 1,
		//	          "pattern": "",
		//	          "type": "string"
		//	        },
		//	        "TenantDomain": {
		//	          "maxLength": 256,
		//	          "minLength": 1,
		//	          "pattern": "^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+[a-z]{2,}$",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "TenantDomain",
		//	        "SecretArn",
		//	        "OneDriveUsers"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "S3Configuration": {
		//	      "additionalProperties": false,
		//	      "description": "S3 data source configuration",
		//	      "properties": {
		//	        "AccessControlListConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "KeyPath": {
		//	              "maxLength": 1024,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "BucketName": {
		//	          "maxLength": 63,
		//	          "minLength": 3,
		//	          "pattern": "[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]",
		//	          "type": "string"
		//	        },
		//	        "DocumentsMetadataConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "S3Prefix": {
		//	              "maxLength": 1024,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "ExclusionPatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "InclusionPatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "InclusionPrefixes": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        }
		//	      },
		//	      "required": [
		//	        "BucketName"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "SalesforceConfiguration": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "ChatterFeedConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "DocumentDataFieldName": {
		//	              "maxLength": 100,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            },
		//	            "DocumentTitleFieldName": {
		//	              "maxLength": 100,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            },
		//	            "FieldMappings": {
		//	              "items": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "DataSourceFieldName": {
		//	                    "maxLength": 100,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  },
		//	                  "DateFieldFormat": {
		//	                    "maxLength": 40,
		//	                    "minLength": 4,
		//	                    "type": "string"
		//	                  },
		//	                  "IndexFieldName": {
		//	                    "maxLength": 30,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  }
		//	                },
		//	                "required": [
		//	                  "DataSourceFieldName",
		//	                  "IndexFieldName"
		//	                ],
		//	                "type": "object"
		//	              },
		//	              "maxItems": 100,
		//	              "type": "array"
		//	            },
		//	            "IncludeFilterTypes": {
		//	              "items": {
		//	                "enum": [
		//	                  "ACTIVE_USER",
		//	                  "STANDARD_USER"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "maxItems": 2,
		//	              "minItems": 1,
		//	              "type": "array"
		//	            }
		//	          },
		//	          "required": [
		//	            "DocumentDataFieldName"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "CrawlAttachments": {
		//	          "type": "boolean"
		//	        },
		//	        "ExcludeAttachmentFilePatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "IncludeAttachmentFilePatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "KnowledgeArticleConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "CustomKnowledgeArticleTypeConfigurations": {
		//	              "items": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "DocumentDataFieldName": {
		//	                    "maxLength": 100,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  },
		//	                  "DocumentTitleFieldName": {
		//	                    "maxLength": 100,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  },
		//	                  "FieldMappings": {
		//	                    "items": {
		//	                      "additionalProperties": false,
		//	                      "properties": {
		//	                        "DataSourceFieldName": {
		//	                          "maxLength": 100,
		//	                          "minLength": 1,
		//	                          "type": "string"
		//	                        },
		//	                        "DateFieldFormat": {
		//	                          "maxLength": 40,
		//	                          "minLength": 4,
		//	                          "type": "string"
		//	                        },
		//	                        "IndexFieldName": {
		//	                          "maxLength": 30,
		//	                          "minLength": 1,
		//	                          "type": "string"
		//	                        }
		//	                      },
		//	                      "required": [
		//	                        "DataSourceFieldName",
		//	                        "IndexFieldName"
		//	                      ],
		//	                      "type": "object"
		//	                    },
		//	                    "maxItems": 100,
		//	                    "type": "array"
		//	                  },
		//	                  "Name": {
		//	                    "maxLength": 100,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  }
		//	                },
		//	                "required": [
		//	                  "Name",
		//	                  "DocumentDataFieldName"
		//	                ],
		//	                "type": "object"
		//	              },
		//	              "maxItems": 10,
		//	              "minItems": 1,
		//	              "type": "array"
		//	            },
		//	            "IncludedStates": {
		//	              "items": {
		//	                "enum": [
		//	                  "DRAFT",
		//	                  "PUBLISHED",
		//	                  "ARCHIVED"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "maxItems": 3,
		//	              "minItems": 1,
		//	              "type": "array"
		//	            },
		//	            "StandardKnowledgeArticleTypeConfiguration": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "DocumentDataFieldName": {
		//	                  "maxLength": 100,
		//	                  "minLength": 1,
		//	                  "type": "string"
		//	                },
		//	                "DocumentTitleFieldName": {
		//	                  "maxLength": 100,
		//	                  "minLength": 1,
		//	                  "type": "string"
		//	                },
		//	                "FieldMappings": {
		//	                  "items": {
		//	                    "additionalProperties": false,
		//	                    "properties": {
		//	                      "DataSourceFieldName": {
		//	                        "maxLength": 100,
		//	                        "minLength": 1,
		//	                        "type": "string"
		//	                      },
		//	                      "DateFieldFormat": {
		//	                        "maxLength": 40,
		//	                        "minLength": 4,
		//	                        "type": "string"
		//	                      },
		//	                      "IndexFieldName": {
		//	                        "maxLength": 30,
		//	                        "minLength": 1,
		//	                        "type": "string"
		//	                      }
		//	                    },
		//	                    "required": [
		//	                      "DataSourceFieldName",
		//	                      "IndexFieldName"
		//	                    ],
		//	                    "type": "object"
		//	                  },
		//	                  "maxItems": 100,
		//	                  "type": "array"
		//	                }
		//	              },
		//	              "required": [
		//	                "DocumentDataFieldName"
		//	              ],
		//	              "type": "object"
		//	            }
		//	          },
		//	          "required": [
		//	            "IncludedStates"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "SecretArn": {
		//	          "maxLength": 1284,
		//	          "minLength": 1,
		//	          "pattern": "",
		//	          "type": "string"
		//	        },
		//	        "ServerUrl": {
		//	          "maxLength": 2048,
		//	          "minLength": 1,
		//	          "pattern": "^(https?|ftp|file)://([^\\s]*)",
		//	          "type": "string"
		//	        },
		//	        "StandardObjectAttachmentConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "DocumentTitleFieldName": {
		//	              "maxLength": 100,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            },
		//	            "FieldMappings": {
		//	              "items": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "DataSourceFieldName": {
		//	                    "maxLength": 100,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  },
		//	                  "DateFieldFormat": {
		//	                    "maxLength": 40,
		//	                    "minLength": 4,
		//	                    "type": "string"
		//	                  },
		//	                  "IndexFieldName": {
		//	                    "maxLength": 30,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  }
		//	                },
		//	                "required": [
		//	                  "DataSourceFieldName",
		//	                  "IndexFieldName"
		//	                ],
		//	                "type": "object"
		//	              },
		//	              "maxItems": 100,
		//	              "type": "array"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "StandardObjectConfigurations": {
		//	          "items": {
		//	            "additionalProperties": false,
		//	            "properties": {
		//	              "DocumentDataFieldName": {
		//	                "maxLength": 100,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              },
		//	              "DocumentTitleFieldName": {
		//	                "maxLength": 100,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              },
		//	              "FieldMappings": {
		//	                "items": {
		//	                  "additionalProperties": false,
		//	                  "properties": {
		//	                    "DataSourceFieldName": {
		//	                      "maxLength": 100,
		//	                      "minLength": 1,
		//	                      "type": "string"
		//	                    },
		//	                    "DateFieldFormat": {
		//	                      "maxLength": 40,
		//	                      "minLength": 4,
		//	                      "type": "string"
		//	                    },
		//	                    "IndexFieldName": {
		//	                      "maxLength": 30,
		//	                      "minLength": 1,
		//	                      "type": "string"
		//	                    }
		//	                  },
		//	                  "required": [
		//	                    "DataSourceFieldName",
		//	                    "IndexFieldName"
		//	                  ],
		//	                  "type": "object"
		//	                },
		//	                "maxItems": 100,
		//	                "type": "array"
		//	              },
		//	              "Name": {
		//	                "enum": [
		//	                  "ACCOUNT",
		//	                  "CAMPAIGN",
		//	                  "CASE",
		//	                  "CONTACT",
		//	                  "CONTRACT",
		//	                  "DOCUMENT",
		//	                  "GROUP",
		//	                  "IDEA",
		//	                  "LEAD",
		//	                  "OPPORTUNITY",
		//	                  "PARTNER",
		//	                  "PRICEBOOK",
		//	                  "PRODUCT",
		//	                  "PROFILE",
		//	                  "SOLUTION",
		//	                  "TASK",
		//	                  "USER"
		//	                ],
		//	                "type": "string"
		//	              }
		//	            },
		//	            "required": [
		//	              "Name",
		//	              "DocumentDataFieldName"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "maxItems": 17,
		//	          "minItems": 1,
		//	          "type": "array"
		//	        }
		//	      },
		//	      "required": [
		//	        "ServerUrl",
		//	        "SecretArn"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "ServiceNowConfiguration": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "AuthenticationType": {
		//	          "enum": [
		//	            "HTTP_BASIC",
		//	            "OAUTH2"
		//	          ],
		//	          "type": "string"
		//	        },
		//	        "HostUrl": {
		//	          "maxLength": 2048,
		//	          "minLength": 1,
		//	          "pattern": "",
		//	          "type": "string"
		//	        },
		//	        "KnowledgeArticleConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "CrawlAttachments": {
		//	              "type": "boolean"
		//	            },
		//	            "DocumentDataFieldName": {
		//	              "maxLength": 100,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            },
		//	            "DocumentTitleFieldName": {
		//	              "maxLength": 100,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            },
		//	            "ExcludeAttachmentFilePatterns": {
		//	              "items": {
		//	                "maxLength": 50,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              },
		//	              "maxItems": 100,
		//	              "type": "array"
		//	            },
		//	            "FieldMappings": {
		//	              "items": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "DataSourceFieldName": {
		//	                    "maxLength": 100,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  },
		//	                  "DateFieldFormat": {
		//	                    "maxLength": 40,
		//	                    "minLength": 4,
		//	                    "type": "string"
		//	                  },
		//	                  "IndexFieldName": {
		//	                    "maxLength": 30,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  }
		//	                },
		//	                "required": [
		//	                  "DataSourceFieldName",
		//	                  "IndexFieldName"
		//	                ],
		//	                "type": "object"
		//	              },
		//	              "maxItems": 100,
		//	              "type": "array"
		//	            },
		//	            "FilterQuery": {
		//	              "maxLength": 2048,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            },
		//	            "IncludeAttachmentFilePatterns": {
		//	              "items": {
		//	                "maxLength": 50,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              },
		//	              "maxItems": 100,
		//	              "type": "array"
		//	            }
		//	          },
		//	          "required": [
		//	            "DocumentDataFieldName"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "SecretArn": {
		//	          "maxLength": 1284,
		//	          "minLength": 1,
		//	          "pattern": "",
		//	          "type": "string"
		//	        },
		//	        "ServiceCatalogConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "CrawlAttachments": {
		//	              "type": "boolean"
		//	            },
		//	            "DocumentDataFieldName": {
		//	              "maxLength": 100,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            },
		//	            "DocumentTitleFieldName": {
		//	              "maxLength": 100,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            },
		//	            "ExcludeAttachmentFilePatterns": {
		//	              "items": {
		//	                "maxLength": 50,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              },
		//	              "maxItems": 100,
		//	              "type": "array"
		//	            },
		//	            "FieldMappings": {
		//	              "items": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "DataSourceFieldName": {
		//	                    "maxLength": 100,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  },
		//	                  "DateFieldFormat": {
		//	                    "maxLength": 40,
		//	                    "minLength": 4,
		//	                    "type": "string"
		//	                  },
		//	                  "IndexFieldName": {
		//	                    "maxLength": 30,
		//	                    "minLength": 1,
		//	                    "type": "string"
		//	                  }
		//	                },
		//	                "required": [
		//	                  "DataSourceFieldName",
		//	                  "IndexFieldName"
		//	                ],
		//	                "type": "object"
		//	              },
		//	              "maxItems": 100,
		//	              "type": "array"
		//	            },
		//	            "IncludeAttachmentFilePatterns": {
		//	              "items": {
		//	                "maxLength": 50,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              },
		//	              "maxItems": 100,
		//	              "type": "array"
		//	            }
		//	          },
		//	          "required": [
		//	            "DocumentDataFieldName"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "ServiceNowBuildVersion": {
		//	          "enum": [
		//	            "LONDON",
		//	            "OTHERS"
		//	          ],
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "HostUrl",
		//	        "SecretArn",
		//	        "ServiceNowBuildVersion"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "SharePointConfiguration": {
		//	      "additionalProperties": false,
		//	      "description": "SharePoint configuration",
		//	      "properties": {
		//	        "CrawlAttachments": {
		//	          "type": "boolean"
		//	        },
		//	        "DisableLocalGroups": {
		//	          "type": "boolean"
		//	        },
		//	        "DocumentTitleFieldName": {
		//	          "maxLength": 100,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "ExclusionPatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "FieldMappings": {
		//	          "items": {
		//	            "additionalProperties": false,
		//	            "properties": {
		//	              "DataSourceFieldName": {
		//	                "maxLength": 100,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              },
		//	              "DateFieldFormat": {
		//	                "maxLength": 40,
		//	                "minLength": 4,
		//	                "type": "string"
		//	              },
		//	              "IndexFieldName": {
		//	                "maxLength": 30,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              }
		//	            },
		//	            "required": [
		//	              "DataSourceFieldName",
		//	              "IndexFieldName"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "InclusionPatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "SecretArn": {
		//	          "maxLength": 1284,
		//	          "minLength": 1,
		//	          "pattern": "",
		//	          "type": "string"
		//	        },
		//	        "SharePointVersion": {
		//	          "enum": [
		//	            "SHAREPOINT_ONLINE",
		//	            "SHAREPOINT_2013",
		//	            "SHAREPOINT_2016"
		//	          ],
		//	          "type": "string"
		//	        },
		//	        "SslCertificateS3Path": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "Bucket": {
		//	              "maxLength": 63,
		//	              "minLength": 3,
		//	              "pattern": "[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]",
		//	              "type": "string"
		//	            },
		//	            "Key": {
		//	              "maxLength": 1024,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            }
		//	          },
		//	          "required": [
		//	            "Bucket",
		//	            "Key"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "Urls": {
		//	          "items": {
		//	            "maxLength": 2048,
		//	            "minLength": 1,
		//	            "pattern": "^(https?|ftp|file)://([^\\s]*)",
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "UseChangeLog": {
		//	          "type": "boolean"
		//	        },
		//	        "VpcConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "SecurityGroupIds": {
		//	              "items": {
		//	                "maxLength": 200,
		//	                "minLength": 1,
		//	                "pattern": "[\\-0-9a-zA-Z]+",
		//	                "type": "string"
		//	              },
		//	              "maxItems": 10,
		//	              "type": "array"
		//	            },
		//	            "SubnetIds": {
		//	              "items": {
		//	                "maxLength": 200,
		//	                "minLength": 1,
		//	                "pattern": "[\\-0-9a-zA-Z]+",
		//	                "type": "string"
		//	              },
		//	              "maxItems": 6,
		//	              "type": "array"
		//	            }
		//	          },
		//	          "required": [
		//	            "SubnetIds",
		//	            "SecurityGroupIds"
		//	          ],
		//	          "type": "object"
		//	        }
		//	      },
		//	      "required": [
		//	        "Urls",
		//	        "SecretArn",
		//	        "SharePointVersion"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "TemplateConfiguration": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "Template": {
		//	          "type": "object"
		//	        }
		//	      },
		//	      "required": [
		//	        "Template"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "WebCrawlerConfiguration": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "AuthenticationConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "BasicAuthentication": {
		//	              "items": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "Credentials": {
		//	                    "maxLength": 1284,
		//	                    "minLength": 1,
		//	                    "pattern": "",
		//	                    "type": "string"
		//	                  },
		//	                  "Host": {
		//	                    "maxLength": 253,
		//	                    "minLength": 1,
		//	                    "pattern": "([^\\s]*)",
		//	                    "type": "string"
		//	                  },
		//	                  "Port": {
		//	                    "maximum": 65535,
		//	                    "minimum": 1,
		//	                    "type": "integer"
		//	                  }
		//	                },
		//	                "required": [
		//	                  "Host",
		//	                  "Port",
		//	                  "Credentials"
		//	                ],
		//	                "type": "object"
		//	              },
		//	              "maxItems": 10,
		//	              "type": "array"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "CrawlDepth": {
		//	          "maximum": 10,
		//	          "minimum": 1,
		//	          "type": "integer"
		//	        },
		//	        "MaxContentSizePerPageInMegaBytes": {
		//	          "maximum": 50,
		//	          "minimum": 0,
		//	          "type": "number"
		//	        },
		//	        "MaxLinksPerPage": {
		//	          "maximum": 1000,
		//	          "minimum": 1,
		//	          "type": "integer"
		//	        },
		//	        "MaxUrlsPerMinuteCrawlRate": {
		//	          "maximum": 300,
		//	          "minimum": 1,
		//	          "type": "integer"
		//	        },
		//	        "ProxyConfiguration": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "Credentials": {
		//	              "maxLength": 1284,
		//	              "minLength": 1,
		//	              "pattern": "",
		//	              "type": "string"
		//	            },
		//	            "Host": {
		//	              "maxLength": 253,
		//	              "minLength": 1,
		//	              "pattern": "([^\\s]*)",
		//	              "type": "string"
		//	            },
		//	            "Port": {
		//	              "maximum": 65535,
		//	              "minimum": 1,
		//	              "type": "integer"
		//	            }
		//	          },
		//	          "required": [
		//	            "Host",
		//	            "Port"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "UrlExclusionPatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "UrlInclusionPatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "Urls": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "SeedUrlConfiguration": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "SeedUrls": {
		//	                  "items": {
		//	                    "maxLength": 2048,
		//	                    "minLength": 1,
		//	                    "pattern": "^(https?)://([^\\s]*)",
		//	                    "type": "string"
		//	                  },
		//	                  "maxItems": 100,
		//	                  "minItems": 0,
		//	                  "type": "array"
		//	                },
		//	                "WebCrawlerMode": {
		//	                  "enum": [
		//	                    "HOST_ONLY",
		//	                    "SUBDOMAINS",
		//	                    "EVERYTHING"
		//	                  ],
		//	                  "type": "string"
		//	                }
		//	              },
		//	              "required": [
		//	                "SeedUrls"
		//	              ],
		//	              "type": "object"
		//	            },
		//	            "SiteMapsConfiguration": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "SiteMaps": {
		//	                  "items": {
		//	                    "maxLength": 2048,
		//	                    "minLength": 1,
		//	                    "pattern": "^(https?):\\/\\/([^\\s]*)",
		//	                    "type": "string"
		//	                  },
		//	                  "maxItems": 3,
		//	                  "minItems": 0,
		//	                  "type": "array"
		//	                }
		//	              },
		//	              "required": [
		//	                "SiteMaps"
		//	              ],
		//	              "type": "object"
		//	            }
		//	          },
		//	          "type": "object"
		//	        }
		//	      },
		//	      "required": [
		//	        "Urls"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "WorkDocsConfiguration": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "CrawlComments": {
		//	          "type": "boolean"
		//	        },
		//	        "ExclusionPatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "FieldMappings": {
		//	          "items": {
		//	            "additionalProperties": false,
		//	            "properties": {
		//	              "DataSourceFieldName": {
		//	                "maxLength": 100,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              },
		//	              "DateFieldFormat": {
		//	                "maxLength": 40,
		//	                "minLength": 4,
		//	                "type": "string"
		//	              },
		//	              "IndexFieldName": {
		//	                "maxLength": 30,
		//	                "minLength": 1,
		//	                "type": "string"
		//	              }
		//	            },
		//	            "required": [
		//	              "DataSourceFieldName",
		//	              "IndexFieldName"
		//	            ],
		//	            "type": "object"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "InclusionPatterns": {
		//	          "items": {
		//	            "maxLength": 50,
		//	            "minLength": 1,
		//	            "type": "string"
		//	          },
		//	          "maxItems": 100,
		//	          "type": "array"
		//	        },
		//	        "OrganizationId": {
		//	          "maxLength": 12,
		//	          "minLength": 12,
		//	          "pattern": "d-[0-9a-fA-F]{10}",
		//	          "type": "string"
		//	        },
		//	        "UseChangeLog": {
		//	          "type": "boolean"
		//	        }
		//	      },
		//	      "required": [
		//	        "OrganizationId"
		//	      ],
		//	      "type": "object"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"data_source_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: ConfluenceConfiguration
				"confluence_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: AttachmentConfiguration
						"attachment_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: AttachmentFieldMappings
								"attachment_field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
									NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: DataSourceFieldName
											"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: DateFieldFormat
											"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: IndexFieldName
											"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
									}, /*END NESTED OBJECT*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: CrawlAttachments
								"crawl_attachments": schema.BoolAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: BlogConfiguration
						"blog_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: BlogFieldMappings
								"blog_field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
									NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: DataSourceFieldName
											"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: DateFieldFormat
											"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: IndexFieldName
											"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
									}, /*END NESTED OBJECT*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: ExclusionPatterns
						"exclusion_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: InclusionPatterns
						"inclusion_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: PageConfiguration
						"page_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: PageFieldMappings
								"page_field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
									NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: DataSourceFieldName
											"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: DateFieldFormat
											"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: IndexFieldName
											"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
									}, /*END NESTED OBJECT*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: SecretArn
						"secret_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: ServerUrl
						"server_url": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: SpaceConfiguration
						"space_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: CrawlArchivedSpaces
								"crawl_archived_spaces": schema.BoolAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: CrawlPersonalSpaces
								"crawl_personal_spaces": schema.BoolAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: ExcludeSpaces
								"exclude_spaces": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: IncludeSpaces
								"include_spaces": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SpaceFieldMappings
								"space_field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
									NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: DataSourceFieldName
											"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: DateFieldFormat
											"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: IndexFieldName
											"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
									}, /*END NESTED OBJECT*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: Version
						"version": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: VpcConfiguration
						"vpc_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: SecurityGroupIds
								"security_group_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SubnetIds
								"subnet_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: DatabaseConfiguration
				"database_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: AclConfiguration
						"acl_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: AllowedGroupsColumnName
								"allowed_groups_column_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: ColumnConfiguration
						"column_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: ChangeDetectingColumns
								"change_detecting_columns": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: DocumentDataColumnName
								"document_data_column_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: DocumentIdColumnName
								"document_id_column_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: DocumentTitleColumnName
								"document_title_column_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: FieldMappings
								"field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
									NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: DataSourceFieldName
											"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: DateFieldFormat
											"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: IndexFieldName
											"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
									}, /*END NESTED OBJECT*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: ConnectionConfiguration
						"connection_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: DatabaseHost
								"database_host": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: DatabaseName
								"database_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: DatabasePort
								"database_port": schema.Int64Attribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: SecretArn
								"secret_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: TableName
								"table_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: DatabaseEngineType
						"database_engine_type": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: SqlConfiguration
						"sql_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: QueryIdentifiersEnclosingOption
								"query_identifiers_enclosing_option": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: VpcConfiguration
						"vpc_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: SecurityGroupIds
								"security_group_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SubnetIds
								"subnet_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: GoogleDriveConfiguration
				"google_drive_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: ExcludeMimeTypes
						"exclude_mime_types": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ExcludeSharedDrives
						"exclude_shared_drives": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ExcludeUserAccounts
						"exclude_user_accounts": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ExclusionPatterns
						"exclusion_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: FieldMappings
						"field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: DataSourceFieldName
									"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: DateFieldFormat
									"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: IndexFieldName
									"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: InclusionPatterns
						"inclusion_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: SecretArn
						"secret_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: OneDriveConfiguration
				"one_drive_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: DisableLocalGroups
						"disable_local_groups": schema.BoolAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: ExclusionPatterns
						"exclusion_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: FieldMappings
						"field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: DataSourceFieldName
									"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: DateFieldFormat
									"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: IndexFieldName
									"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: InclusionPatterns
						"inclusion_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: OneDriveUsers
						"one_drive_users": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: OneDriveUserList
								"one_drive_user_list": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: OneDriveUserS3Path
								"one_drive_user_s3_path": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: Bucket
										"bucket": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: Key
										"key": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: SecretArn
						"secret_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: TenantDomain
						"tenant_domain": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: S3Configuration
				"s3_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: AccessControlListConfiguration
						"access_control_list_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: KeyPath
								"key_path": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: BucketName
						"bucket_name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: DocumentsMetadataConfiguration
						"documents_metadata_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: S3Prefix
								"s3_prefix": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: ExclusionPatterns
						"exclusion_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: InclusionPatterns
						"inclusion_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: InclusionPrefixes
						"inclusion_prefixes": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "S3 data source configuration",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: SalesforceConfiguration
				"salesforce_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: ChatterFeedConfiguration
						"chatter_feed_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: DocumentDataFieldName
								"document_data_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: DocumentTitleFieldName
								"document_title_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: FieldMappings
								"field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
									NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: DataSourceFieldName
											"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: DateFieldFormat
											"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: IndexFieldName
											"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
									}, /*END NESTED OBJECT*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: IncludeFilterTypes
								"include_filter_types": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: CrawlAttachments
						"crawl_attachments": schema.BoolAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: ExcludeAttachmentFilePatterns
						"exclude_attachment_file_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: IncludeAttachmentFilePatterns
						"include_attachment_file_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: KnowledgeArticleConfiguration
						"knowledge_article_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: CustomKnowledgeArticleTypeConfigurations
								"custom_knowledge_article_type_configurations": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
									NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: DocumentDataFieldName
											"document_data_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: DocumentTitleFieldName
											"document_title_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: FieldMappings
											"field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
												NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
													Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
														// Property: DataSourceFieldName
														"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
															Computed: true,
														}, /*END ATTRIBUTE*/
														// Property: DateFieldFormat
														"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
															Computed: true,
														}, /*END ATTRIBUTE*/
														// Property: IndexFieldName
														"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
															Computed: true,
														}, /*END ATTRIBUTE*/
													}, /*END SCHEMA*/
												}, /*END NESTED OBJECT*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: Name
											"name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
									}, /*END NESTED OBJECT*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: IncludedStates
								"included_states": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: StandardKnowledgeArticleTypeConfiguration
								"standard_knowledge_article_type_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: DocumentDataFieldName
										"document_data_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: DocumentTitleFieldName
										"document_title_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: FieldMappings
										"field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
											NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
												Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
													// Property: DataSourceFieldName
													"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
														Computed: true,
													}, /*END ATTRIBUTE*/
													// Property: DateFieldFormat
													"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
														Computed: true,
													}, /*END ATTRIBUTE*/
													// Property: IndexFieldName
													"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
														Computed: true,
													}, /*END ATTRIBUTE*/
												}, /*END SCHEMA*/
											}, /*END NESTED OBJECT*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: SecretArn
						"secret_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: ServerUrl
						"server_url": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: StandardObjectAttachmentConfiguration
						"standard_object_attachment_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: DocumentTitleFieldName
								"document_title_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: FieldMappings
								"field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
									NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: DataSourceFieldName
											"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: DateFieldFormat
											"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: IndexFieldName
											"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
									}, /*END NESTED OBJECT*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: StandardObjectConfigurations
						"standard_object_configurations": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: DocumentDataFieldName
									"document_data_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: DocumentTitleFieldName
									"document_title_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: FieldMappings
									"field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
										NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
											Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
												// Property: DataSourceFieldName
												"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: DateFieldFormat
												"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: IndexFieldName
												"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
											}, /*END SCHEMA*/
										}, /*END NESTED OBJECT*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: Name
									"name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: ServiceNowConfiguration
				"service_now_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: AuthenticationType
						"authentication_type": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: HostUrl
						"host_url": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: KnowledgeArticleConfiguration
						"knowledge_article_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: CrawlAttachments
								"crawl_attachments": schema.BoolAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: DocumentDataFieldName
								"document_data_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: DocumentTitleFieldName
								"document_title_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: ExcludeAttachmentFilePatterns
								"exclude_attachment_file_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: FieldMappings
								"field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
									NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: DataSourceFieldName
											"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: DateFieldFormat
											"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: IndexFieldName
											"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
									}, /*END NESTED OBJECT*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: FilterQuery
								"filter_query": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: IncludeAttachmentFilePatterns
								"include_attachment_file_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: SecretArn
						"secret_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: ServiceCatalogConfiguration
						"service_catalog_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: CrawlAttachments
								"crawl_attachments": schema.BoolAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: DocumentDataFieldName
								"document_data_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: DocumentTitleFieldName
								"document_title_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: ExcludeAttachmentFilePatterns
								"exclude_attachment_file_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: FieldMappings
								"field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
									NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: DataSourceFieldName
											"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: DateFieldFormat
											"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: IndexFieldName
											"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
									}, /*END NESTED OBJECT*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: IncludeAttachmentFilePatterns
								"include_attachment_file_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: ServiceNowBuildVersion
						"service_now_build_version": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: SharePointConfiguration
				"share_point_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: CrawlAttachments
						"crawl_attachments": schema.BoolAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: DisableLocalGroups
						"disable_local_groups": schema.BoolAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: DocumentTitleFieldName
						"document_title_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: ExclusionPatterns
						"exclusion_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: FieldMappings
						"field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: DataSourceFieldName
									"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: DateFieldFormat
									"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: IndexFieldName
									"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: InclusionPatterns
						"inclusion_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: SecretArn
						"secret_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: SharePointVersion
						"share_point_version": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: SslCertificateS3Path
						"ssl_certificate_s3_path": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: Bucket
								"bucket": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: Key
								"key": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: Urls
						"urls": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: UseChangeLog
						"use_change_log": schema.BoolAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: VpcConfiguration
						"vpc_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: SecurityGroupIds
								"security_group_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SubnetIds
								"subnet_ids": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "SharePoint configuration",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: TemplateConfiguration
				"template_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: Template
						"template": schema.StringAttribute{ /*START ATTRIBUTE*/
							CustomType: jsontypes.NormalizedType{},
							Computed:   true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: WebCrawlerConfiguration
				"web_crawler_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: AuthenticationConfiguration
						"authentication_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: BasicAuthentication
								"basic_authentication": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
									NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: Credentials
											"credentials": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: Host
											"host": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: Port
											"port": schema.Int64Attribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
									}, /*END NESTED OBJECT*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: CrawlDepth
						"crawl_depth": schema.Int64Attribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: MaxContentSizePerPageInMegaBytes
						"max_content_size_per_page_in_mega_bytes": schema.Float64Attribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: MaxLinksPerPage
						"max_links_per_page": schema.Int64Attribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: MaxUrlsPerMinuteCrawlRate
						"max_urls_per_minute_crawl_rate": schema.Int64Attribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: ProxyConfiguration
						"proxy_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: Credentials
								"credentials": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: Host
								"host": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: Port
								"port": schema.Int64Attribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: UrlExclusionPatterns
						"url_exclusion_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: UrlInclusionPatterns
						"url_inclusion_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Urls
						"urls": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: SeedUrlConfiguration
								"seed_url_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: SeedUrls
										"seed_urls": schema.ListAttribute{ /*START ATTRIBUTE*/
											ElementType: types.StringType,
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: WebCrawlerMode
										"web_crawler_mode": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: SiteMapsConfiguration
								"site_maps_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: SiteMaps
										"site_maps": schema.ListAttribute{ /*START ATTRIBUTE*/
											ElementType: types.StringType,
											Computed:    true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: WorkDocsConfiguration
				"work_docs_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: CrawlComments
						"crawl_comments": schema.BoolAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: ExclusionPatterns
						"exclusion_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: FieldMappings
						"field_mappings": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: DataSourceFieldName
									"data_source_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: DateFieldFormat
									"date_field_format": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
									// Property: IndexFieldName
									"index_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: InclusionPatterns
						"inclusion_patterns": schema.ListAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: OrganizationId
						"organization_id": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: UseChangeLog
						"use_change_log": schema.BoolAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: Description
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Description of data source",
		//	  "maxLength": 1000,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Description of data source",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Id
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "ID of data source",
		//	  "maxLength": 100,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"data_source_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "ID of data source",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: IndexId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "ID of Index",
		//	  "maxLength": 36,
		//	  "minLength": 36,
		//	  "type": "string"
		//	}
		"index_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "ID of Index",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: LanguageCode
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The code for a language.",
		//	  "maxLength": 10,
		//	  "minLength": 2,
		//	  "pattern": "[a-zA-Z-]*",
		//	  "type": "string"
		//	}
		"language_code": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The code for a language.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Name
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Name of data source",
		//	  "maxLength": 1000,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Name of data source",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: RoleArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Role ARN",
		//	  "maxLength": 1284,
		//	  "minLength": 1,
		//	  "pattern": "",
		//	  "type": "string"
		//	}
		"role_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Role ARN",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Schedule
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Schedule",
		//	  "maxLength": 1000,
		//	  "type": "string"
		//	}
		"schedule": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Schedule",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Tags for labeling the data source",
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "A label for tagging Kendra resources",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "A string used to identify this tag",
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "A string containing the value for the tag",
		//	        "maxLength": 256,
		//	        "minLength": 0,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "maxItems": 200,
		//	  "type": "array"
		//	}
		"tags": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "A string used to identify this tag",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "A string containing the value for the tag",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "Tags for labeling the data source",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Type
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Data source type",
		//	  "enum": [
		//	    "S3",
		//	    "SHAREPOINT",
		//	    "SALESFORCE",
		//	    "ONEDRIVE",
		//	    "SERVICENOW",
		//	    "DATABASE",
		//	    "CUSTOM",
		//	    "CONFLUENCE",
		//	    "GOOGLEDRIVE",
		//	    "WEBCRAWLER",
		//	    "WORKDOCS",
		//	    "TEMPLATE"
		//	  ],
		//	  "type": "string"
		//	}
		"type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Data source type",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::Kendra::DataSource",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::Kendra::DataSource").WithTerraformTypeName("awscc_kendra_data_source")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"access_control_list_configuration":             "AccessControlListConfiguration",
		"acl_configuration":                             "AclConfiguration",
		"allowed_groups_column_name":                    "AllowedGroupsColumnName",
		"arn":                                           "Arn",
		"attachment_configuration":                      "AttachmentConfiguration",
		"attachment_field_mappings":                     "AttachmentFieldMappings",
		"authentication_configuration":                  "AuthenticationConfiguration",
		"authentication_type":                           "AuthenticationType",
		"basic_authentication":                          "BasicAuthentication",
		"blog_configuration":                            "BlogConfiguration",
		"blog_field_mappings":                           "BlogFieldMappings",
		"bucket":                                        "Bucket",
		"bucket_name":                                   "BucketName",
		"change_detecting_columns":                      "ChangeDetectingColumns",
		"chatter_feed_configuration":                    "ChatterFeedConfiguration",
		"column_configuration":                          "ColumnConfiguration",
		"condition":                                     "Condition",
		"condition_document_attribute_key":              "ConditionDocumentAttributeKey",
		"condition_on_value":                            "ConditionOnValue",
		"confluence_configuration":                      "ConfluenceConfiguration",
		"connection_configuration":                      "ConnectionConfiguration",
		"crawl_archived_spaces":                         "CrawlArchivedSpaces",
		"crawl_attachments":                             "CrawlAttachments",
		"crawl_comments":                                "CrawlComments",
		"crawl_depth":                                   "CrawlDepth",
		"crawl_personal_spaces":                         "CrawlPersonalSpaces",
		"credentials":                                   "Credentials",
		"custom_document_enrichment_configuration":      "CustomDocumentEnrichmentConfiguration",
		"custom_knowledge_article_type_configurations":  "CustomKnowledgeArticleTypeConfigurations",
		"data_source_configuration":                     "DataSourceConfiguration",
		"data_source_field_name":                        "DataSourceFieldName",
		"data_source_id":                                "Id",
		"database_configuration":                        "DatabaseConfiguration",
		"database_engine_type":                          "DatabaseEngineType",
		"database_host":                                 "DatabaseHost",
		"database_name":                                 "DatabaseName",
		"database_port":                                 "DatabasePort",
		"date_field_format":                             "DateFieldFormat",
		"date_value":                                    "DateValue",
		"description":                                   "Description",
		"disable_local_groups":                          "DisableLocalGroups",
		"document_content_deletion":                     "DocumentContentDeletion",
		"document_data_column_name":                     "DocumentDataColumnName",
		"document_data_field_name":                      "DocumentDataFieldName",
		"document_id_column_name":                       "DocumentIdColumnName",
		"document_title_column_name":                    "DocumentTitleColumnName",
		"document_title_field_name":                     "DocumentTitleFieldName",
		"documents_metadata_configuration":              "DocumentsMetadataConfiguration",
		"exclude_attachment_file_patterns":              "ExcludeAttachmentFilePatterns",
		"exclude_mime_types":                            "ExcludeMimeTypes",
		"exclude_shared_drives":                         "ExcludeSharedDrives",
		"exclude_spaces":                                "ExcludeSpaces",
		"exclude_user_accounts":                         "ExcludeUserAccounts",
		"exclusion_patterns":                            "ExclusionPatterns",
		"field_mappings":                                "FieldMappings",
		"filter_query":                                  "FilterQuery",
		"google_drive_configuration":                    "GoogleDriveConfiguration",
		"host":                                          "Host",
		"host_url":                                      "HostUrl",
		"include_attachment_file_patterns":              "IncludeAttachmentFilePatterns",
		"include_filter_types":                          "IncludeFilterTypes",
		"include_spaces":                                "IncludeSpaces",
		"included_states":                               "IncludedStates",
		"inclusion_patterns":                            "InclusionPatterns",
		"inclusion_prefixes":                            "InclusionPrefixes",
		"index_field_name":                              "IndexFieldName",
		"index_id":                                      "IndexId",
		"inline_configurations":                         "InlineConfigurations",
		"invocation_condition":                          "InvocationCondition",
		"key":                                           "Key",
		"key_path":                                      "KeyPath",
		"knowledge_article_configuration":               "KnowledgeArticleConfiguration",
		"lambda_arn":                                    "LambdaArn",
		"language_code":                                 "LanguageCode",
		"long_value":                                    "LongValue",
		"max_content_size_per_page_in_mega_bytes":       "MaxContentSizePerPageInMegaBytes",
		"max_links_per_page":                            "MaxLinksPerPage",
		"max_urls_per_minute_crawl_rate":                "MaxUrlsPerMinuteCrawlRate",
		"name":                                          "Name",
		"one_drive_configuration":                       "OneDriveConfiguration",
		"one_drive_user_list":                           "OneDriveUserList",
		"one_drive_user_s3_path":                        "OneDriveUserS3Path",
		"one_drive_users":                               "OneDriveUsers",
		"operator":                                      "Operator",
		"organization_id":                               "OrganizationId",
		"page_configuration":                            "PageConfiguration",
		"page_field_mappings":                           "PageFieldMappings",
		"port":                                          "Port",
		"post_extraction_hook_configuration":            "PostExtractionHookConfiguration",
		"pre_extraction_hook_configuration":             "PreExtractionHookConfiguration",
		"proxy_configuration":                           "ProxyConfiguration",
		"query_identifiers_enclosing_option":            "QueryIdentifiersEnclosingOption",
		"role_arn":                                      "RoleArn",
		"s3_bucket":                                     "S3Bucket",
		"s3_configuration":                              "S3Configuration",
		"s3_prefix":                                     "S3Prefix",
		"salesforce_configuration":                      "SalesforceConfiguration",
		"schedule":                                      "Schedule",
		"secret_arn":                                    "SecretArn",
		"security_group_ids":                            "SecurityGroupIds",
		"seed_url_configuration":                        "SeedUrlConfiguration",
		"seed_urls":                                     "SeedUrls",
		"server_url":                                    "ServerUrl",
		"service_catalog_configuration":                 "ServiceCatalogConfiguration",
		"service_now_build_version":                     "ServiceNowBuildVersion",
		"service_now_configuration":                     "ServiceNowConfiguration",
		"share_point_configuration":                     "SharePointConfiguration",
		"share_point_version":                           "SharePointVersion",
		"site_maps":                                     "SiteMaps",
		"site_maps_configuration":                       "SiteMapsConfiguration",
		"space_configuration":                           "SpaceConfiguration",
		"space_field_mappings":                          "SpaceFieldMappings",
		"sql_configuration":                             "SqlConfiguration",
		"ssl_certificate_s3_path":                       "SslCertificateS3Path",
		"standard_knowledge_article_type_configuration": "StandardKnowledgeArticleTypeConfiguration",
		"standard_object_attachment_configuration":      "StandardObjectAttachmentConfiguration",
		"standard_object_configurations":                "StandardObjectConfigurations",
		"string_list_value":                             "StringListValue",
		"string_value":                                  "StringValue",
		"subnet_ids":                                    "SubnetIds",
		"table_name":                                    "TableName",
		"tags":                                          "Tags",
		"target":                                        "Target",
		"target_document_attribute_key":                 "TargetDocumentAttributeKey",
		"target_document_attribute_value":               "TargetDocumentAttributeValue",
		"target_document_attribute_value_deletion":      "TargetDocumentAttributeValueDeletion",
		"template":                                      "Template",
		"template_configuration":                        "TemplateConfiguration",
		"tenant_domain":                                 "TenantDomain",
		"type":                                          "Type",
		"url_exclusion_patterns":                        "UrlExclusionPatterns",
		"url_inclusion_patterns":                        "UrlInclusionPatterns",
		"urls":                                          "Urls",
		"use_change_log":                                "UseChangeLog",
		"value":                                         "Value",
		"version":                                       "Version",
		"vpc_configuration":                             "VpcConfiguration",
		"web_crawler_configuration":                     "WebCrawlerConfiguration",
		"web_crawler_mode":                              "WebCrawlerMode",
		"work_docs_configuration":                       "WorkDocsConfiguration",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
