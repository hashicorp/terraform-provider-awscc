// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package inspectorv2

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework-timetypes/timetypes"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_inspectorv2_code_security_integration", codeSecurityIntegrationDataSource)
}

// codeSecurityIntegrationDataSource returns the Terraform awscc_inspectorv2_code_security_integration data source.
// This Terraform data source corresponds to the CloudFormation AWS::InspectorV2::CodeSecurityIntegration resource.
func codeSecurityIntegrationDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: Arn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Code Security Integration ARN",
		//	  "pattern": "^arn:(aws[a-zA-Z-]*)?:inspector2:[a-z]{2}(-gov)?-[a-z]+-\\d{1}:\\d{12}:codesecurity-integration/[a-f0-9-]{36}$",
		//	  "type": "string"
		//	}
		"arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Code Security Integration ARN",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: AuthorizationUrl
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Authorization URL for OAuth flow",
		//	  "pattern": "",
		//	  "type": "string"
		//	}
		"authorization_url": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Authorization URL for OAuth flow",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CreateIntegrationDetails
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Create Integration Details",
		//	  "properties": {
		//	    "gitlabSelfManaged": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "accessToken": {
		//	          "type": "string"
		//	        },
		//	        "instanceUrl": {
		//	          "pattern": "",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "instanceUrl",
		//	        "accessToken"
		//	      ],
		//	      "type": "object"
		//	    }
		//	  },
		//	  "required": [
		//	    "gitlabSelfManaged"
		//	  ],
		//	  "type": "object"
		//	}
		"create_integration_details": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: gitlabSelfManaged
				"gitlab_self_managed": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: accessToken
						"access_token": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: instanceUrl
						"instance_url": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Create Integration Details",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CreatedAt
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Creation timestamp",
		//	  "format": "date-time",
		//	  "type": "string"
		//	}
		"created_at": schema.StringAttribute{ /*START ATTRIBUTE*/
			CustomType:  timetypes.RFC3339Type{},
			Description: "Creation timestamp",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: LastUpdatedAt
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Last update timestamp",
		//	  "format": "date-time",
		//	  "type": "string"
		//	}
		"last_updated_at": schema.StringAttribute{ /*START ATTRIBUTE*/
			CustomType:  timetypes.RFC3339Type{},
			Description: "Last update timestamp",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Name
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Code Security Integration name",
		//	  "maxLength": 60,
		//	  "minLength": 1,
		//	  "pattern": "^[a-zA-Z0-9-_$:.]*$",
		//	  "type": "string"
		//	}
		"name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Code Security Integration name",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Status
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Integration Status",
		//	  "enum": [
		//	    "PENDING",
		//	    "IN_PROGRESS",
		//	    "ACTIVE",
		//	    "INACTIVE",
		//	    "DISABLING"
		//	  ],
		//	  "type": "string"
		//	}
		"status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Integration Status",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: StatusReason
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Reason for the current status",
		//	  "type": "string"
		//	}
		"status_reason": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Reason for the current status",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "patternProperties": {
		//	    "": {
		//	      "pattern": "^.{1,255}$",
		//	      "type": "string"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"tags":              // Pattern: ""
		schema.MapAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Type
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Integration Type",
		//	  "enum": [
		//	    "GITLAB_SELF_MANAGED",
		//	    "GITHUB"
		//	  ],
		//	  "type": "string"
		//	}
		"type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Integration Type",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: UpdateIntegrationDetails
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Update Integration Details",
		//	  "oneOf": [
		//	    {
		//	      "required": [
		//	        "gitlabSelfManaged"
		//	      ]
		//	    },
		//	    {
		//	      "required": [
		//	        "github"
		//	      ]
		//	    }
		//	  ],
		//	  "properties": {
		//	    "github": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "code": {
		//	          "maxLength": 1024,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "installationId": {
		//	          "maxLength": 1024,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "code",
		//	        "installationId"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "gitlabSelfManaged": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "authCode": {
		//	          "maxLength": 1024,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "authCode"
		//	      ],
		//	      "type": "object"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"update_integration_details": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: github
				"github": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: code
						"code": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: installationId
						"installation_id": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: gitlabSelfManaged
				"gitlab_self_managed": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: authCode
						"auth_code": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Update Integration Details",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::InspectorV2::CodeSecurityIntegration",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::InspectorV2::CodeSecurityIntegration").WithTerraformTypeName("awscc_inspectorv2_code_security_integration")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"access_token":               "accessToken",
		"arn":                        "Arn",
		"auth_code":                  "authCode",
		"authorization_url":          "AuthorizationUrl",
		"code":                       "code",
		"create_integration_details": "CreateIntegrationDetails",
		"created_at":                 "CreatedAt",
		"github":                     "github",
		"gitlab_self_managed":        "gitlabSelfManaged",
		"installation_id":            "installationId",
		"instance_url":               "instanceUrl",
		"last_updated_at":            "LastUpdatedAt",
		"name":                       "Name",
		"status":                     "Status",
		"status_reason":              "StatusReason",
		"tags":                       "Tags",
		"type":                       "Type",
		"update_integration_details": "UpdateIntegrationDetails",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
