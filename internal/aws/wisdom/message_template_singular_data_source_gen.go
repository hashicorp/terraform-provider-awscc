// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package wisdom

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_wisdom_message_template", messageTemplateDataSource)
}

// messageTemplateDataSource returns the Terraform awscc_wisdom_message_template data source.
// This Terraform data source corresponds to the CloudFormation AWS::Wisdom::MessageTemplate resource.
func messageTemplateDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: ChannelSubtype
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The channel subtype this message template applies to.",
		//	  "enum": [
		//	    "EMAIL",
		//	    "SMS"
		//	  ],
		//	  "type": "string"
		//	}
		"channel_subtype": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The channel subtype this message template applies to.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Content
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "The content of the message template.",
		//	  "oneOf": [
		//	    {
		//	      "required": [
		//	        "EmailMessageTemplateContent"
		//	      ]
		//	    },
		//	    {
		//	      "required": [
		//	        "SmsMessageTemplateContent"
		//	      ]
		//	    }
		//	  ],
		//	  "properties": {
		//	    "EmailMessageTemplateContent": {
		//	      "additionalProperties": false,
		//	      "description": "The content of message template that applies to email channel subtype.",
		//	      "properties": {
		//	        "Body": {
		//	          "additionalProperties": false,
		//	          "description": "The body to use in email messages.",
		//	          "properties": {
		//	            "Html": {
		//	              "additionalProperties": false,
		//	              "description": "The message body, in HTML format, to use in email messages that are based on the message template. We recommend using HTML format for email clients that render HTML content. You can include links, formatted text, and more in an HTML message.",
		//	              "properties": {
		//	                "Content": {
		//	                  "minLength": 1,
		//	                  "type": "string"
		//	                }
		//	              },
		//	              "type": "object"
		//	            },
		//	            "PlainText": {
		//	              "additionalProperties": false,
		//	              "description": "The message body, in plain text format, to use in email messages that are based on the message template. We recommend using plain text format for email clients that don't render HTML content and clients that are connected to high-latency networks, such as mobile devices.",
		//	              "properties": {
		//	                "Content": {
		//	                  "minLength": 1,
		//	                  "type": "string"
		//	                }
		//	              },
		//	              "type": "object"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "Headers": {
		//	          "description": "The email headers to include in email messages.",
		//	          "insertionOrder": true,
		//	          "items": {
		//	            "additionalProperties": false,
		//	            "description": "The email header to include in email messages.",
		//	            "properties": {
		//	              "Name": {
		//	                "description": "The name of the email header.",
		//	                "maxLength": 126,
		//	                "minLength": 1,
		//	                "pattern": "^[!-9;-@A-~]+$",
		//	                "type": "string"
		//	              },
		//	              "Value": {
		//	                "description": "The value of the email header.",
		//	                "maxLength": 870,
		//	                "minLength": 1,
		//	                "pattern": "[ -~]*",
		//	                "type": "string"
		//	              }
		//	            },
		//	            "type": "object"
		//	          },
		//	          "maxItems": 15,
		//	          "minItems": 0,
		//	          "type": "array",
		//	          "uniqueItems": true
		//	        },
		//	        "Subject": {
		//	          "description": "The subject line, or title, to use in email messages.",
		//	          "minLength": 1,
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "Subject",
		//	        "Body",
		//	        "Headers"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "SmsMessageTemplateContent": {
		//	      "additionalProperties": false,
		//	      "description": "The content of message template that applies to SMS channel subtype.",
		//	      "properties": {
		//	        "Body": {
		//	          "additionalProperties": false,
		//	          "description": "The body to use in SMS messages.",
		//	          "properties": {
		//	            "PlainText": {
		//	              "additionalProperties": false,
		//	              "description": "The container of message template body.",
		//	              "properties": {
		//	                "Content": {
		//	                  "minLength": 1,
		//	                  "type": "string"
		//	                }
		//	              },
		//	              "type": "object"
		//	            }
		//	          },
		//	          "type": "object"
		//	        }
		//	      },
		//	      "required": [
		//	        "Body"
		//	      ],
		//	      "type": "object"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"content": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: EmailMessageTemplateContent
				"email_message_template_content": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: Body
						"body": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: Html
								"html": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: Content
										"content": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Description: "The message body, in HTML format, to use in email messages that are based on the message template. We recommend using HTML format for email clients that render HTML content. You can include links, formatted text, and more in an HTML message.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: PlainText
								"plain_text": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: Content
										"content": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Description: "The message body, in plain text format, to use in email messages that are based on the message template. We recommend using plain text format for email clients that don't render HTML content and clients that are connected to high-latency networks, such as mobile devices.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Description: "The body to use in email messages.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Headers
						"headers": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: Name
									"name": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "The name of the email header.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
									// Property: Value
									"value": schema.StringAttribute{ /*START ATTRIBUTE*/
										Description: "The value of the email header.",
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Description: "The email headers to include in email messages.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Subject
						"subject": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The subject line, or title, to use in email messages.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "The content of message template that applies to email channel subtype.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: SmsMessageTemplateContent
				"sms_message_template_content": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: Body
						"body": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: PlainText
								"plain_text": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: Content
										"content": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Description: "The container of message template body.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Description: "The body to use in SMS messages.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "The content of message template that applies to SMS channel subtype.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "The content of the message template.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DefaultAttributes
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "An object that specifies the default values to use for variables in the message template. This object contains different categories of key-value pairs. Each key defines a variable or placeholder in the message template. The corresponding value defines the default value for that variable.",
		//	  "properties": {
		//	    "AgentAttributes": {
		//	      "additionalProperties": false,
		//	      "description": "The agent attributes that are used with the message template.",
		//	      "properties": {
		//	        "FirstName": {
		//	          "description": "The agent?s first name as entered in their Amazon Connect user account.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "LastName": {
		//	          "description": "The agent?s last name as entered in their Amazon Connect user account.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "CustomAttributes": {
		//	      "additionalProperties": false,
		//	      "description": "The custom attributes that are used with the message template.",
		//	      "patternProperties": {
		//	        "": {
		//	          "description": "Value of a custom attribute.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "CustomerProfileAttributes": {
		//	      "additionalProperties": false,
		//	      "description": "The customer profile attributes that are used with the message template.",
		//	      "properties": {
		//	        "AccountNumber": {
		//	          "description": "A unique account number that you have given to the customer.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "AdditionalInformation": {
		//	          "description": "Any additional information relevant to the customer's profile.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "Address1": {
		//	          "description": "The first line of a customer address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "Address2": {
		//	          "description": "The second line of a customer address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "Address3": {
		//	          "description": "The third line of a customer address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "Address4": {
		//	          "description": "The fourth line of a customer address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "BillingAddress1": {
		//	          "description": "The first line of a customer?s billing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "BillingAddress2": {
		//	          "description": "The second line of a customer?s billing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "BillingAddress3": {
		//	          "description": "The third line of a customer?s billing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "BillingAddress4": {
		//	          "description": "The fourth line of a customer?s billing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "BillingCity": {
		//	          "description": "The city of a customer?s billing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "BillingCountry": {
		//	          "description": "The country of a customer?s billing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "BillingCounty": {
		//	          "description": "The county of a customer?s billing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "BillingPostalCode": {
		//	          "description": "The postal code of a customer?s billing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "BillingProvince": {
		//	          "description": "The province of a customer?s billing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "BillingState": {
		//	          "description": "The state of a customer?s billing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "BirthDate": {
		//	          "description": "The customer's birth date.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "BusinessEmailAddress": {
		//	          "description": "The customer's business email address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "BusinessName": {
		//	          "description": "The name of the customer's business.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "BusinessPhoneNumber": {
		//	          "description": "The customer's business phone number.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "City": {
		//	          "description": "The city in which a customer lives.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "Country": {
		//	          "description": "The country in which a customer lives.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "County": {
		//	          "description": "The county in which a customer lives.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "Custom": {
		//	          "additionalProperties": false,
		//	          "description": "The custom attributes that are used with the message template.",
		//	          "patternProperties": {
		//	            "": {
		//	              "description": "Value of a custom attribute.",
		//	              "maxLength": 32767,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "EmailAddress": {
		//	          "description": "The customer's email address, which has not been specified as a personal or business address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "FirstName": {
		//	          "description": "The customer's first name.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "Gender": {
		//	          "description": "The customer's gender.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "HomePhoneNumber": {
		//	          "description": "The customer's home phone number.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "LastName": {
		//	          "description": "The customer's last name.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "MailingAddress1": {
		//	          "description": "The first line of a customer?s mailing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "MailingAddress2": {
		//	          "description": "The second line of a customer?s mailing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "MailingAddress3": {
		//	          "description": "The third line of a customer?s mailing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "MailingAddress4": {
		//	          "description": "The fourth line of a customer?s mailing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "MailingCity": {
		//	          "description": "The city of a customer?s mailing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "MailingCountry": {
		//	          "description": "The country of a customer?s mailing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "MailingCounty": {
		//	          "description": "The county of a customer?s mailing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "MailingPostalCode": {
		//	          "description": "The postal code of a customer?s mailing address",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "MailingProvince": {
		//	          "description": "The province of a customer?s mailing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "MailingState": {
		//	          "description": "The state of a customer?s mailing address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "MiddleName": {
		//	          "description": "The customer's middle name.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "MobilePhoneNumber": {
		//	          "description": "The customer's mobile phone number.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "PartyType": {
		//	          "description": "The customer's party type.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "PhoneNumber": {
		//	          "description": "The customer's phone number, which has not been specified as a mobile, home, or business number.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "PostalCode": {
		//	          "description": "The postal code of a customer address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "ProfileARN": {
		//	          "description": "The ARN of a customer profile.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "ProfileId": {
		//	          "description": "The unique identifier of a customer profile.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "Province": {
		//	          "description": "The province in which a customer lives.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "ShippingAddress1": {
		//	          "description": "The first line of a customer?s shipping address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "ShippingAddress2": {
		//	          "description": "The second line of a customer?s shipping address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "ShippingAddress3": {
		//	          "description": "The third line of a customer?s shipping address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "ShippingAddress4": {
		//	          "description": "The fourth line of a customer?s shipping address",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "ShippingCity": {
		//	          "description": "The city of a customer?s shipping address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "ShippingCountry": {
		//	          "description": "The country of a customer?s shipping address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "ShippingCounty": {
		//	          "description": "The county of a customer?s shipping address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "ShippingPostalCode": {
		//	          "description": "The postal code of a customer?s shipping address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "ShippingProvince": {
		//	          "description": "The province of a customer?s shipping address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "ShippingState": {
		//	          "description": "The state of a customer?s shipping address.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "State": {
		//	          "description": "The state in which a customer lives.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "SystemAttributes": {
		//	      "additionalProperties": false,
		//	      "description": "The system attributes that are used with the message template.",
		//	      "properties": {
		//	        "CustomerEndpoint": {
		//	          "additionalProperties": false,
		//	          "description": "The CustomerEndpoint attribute.",
		//	          "properties": {
		//	            "Address": {
		//	              "description": "The customer's phone number if used with customerEndpoint, or the number the customer dialed to call your contact center if used with systemEndpoint.",
		//	              "maxLength": 32767,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "Name": {
		//	          "description": "The name of the task.",
		//	          "maxLength": 32767,
		//	          "minLength": 1,
		//	          "type": "string"
		//	        },
		//	        "SystemEndpoint": {
		//	          "additionalProperties": false,
		//	          "description": "The SystemEndpoint attribute.",
		//	          "properties": {
		//	            "Address": {
		//	              "description": "The customer's phone number if used with customerEndpoint, or the number the customer dialed to call your contact center if used with systemEndpoint.",
		//	              "maxLength": 32767,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            }
		//	          },
		//	          "type": "object"
		//	        }
		//	      },
		//	      "type": "object"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"default_attributes": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: AgentAttributes
				"agent_attributes": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: FirstName
						"first_name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The agent?s first name as entered in their Amazon Connect user account.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: LastName
						"last_name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The agent?s last name as entered in their Amazon Connect user account.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "The agent attributes that are used with the message template.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: CustomAttributes
				"custom_attributes": // Pattern: ""
				schema.MapAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Description: "The custom attributes that are used with the message template.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: CustomerProfileAttributes
				"customer_profile_attributes": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: AccountNumber
						"account_number": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "A unique account number that you have given to the customer.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: AdditionalInformation
						"additional_information": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "Any additional information relevant to the customer's profile.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Address1
						"address_1": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The first line of a customer address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Address2
						"address_2": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The second line of a customer address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Address3
						"address_3": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The third line of a customer address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Address4
						"address_4": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The fourth line of a customer address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: BillingAddress1
						"billing_address_1": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The first line of a customer?s billing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: BillingAddress2
						"billing_address_2": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The second line of a customer?s billing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: BillingAddress3
						"billing_address_3": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The third line of a customer?s billing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: BillingAddress4
						"billing_address_4": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The fourth line of a customer?s billing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: BillingCity
						"billing_city": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The city of a customer?s billing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: BillingCountry
						"billing_country": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The country of a customer?s billing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: BillingCounty
						"billing_county": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The county of a customer?s billing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: BillingPostalCode
						"billing_postal_code": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The postal code of a customer?s billing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: BillingProvince
						"billing_province": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The province of a customer?s billing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: BillingState
						"billing_state": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The state of a customer?s billing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: BirthDate
						"birth_date": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The customer's birth date.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: BusinessEmailAddress
						"business_email_address": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The customer's business email address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: BusinessName
						"business_name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The name of the customer's business.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: BusinessPhoneNumber
						"business_phone_number": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The customer's business phone number.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: City
						"city": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The city in which a customer lives.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Country
						"country": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The country in which a customer lives.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: County
						"county": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The county in which a customer lives.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Custom
						"custom":            // Pattern: ""
						schema.MapAttribute{ /*START ATTRIBUTE*/
							ElementType: types.StringType,
							Description: "The custom attributes that are used with the message template.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: EmailAddress
						"email_address": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The customer's email address, which has not been specified as a personal or business address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: FirstName
						"first_name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The customer's first name.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Gender
						"gender": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The customer's gender.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: HomePhoneNumber
						"home_phone_number": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The customer's home phone number.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: LastName
						"last_name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The customer's last name.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: MailingAddress1
						"mailing_address_1": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The first line of a customer?s mailing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: MailingAddress2
						"mailing_address_2": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The second line of a customer?s mailing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: MailingAddress3
						"mailing_address_3": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The third line of a customer?s mailing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: MailingAddress4
						"mailing_address_4": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The fourth line of a customer?s mailing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: MailingCity
						"mailing_city": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The city of a customer?s mailing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: MailingCountry
						"mailing_country": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The country of a customer?s mailing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: MailingCounty
						"mailing_county": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The county of a customer?s mailing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: MailingPostalCode
						"mailing_postal_code": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The postal code of a customer?s mailing address",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: MailingProvince
						"mailing_province": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The province of a customer?s mailing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: MailingState
						"mailing_state": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The state of a customer?s mailing address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: MiddleName
						"middle_name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The customer's middle name.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: MobilePhoneNumber
						"mobile_phone_number": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The customer's mobile phone number.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: PartyType
						"party_type": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The customer's party type.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: PhoneNumber
						"phone_number": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The customer's phone number, which has not been specified as a mobile, home, or business number.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: PostalCode
						"postal_code": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The postal code of a customer address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ProfileARN
						"profile_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The ARN of a customer profile.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ProfileId
						"profile_id": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The unique identifier of a customer profile.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Province
						"province": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The province in which a customer lives.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ShippingAddress1
						"shipping_address_1": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The first line of a customer?s shipping address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ShippingAddress2
						"shipping_address_2": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The second line of a customer?s shipping address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ShippingAddress3
						"shipping_address_3": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The third line of a customer?s shipping address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ShippingAddress4
						"shipping_address_4": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The fourth line of a customer?s shipping address",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ShippingCity
						"shipping_city": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The city of a customer?s shipping address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ShippingCountry
						"shipping_country": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The country of a customer?s shipping address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ShippingCounty
						"shipping_county": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The county of a customer?s shipping address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ShippingPostalCode
						"shipping_postal_code": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The postal code of a customer?s shipping address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ShippingProvince
						"shipping_province": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The province of a customer?s shipping address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: ShippingState
						"shipping_state": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The state of a customer?s shipping address.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: State
						"state": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The state in which a customer lives.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "The customer profile attributes that are used with the message template.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: SystemAttributes
				"system_attributes": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: CustomerEndpoint
						"customer_endpoint": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: Address
								"address": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The customer's phone number if used with customerEndpoint, or the number the customer dialed to call your contact center if used with systemEndpoint.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Description: "The CustomerEndpoint attribute.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Name
						"name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The name of the task.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: SystemEndpoint
						"system_endpoint": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: Address
								"address": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The customer's phone number if used with customerEndpoint, or the number the customer dialed to call your contact center if used with systemEndpoint.",
									Computed:    true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Description: "The SystemEndpoint attribute.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "The system attributes that are used with the message template.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "An object that specifies the default values to use for variables in the message template. This object contains different categories of key-value pairs. Each key defines a variable or placeholder in the message template. The corresponding value defines the default value for that variable.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Description
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The description of the message template.",
		//	  "maxLength": 255,
		//	  "minLength": 1,
		//	  "pattern": "^[a-zA-Z0-9\\\\s_.,-]+",
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The description of the message template.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: GroupingConfiguration
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "The configuration information of the user groups that the message template is accessible to.",
		//	  "properties": {
		//	    "Criteria": {
		//	      "description": "The criteria used for grouping Amazon Q in Connect users.",
		//	      "maxLength": 100,
		//	      "minLength": 1,
		//	      "type": "string"
		//	    },
		//	    "Values": {
		//	      "description": "The list of values that define different groups of Amazon Q in Connect users.",
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "description": "The value that define the group of Amazon Q in Connect users.",
		//	        "maxLength": 2048,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      },
		//	      "type": "array",
		//	      "uniqueItems": true
		//	    }
		//	  },
		//	  "required": [
		//	    "Criteria",
		//	    "Values"
		//	  ],
		//	  "type": "object"
		//	}
		"grouping_configuration": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: Criteria
				"criteria": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "The criteria used for grouping Amazon Q in Connect users.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Values
				"values": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Description: "The list of values that define different groups of Amazon Q in Connect users.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "The configuration information of the user groups that the message template is accessible to.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: KnowledgeBaseArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Amazon Resource Name (ARN) of the knowledge base to which the message template belongs.",
		//	  "pattern": "^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$",
		//	  "type": "string"
		//	}
		"knowledge_base_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Amazon Resource Name (ARN) of the knowledge base to which the message template belongs.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Language
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The language code value for the language in which the message template is written. The supported language codes include de_DE, en_US, es_ES, fr_FR, id_ID, it_IT, ja_JP, ko_KR, pt_BR, zh_CN, zh_TW",
		//	  "maxLength": 5,
		//	  "minLength": 2,
		//	  "type": "string"
		//	}
		"language": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The language code value for the language in which the message template is written. The supported language codes include de_DE, en_US, es_ES, fr_FR, id_ID, it_IT, ja_JP, ko_KR, pt_BR, zh_CN, zh_TW",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: MessageTemplateArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Amazon Resource Name (ARN) of the message template.",
		//	  "pattern": "^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})?$",
		//	  "type": "string"
		//	}
		"message_template_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Amazon Resource Name (ARN) of the message template.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: MessageTemplateContentSha256
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The content SHA256 of the message template.",
		//	  "maxLength": 64,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"message_template_content_sha_256": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The content SHA256 of the message template.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: MessageTemplateId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The unique identifier of the message template.",
		//	  "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
		//	  "type": "string"
		//	}
		"message_template_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The unique identifier of the message template.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Name
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The name of the message template.",
		//	  "maxLength": 255,
		//	  "minLength": 1,
		//	  "pattern": "^[a-zA-Z0-9\\\\s_.,-]+",
		//	  "type": "string"
		//	}
		"name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The name of the message template.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The tags used to organize, track, or control access for this resource. For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "A key-value pair to associate with a resource.",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -",
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "pattern": "",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -",
		//	        "maxLength": 256,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "The tags used to organize, track, or control access for this resource. For example, { \"tags\": {\"key1\":\"value1\", \"key2\":\"value2\"} }.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::Wisdom::MessageTemplate",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::Wisdom::MessageTemplate").WithTerraformTypeName("awscc_wisdom_message_template")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"account_number":                   "AccountNumber",
		"additional_information":           "AdditionalInformation",
		"address":                          "Address",
		"address_1":                        "Address1",
		"address_2":                        "Address2",
		"address_3":                        "Address3",
		"address_4":                        "Address4",
		"agent_attributes":                 "AgentAttributes",
		"billing_address_1":                "BillingAddress1",
		"billing_address_2":                "BillingAddress2",
		"billing_address_3":                "BillingAddress3",
		"billing_address_4":                "BillingAddress4",
		"billing_city":                     "BillingCity",
		"billing_country":                  "BillingCountry",
		"billing_county":                   "BillingCounty",
		"billing_postal_code":              "BillingPostalCode",
		"billing_province":                 "BillingProvince",
		"billing_state":                    "BillingState",
		"birth_date":                       "BirthDate",
		"body":                             "Body",
		"business_email_address":           "BusinessEmailAddress",
		"business_name":                    "BusinessName",
		"business_phone_number":            "BusinessPhoneNumber",
		"channel_subtype":                  "ChannelSubtype",
		"city":                             "City",
		"content":                          "Content",
		"country":                          "Country",
		"county":                           "County",
		"criteria":                         "Criteria",
		"custom":                           "Custom",
		"custom_attributes":                "CustomAttributes",
		"customer_endpoint":                "CustomerEndpoint",
		"customer_profile_attributes":      "CustomerProfileAttributes",
		"default_attributes":               "DefaultAttributes",
		"description":                      "Description",
		"email_address":                    "EmailAddress",
		"email_message_template_content":   "EmailMessageTemplateContent",
		"first_name":                       "FirstName",
		"gender":                           "Gender",
		"grouping_configuration":           "GroupingConfiguration",
		"headers":                          "Headers",
		"home_phone_number":                "HomePhoneNumber",
		"html":                             "Html",
		"key":                              "Key",
		"knowledge_base_arn":               "KnowledgeBaseArn",
		"language":                         "Language",
		"last_name":                        "LastName",
		"mailing_address_1":                "MailingAddress1",
		"mailing_address_2":                "MailingAddress2",
		"mailing_address_3":                "MailingAddress3",
		"mailing_address_4":                "MailingAddress4",
		"mailing_city":                     "MailingCity",
		"mailing_country":                  "MailingCountry",
		"mailing_county":                   "MailingCounty",
		"mailing_postal_code":              "MailingPostalCode",
		"mailing_province":                 "MailingProvince",
		"mailing_state":                    "MailingState",
		"message_template_arn":             "MessageTemplateArn",
		"message_template_content_sha_256": "MessageTemplateContentSha256",
		"message_template_id":              "MessageTemplateId",
		"middle_name":                      "MiddleName",
		"mobile_phone_number":              "MobilePhoneNumber",
		"name":                             "Name",
		"party_type":                       "PartyType",
		"phone_number":                     "PhoneNumber",
		"plain_text":                       "PlainText",
		"postal_code":                      "PostalCode",
		"profile_arn":                      "ProfileARN",
		"profile_id":                       "ProfileId",
		"province":                         "Province",
		"shipping_address_1":               "ShippingAddress1",
		"shipping_address_2":               "ShippingAddress2",
		"shipping_address_3":               "ShippingAddress3",
		"shipping_address_4":               "ShippingAddress4",
		"shipping_city":                    "ShippingCity",
		"shipping_country":                 "ShippingCountry",
		"shipping_county":                  "ShippingCounty",
		"shipping_postal_code":             "ShippingPostalCode",
		"shipping_province":                "ShippingProvince",
		"shipping_state":                   "ShippingState",
		"sms_message_template_content":     "SmsMessageTemplateContent",
		"state":                            "State",
		"subject":                          "Subject",
		"system_attributes":                "SystemAttributes",
		"system_endpoint":                  "SystemEndpoint",
		"tags":                             "Tags",
		"value":                            "Value",
		"values":                           "Values",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
