// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package ssmcontacts

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_ssmcontacts_contact_channel", contactChannelDataSource)
}

// contactChannelDataSource returns the Terraform awscc_ssmcontacts_contact_channel data source.
// This Terraform data source corresponds to the CloudFormation AWS::SSMContacts::ContactChannel resource.
func contactChannelDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: Arn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Amazon Resource Name (ARN) of the engagement to a contact channel.",
		//	  "type": "string"
		//	}
		"arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Amazon Resource Name (ARN) of the engagement to a contact channel.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ChannelAddress
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The details that SSM Incident Manager uses when trying to engage the contact channel.",
		//	  "type": "string"
		//	}
		"channel_address": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The details that SSM Incident Manager uses when trying to engage the contact channel.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ChannelName
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The device name. String of 6 to 50 alphabetical, numeric, dash, and underscore characters.",
		//	  "maxLength": 255,
		//	  "minLength": 1,
		//	  "pattern": "",
		//	  "type": "string"
		//	}
		"channel_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The device name. String of 6 to 50 alphabetical, numeric, dash, and underscore characters.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ChannelType
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Device type, which specify notification channel. Currently supported values: ?SMS?, ?VOICE?, ?EMAIL?, ?CHATBOT.",
		//	  "enum": [
		//	    "SMS",
		//	    "VOICE",
		//	    "EMAIL"
		//	  ],
		//	  "type": "string"
		//	}
		"channel_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Device type, which specify notification channel. Currently supported values: ?SMS?, ?VOICE?, ?EMAIL?, ?CHATBOT.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ContactId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "ARN of the contact resource",
		//	  "maxLength": 2048,
		//	  "minLength": 1,
		//	  "pattern": "arn:[-\\w+=\\/,.@]+:[-\\w+=\\/,.@]+:[-\\w+=\\/,.@]*:[0-9]+:([\\w+=\\/,.@:-]+)*",
		//	  "type": "string"
		//	}
		"contact_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "ARN of the contact resource",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DeferActivation
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "If you want to activate the channel at a later time, you can choose to defer activation. SSM Incident Manager can't engage your contact channel until it has been activated.",
		//	  "type": "boolean"
		//	}
		"defer_activation": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "If you want to activate the channel at a later time, you can choose to defer activation. SSM Incident Manager can't engage your contact channel until it has been activated.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::SSMContacts::ContactChannel",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::SSMContacts::ContactChannel").WithTerraformTypeName("awscc_ssmcontacts_contact_channel")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"arn":              "Arn",
		"channel_address":  "ChannelAddress",
		"channel_name":     "ChannelName",
		"channel_type":     "ChannelType",
		"contact_id":       "ContactId",
		"defer_activation": "DeferActivation",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
