// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package bedrock

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_bedrock_guardrail_version", guardrailVersionDataSource)
}

// guardrailVersionDataSource returns the Terraform awscc_bedrock_guardrail_version data source.
// This Terraform data source corresponds to the CloudFormation AWS::Bedrock::GuardrailVersion resource.
func guardrailVersionDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: Description
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Description of the Guardrail version",
		//	  "maxLength": 200,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Description of the Guardrail version",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: GuardrailArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Arn representation for the guardrail",
		//	  "maxLength": 2048,
		//	  "pattern": "^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+$",
		//	  "type": "string"
		//	}
		"guardrail_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Arn representation for the guardrail",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: GuardrailId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Unique id for the guardrail",
		//	  "maxLength": 64,
		//	  "pattern": "^[a-z0-9]+$",
		//	  "type": "string"
		//	}
		"guardrail_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Unique id for the guardrail",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: GuardrailIdentifier
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Identifier (GuardrailId or GuardrailArn) for the guardrail",
		//	  "maxLength": 2048,
		//	  "pattern": "^(([a-z0-9]+)|(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+))$",
		//	  "type": "string"
		//	}
		"guardrail_identifier": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Identifier (GuardrailId or GuardrailArn) for the guardrail",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Version
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Guardrail version",
		//	  "pattern": "^[1-9][0-9]{0,7}$",
		//	  "type": "string"
		//	}
		"version": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Guardrail version",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::Bedrock::GuardrailVersion",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::Bedrock::GuardrailVersion").WithTerraformTypeName("awscc_bedrock_guardrail_version")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"description":          "Description",
		"guardrail_arn":        "GuardrailArn",
		"guardrail_id":         "GuardrailId",
		"guardrail_identifier": "GuardrailIdentifier",
		"version":              "Version",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
