// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package iotwireless

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
	providertypes "github.com/hashicorp/terraform-provider-awscc/internal/types"
)

func init() {
	registry.AddDataSourceTypeFactory("awscc_iotwireless_wireless_device", wirelessDeviceDataSourceType)
}

// wirelessDeviceDataSourceType returns the Terraform awscc_iotwireless_wireless_device data source type.
// This Terraform data source type corresponds to the CloudFormation AWS::IoTWireless::WirelessDevice resource type.
func wirelessDeviceDataSourceType(ctx context.Context) (tfsdk.DataSourceType, error) {
	attributes := map[string]tfsdk.Attribute{
		"arn": {
			// Property: Arn
			// CloudFormation resource type schema:
			// {
			//   "description": "Wireless device arn. Returned after successful create.",
			//   "type": "string"
			// }
			Description: "Wireless device arn. Returned after successful create.",
			Type:        types.StringType,
			Computed:    true,
		},
		"description": {
			// Property: Description
			// CloudFormation resource type schema:
			// {
			//   "description": "Wireless device description",
			//   "maxLength": 2048,
			//   "type": "string"
			// }
			Description: "Wireless device description",
			Type:        types.StringType,
			Computed:    true,
		},
		"destination_name": {
			// Property: DestinationName
			// CloudFormation resource type schema:
			// {
			//   "description": "Wireless device destination name",
			//   "maxLength": 128,
			//   "type": "string"
			// }
			Description: "Wireless device destination name",
			Type:        types.StringType,
			Computed:    true,
		},
		"id": {
			// Property: Id
			// CloudFormation resource type schema:
			// {
			//   "description": "Wireless device Id. Returned after successful create.",
			//   "maxLength": 256,
			//   "type": "string"
			// }
			Description: "Wireless device Id. Returned after successful create.",
			Type:        types.StringType,
			Computed:    true,
		},
		"last_uplink_received_at": {
			// Property: LastUplinkReceivedAt
			// CloudFormation resource type schema:
			// {
			//   "description": "The date and time when the most recent uplink was received.",
			//   "pattern": "",
			//   "type": "string"
			// }
			Description: "The date and time when the most recent uplink was received.",
			Type:        types.StringType,
			Computed:    true,
		},
		"lo_ra_wan": {
			// Property: LoRaWAN
			// CloudFormation resource type schema:
			// {
			//   "additionalProperties": false,
			//   "oneOf": [
			//     {
			//       "required": [
			//         "OtaaV11"
			//       ]
			//     },
			//     {
			//       "required": [
			//         "OtaaV10x"
			//       ]
			//     },
			//     {
			//       "required": [
			//         "AbpV11"
			//       ]
			//     },
			//     {
			//       "required": [
			//         "AbpV10x"
			//       ]
			//     }
			//   ],
			//   "properties": {
			//     "AbpV10x": {
			//       "additionalProperties": false,
			//       "properties": {
			//         "DevAddr": {
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "SessionKeys": {
			//           "additionalProperties": false,
			//           "properties": {
			//             "AppSKey": {
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "NwkSKey": {
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "NwkSKey",
			//             "AppSKey"
			//           ],
			//           "type": "object"
			//         }
			//       },
			//       "required": [
			//         "DevAddr",
			//         "SessionKeys"
			//       ],
			//       "type": "object"
			//     },
			//     "AbpV11": {
			//       "additionalProperties": false,
			//       "properties": {
			//         "DevAddr": {
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "SessionKeys": {
			//           "additionalProperties": false,
			//           "properties": {
			//             "AppSKey": {
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "FNwkSIntKey": {
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "NwkSEncKey": {
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "SNwkSIntKey": {
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "required": [
			//             "FNwkSIntKey",
			//             "SNwkSIntKey",
			//             "NwkSEncKey",
			//             "AppSKey"
			//           ],
			//           "type": "object"
			//         }
			//       },
			//       "required": [
			//         "DevAddr",
			//         "SessionKeys"
			//       ],
			//       "type": "object"
			//     },
			//     "DevEui": {
			//       "pattern": "",
			//       "type": "string"
			//     },
			//     "DeviceProfileId": {
			//       "maxLength": 256,
			//       "type": "string"
			//     },
			//     "OtaaV10x": {
			//       "additionalProperties": false,
			//       "properties": {
			//         "AppEui": {
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "AppKey": {
			//           "pattern": "",
			//           "type": "string"
			//         }
			//       },
			//       "required": [
			//         "AppKey",
			//         "AppEui"
			//       ],
			//       "type": "object"
			//     },
			//     "OtaaV11": {
			//       "additionalProperties": false,
			//       "properties": {
			//         "AppKey": {
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "JoinEui": {
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "NwkKey": {
			//           "pattern": "",
			//           "type": "string"
			//         }
			//       },
			//       "required": [
			//         "AppKey",
			//         "NwkKey",
			//         "JoinEui"
			//       ],
			//       "type": "object"
			//     },
			//     "ServiceProfileId": {
			//       "maxLength": 256,
			//       "type": "string"
			//     }
			//   },
			//   "type": "object"
			// }
			Attributes: tfsdk.SingleNestedAttributes(
				map[string]tfsdk.Attribute{
					"abp_v10_x": {
						// Property: AbpV10x
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"dev_addr": {
									// Property: DevAddr
									Type:     types.StringType,
									Computed: true,
								},
								"session_keys": {
									// Property: SessionKeys
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"app_s_key": {
												// Property: AppSKey
												Type:     types.StringType,
												Computed: true,
											},
											"nwk_s_key": {
												// Property: NwkSKey
												Type:     types.StringType,
												Computed: true,
											},
										},
									),
									Computed: true,
								},
							},
						),
						Computed: true,
					},
					"abp_v11": {
						// Property: AbpV11
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"dev_addr": {
									// Property: DevAddr
									Type:     types.StringType,
									Computed: true,
								},
								"session_keys": {
									// Property: SessionKeys
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"app_s_key": {
												// Property: AppSKey
												Type:     types.StringType,
												Computed: true,
											},
											"f_nwk_s_int_key": {
												// Property: FNwkSIntKey
												Type:     types.StringType,
												Computed: true,
											},
											"nwk_s_enc_key": {
												// Property: NwkSEncKey
												Type:     types.StringType,
												Computed: true,
											},
											"s_nwk_s_int_key": {
												// Property: SNwkSIntKey
												Type:     types.StringType,
												Computed: true,
											},
										},
									),
									Computed: true,
								},
							},
						),
						Computed: true,
					},
					"dev_eui": {
						// Property: DevEui
						Type:     types.StringType,
						Computed: true,
					},
					"device_profile_id": {
						// Property: DeviceProfileId
						Type:     types.StringType,
						Computed: true,
					},
					"otaa_v10_x": {
						// Property: OtaaV10x
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"app_eui": {
									// Property: AppEui
									Type:     types.StringType,
									Computed: true,
								},
								"app_key": {
									// Property: AppKey
									Type:     types.StringType,
									Computed: true,
								},
							},
						),
						Computed: true,
					},
					"otaa_v11": {
						// Property: OtaaV11
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"app_key": {
									// Property: AppKey
									Type:     types.StringType,
									Computed: true,
								},
								"join_eui": {
									// Property: JoinEui
									Type:     types.StringType,
									Computed: true,
								},
								"nwk_key": {
									// Property: NwkKey
									Type:     types.StringType,
									Computed: true,
								},
							},
						),
						Computed: true,
					},
					"service_profile_id": {
						// Property: ServiceProfileId
						Type:     types.StringType,
						Computed: true,
					},
				},
			),
			Computed: true,
		},
		"name": {
			// Property: Name
			// CloudFormation resource type schema:
			// {
			//   "description": "Wireless device name",
			//   "maxLength": 256,
			//   "type": "string"
			// }
			Description: "Wireless device name",
			Type:        types.StringType,
			Computed:    true,
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			// {
			//   "description": "A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are passed.",
			//   "insertionOrder": false,
			//   "items": {
			//     "additionalProperties": false,
			//     "properties": {
			//       "Key": {
			//         "maxLength": 128,
			//         "minLength": 1,
			//         "type": "string"
			//       },
			//       "Value": {
			//         "maxLength": 256,
			//         "minLength": 0,
			//         "type": "string"
			//       }
			//     },
			//     "type": "object"
			//   },
			//   "maxItems": 50,
			//   "type": "array",
			//   "uniqueItems": true
			// }
			Description: "A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are passed.",
			Attributes: providertypes.SetNestedAttributes(
				map[string]tfsdk.Attribute{
					"key": {
						// Property: Key
						Type:     types.StringType,
						Computed: true,
					},
					"value": {
						// Property: Value
						Type:     types.StringType,
						Computed: true,
					},
				},
				providertypes.SetNestedAttributesOptions{},
			),
			Computed: true,
		},
		"thing_arn": {
			// Property: ThingArn
			// CloudFormation resource type schema:
			// {
			//   "description": "Thing arn. Passed into update to associate Thing with Wireless device.",
			//   "type": "string"
			// }
			Description: "Thing arn. Passed into update to associate Thing with Wireless device.",
			Type:        types.StringType,
			Computed:    true,
		},
		"thing_name": {
			// Property: ThingName
			// CloudFormation resource type schema:
			// {
			//   "description": "Thing Arn. If there is a Thing created, this can be returned with a Get call.",
			//   "type": "string"
			// }
			Description: "Thing Arn. If there is a Thing created, this can be returned with a Get call.",
			Type:        types.StringType,
			Computed:    true,
		},
		"type": {
			// Property: Type
			// CloudFormation resource type schema:
			// {
			//   "description": "Wireless device type, currently only Sidewalk and LoRa",
			//   "enum": [
			//     "Sidewalk",
			//     "LoRaWAN"
			//   ],
			//   "type": "string"
			// }
			Description: "Wireless device type, currently only Sidewalk and LoRa",
			Type:        types.StringType,
			Computed:    true,
		},
	}

	attributes["id"] = tfsdk.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Required:    true,
	}

	schema := tfsdk.Schema{
		Description: "Data Source schema for AWS::IoTWireless::WirelessDevice",
		Version:     1,
		Attributes:  attributes,
	}

	var opts DataSourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::IoTWireless::WirelessDevice").WithTerraformTypeName("awscc_iotwireless_wireless_device")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"abp_v10_x":               "AbpV10x",
		"abp_v11":                 "AbpV11",
		"app_eui":                 "AppEui",
		"app_key":                 "AppKey",
		"app_s_key":               "AppSKey",
		"arn":                     "Arn",
		"description":             "Description",
		"destination_name":        "DestinationName",
		"dev_addr":                "DevAddr",
		"dev_eui":                 "DevEui",
		"device_profile_id":       "DeviceProfileId",
		"f_nwk_s_int_key":         "FNwkSIntKey",
		"id":                      "Id",
		"join_eui":                "JoinEui",
		"key":                     "Key",
		"last_uplink_received_at": "LastUplinkReceivedAt",
		"lo_ra_wan":               "LoRaWAN",
		"name":                    "Name",
		"nwk_key":                 "NwkKey",
		"nwk_s_enc_key":           "NwkSEncKey",
		"nwk_s_key":               "NwkSKey",
		"otaa_v10_x":              "OtaaV10x",
		"otaa_v11":                "OtaaV11",
		"s_nwk_s_int_key":         "SNwkSIntKey",
		"service_profile_id":      "ServiceProfileId",
		"session_keys":            "SessionKeys",
		"tags":                    "Tags",
		"thing_arn":               "ThingArn",
		"thing_name":              "ThingName",
		"type":                    "Type",
		"value":                   "Value",
	})

	singularDataSourceType, err := NewSingularDataSourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "awscc_iotwireless_wireless_device", "schema", hclog.Fmt("%v", schema))

	return singularDataSourceType, nil
}
