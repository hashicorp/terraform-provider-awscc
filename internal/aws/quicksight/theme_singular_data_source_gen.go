// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package quicksight

import (
	"context"

	hclog "github.com/hashicorp/go-hclog"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tflog "github.com/hashicorp/terraform-plugin-log"
	. "github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceTypeFactory("awscc_quicksight_theme", themeDataSourceType)
}

// themeDataSourceType returns the Terraform awscc_quicksight_theme data source type.
// This Terraform data source type corresponds to the CloudFormation AWS::QuickSight::Theme resource type.
func themeDataSourceType(ctx context.Context) (tfsdk.DataSourceType, error) {
	attributes := map[string]tfsdk.Attribute{
		"arn": {
			// Property: Arn
			// CloudFormation resource type schema:
			// {
			//   "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the theme.\u003c/p\u003e",
			//   "type": "string"
			// }
			Description: "<p>The Amazon Resource Name (ARN) of the theme.</p>",
			Type:        types.StringType,
			Computed:    true,
		},
		"aws_account_id": {
			// Property: AwsAccountId
			// CloudFormation resource type schema:
			// {
			//   "maxLength": 12,
			//   "minLength": 12,
			//   "pattern": "",
			//   "type": "string"
			// }
			Type:     types.StringType,
			Computed: true,
		},
		"base_theme_id": {
			// Property: BaseThemeId
			// CloudFormation resource type schema:
			// {
			//   "description": "\u003cp\u003eThe ID of the theme that a custom theme will inherit from. All themes inherit from one of\n\t\t\tthe starting themes defined by Amazon QuickSight. For a list of the starting themes, use\n\t\t\t\t\u003ccode\u003eListThemes\u003c/code\u003e or choose \u003cb\u003eThemes\u003c/b\u003e from\n\t\t\twithin a QuickSight analysis. \u003c/p\u003e",
			//   "maxLength": 2048,
			//   "minLength": 1,
			//   "pattern": "",
			//   "type": "string"
			// }
			Description: "<p>The ID of the theme that a custom theme will inherit from. All themes inherit from one of\n\t\t\tthe starting themes defined by Amazon QuickSight. For a list of the starting themes, use\n\t\t\t\t<code>ListThemes</code> or choose <b>Themes</b> from\n\t\t\twithin a QuickSight analysis. </p>",
			Type:        types.StringType,
			Computed:    true,
		},
		"configuration": {
			// Property: Configuration
			// CloudFormation resource type schema:
			// {
			//   "additionalProperties": false,
			//   "description": "\u003cp\u003eThe theme configuration. This configuration contains all of the display properties for\n            a theme.\u003c/p\u003e",
			//   "properties": {
			//     "DataColorPalette": {
			//       "additionalProperties": false,
			//       "description": "\u003cp\u003eThe theme colors that are used for data colors in charts. The colors description is a\n            hexadecimal color code that consists of six alphanumerical characters, prefixed with\n                \u003ccode\u003e#\u003c/code\u003e, for example #37BFF5. \u003c/p\u003e",
			//       "properties": {
			//         "Colors": {
			//           "description": "\u003cp\u003eThe hexadecimal codes for the colors.\u003c/p\u003e",
			//           "items": {
			//             "pattern": "",
			//             "type": "string"
			//           },
			//           "maxItems": 100,
			//           "minItems": 0,
			//           "type": "array"
			//         },
			//         "EmptyFillColor": {
			//           "description": "\u003cp\u003eThe hexadecimal code of a color that applies to charts where a lack of data is\n            highlighted.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "MinMaxGradient": {
			//           "description": "\u003cp\u003eThe minimum and maximum hexadecimal codes that describe a color gradient. \u003c/p\u003e",
			//           "items": {
			//             "pattern": "",
			//             "type": "string"
			//           },
			//           "maxItems": 100,
			//           "minItems": 0,
			//           "type": "array"
			//         }
			//       },
			//       "type": "object"
			//     },
			//     "Sheet": {
			//       "additionalProperties": false,
			//       "description": "\u003cp\u003eThe theme display options for sheets. \u003c/p\u003e",
			//       "properties": {
			//         "Tile": {
			//           "additionalProperties": false,
			//           "description": "\u003cp\u003eDisplay options related to tiles on a sheet.\u003c/p\u003e",
			//           "properties": {
			//             "Border": {
			//               "additionalProperties": false,
			//               "description": "\u003cp\u003eThe display options for tile borders for visuals.\u003c/p\u003e",
			//               "properties": {
			//                 "Show": {
			//                   "description": "\u003cp\u003eThe option to enable display of borders for visuals.\u003c/p\u003e",
			//                   "type": "boolean"
			//                 }
			//               },
			//               "type": "object"
			//             }
			//           },
			//           "type": "object"
			//         },
			//         "TileLayout": {
			//           "additionalProperties": false,
			//           "description": "\u003cp\u003eThe display options for the layout of tiles on a sheet.\u003c/p\u003e",
			//           "properties": {
			//             "Gutter": {
			//               "additionalProperties": false,
			//               "description": "\u003cp\u003eThe display options for gutter spacing between tiles on a sheet.\u003c/p\u003e",
			//               "properties": {
			//                 "Show": {
			//                   "description": "\u003cp\u003eThis Boolean value controls whether to display a gutter space between sheet tiles.\n        \u003c/p\u003e",
			//                   "type": "boolean"
			//                 }
			//               },
			//               "type": "object"
			//             },
			//             "Margin": {
			//               "additionalProperties": false,
			//               "description": "\u003cp\u003eThe display options for margins around the outside edge of sheets.\u003c/p\u003e",
			//               "properties": {
			//                 "Show": {
			//                   "description": "\u003cp\u003eThis Boolean value controls whether to display sheet margins.\u003c/p\u003e",
			//                   "type": "boolean"
			//                 }
			//               },
			//               "type": "object"
			//             }
			//           },
			//           "type": "object"
			//         }
			//       },
			//       "type": "object"
			//     },
			//     "Typography": {
			//       "additionalProperties": false,
			//       "properties": {
			//         "FontFamilies": {
			//           "items": {
			//             "additionalProperties": false,
			//             "properties": {
			//               "FontFamily": {
			//                 "type": "string"
			//               }
			//             },
			//             "type": "object"
			//           },
			//           "maxItems": 5,
			//           "minItems": 0,
			//           "type": "array"
			//         }
			//       },
			//       "type": "object"
			//     },
			//     "UIColorPalette": {
			//       "additionalProperties": false,
			//       "description": "\u003cp\u003eThe theme colors that apply to UI and to charts, excluding data colors. The colors\n            description is a hexadecimal color code that consists of six alphanumerical characters,\n            prefixed with \u003ccode\u003e#\u003c/code\u003e, for example #37BFF5. For more information, see \u003ca href=\"https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html\"\u003eUsing Themes in Amazon QuickSight\u003c/a\u003e in the \u003ci\u003eAmazon QuickSight User\n                Guide.\u003c/i\u003e\n        \u003c/p\u003e",
			//       "properties": {
			//         "Accent": {
			//           "description": "\u003cp\u003eThis color is that applies to selected states and buttons.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "AccentForeground": {
			//           "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            accent color.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "Danger": {
			//           "description": "\u003cp\u003eThe color that applies to error messages.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "DangerForeground": {
			//           "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            error color.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "Dimension": {
			//           "description": "\u003cp\u003eThe color that applies to the names of fields that are identified as\n            dimensions.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "DimensionForeground": {
			//           "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            dimension color.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "Measure": {
			//           "description": "\u003cp\u003eThe color that applies to the names of fields that are identified as measures.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "MeasureForeground": {
			//           "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            measure color.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "PrimaryBackground": {
			//           "description": "\u003cp\u003eThe background color that applies to visuals and other high emphasis UI.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "PrimaryForeground": {
			//           "description": "\u003cp\u003eThe color of text and other foreground elements that appear over the primary\n            background regions, such as grid lines, borders, table banding, icons, and so on.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "SecondaryBackground": {
			//           "description": "\u003cp\u003eThe background color that applies to the sheet background and sheet controls.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "SecondaryForeground": {
			//           "description": "\u003cp\u003eThe foreground color that applies to any sheet title, sheet control text, or UI that\n            appears over the secondary background.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "Success": {
			//           "description": "\u003cp\u003eThe color that applies to success messages, for example the check mark for a\n            successful download.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "SuccessForeground": {
			//           "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            success color.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "Warning": {
			//           "description": "\u003cp\u003eThis color that applies to warning and informational messages.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         },
			//         "WarningForeground": {
			//           "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            warning color.\u003c/p\u003e",
			//           "pattern": "",
			//           "type": "string"
			//         }
			//       },
			//       "type": "object"
			//     }
			//   },
			//   "type": "object"
			// }
			Description: "<p>The theme configuration. This configuration contains all of the display properties for\n            a theme.</p>",
			Attributes: tfsdk.SingleNestedAttributes(
				map[string]tfsdk.Attribute{
					"data_color_palette": {
						// Property: DataColorPalette
						Description: "<p>The theme colors that are used for data colors in charts. The colors description is a\n            hexadecimal color code that consists of six alphanumerical characters, prefixed with\n                <code>#</code>, for example #37BFF5. </p>",
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"colors": {
									// Property: Colors
									Description: "<p>The hexadecimal codes for the colors.</p>",
									Type:        types.ListType{ElemType: types.StringType},
									Computed:    true,
								},
								"empty_fill_color": {
									// Property: EmptyFillColor
									Description: "<p>The hexadecimal code of a color that applies to charts where a lack of data is\n            highlighted.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"min_max_gradient": {
									// Property: MinMaxGradient
									Description: "<p>The minimum and maximum hexadecimal codes that describe a color gradient. </p>",
									Type:        types.ListType{ElemType: types.StringType},
									Computed:    true,
								},
							},
						),
						Computed: true,
					},
					"sheet": {
						// Property: Sheet
						Description: "<p>The theme display options for sheets. </p>",
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"tile": {
									// Property: Tile
									Description: "<p>Display options related to tiles on a sheet.</p>",
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"border": {
												// Property: Border
												Description: "<p>The display options for tile borders for visuals.</p>",
												Attributes: tfsdk.SingleNestedAttributes(
													map[string]tfsdk.Attribute{
														"show": {
															// Property: Show
															Description: "<p>The option to enable display of borders for visuals.</p>",
															Type:        types.BoolType,
															Computed:    true,
														},
													},
												),
												Computed: true,
											},
										},
									),
									Computed: true,
								},
								"tile_layout": {
									// Property: TileLayout
									Description: "<p>The display options for the layout of tiles on a sheet.</p>",
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"gutter": {
												// Property: Gutter
												Description: "<p>The display options for gutter spacing between tiles on a sheet.</p>",
												Attributes: tfsdk.SingleNestedAttributes(
													map[string]tfsdk.Attribute{
														"show": {
															// Property: Show
															Description: "<p>This Boolean value controls whether to display a gutter space between sheet tiles.\n        </p>",
															Type:        types.BoolType,
															Computed:    true,
														},
													},
												),
												Computed: true,
											},
											"margin": {
												// Property: Margin
												Description: "<p>The display options for margins around the outside edge of sheets.</p>",
												Attributes: tfsdk.SingleNestedAttributes(
													map[string]tfsdk.Attribute{
														"show": {
															// Property: Show
															Description: "<p>This Boolean value controls whether to display sheet margins.</p>",
															Type:        types.BoolType,
															Computed:    true,
														},
													},
												),
												Computed: true,
											},
										},
									),
									Computed: true,
								},
							},
						),
						Computed: true,
					},
					"typography": {
						// Property: Typography
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"font_families": {
									// Property: FontFamilies
									Attributes: tfsdk.ListNestedAttributes(
										map[string]tfsdk.Attribute{
											"font_family": {
												// Property: FontFamily
												Type:     types.StringType,
												Computed: true,
											},
										},
										tfsdk.ListNestedAttributesOptions{},
									),
									Computed: true,
								},
							},
						),
						Computed: true,
					},
					"ui_color_palette": {
						// Property: UIColorPalette
						Description: "<p>The theme colors that apply to UI and to charts, excluding data colors. The colors\n            description is a hexadecimal color code that consists of six alphanumerical characters,\n            prefixed with <code>#</code>, for example #37BFF5. For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html\">Using Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User\n                Guide.</i>\n        </p>",
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"accent": {
									// Property: Accent
									Description: "<p>This color is that applies to selected states and buttons.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"accent_foreground": {
									// Property: AccentForeground
									Description: "<p>The foreground color that applies to any text or other elements that appear over the\n            accent color.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"danger": {
									// Property: Danger
									Description: "<p>The color that applies to error messages.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"danger_foreground": {
									// Property: DangerForeground
									Description: "<p>The foreground color that applies to any text or other elements that appear over the\n            error color.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"dimension": {
									// Property: Dimension
									Description: "<p>The color that applies to the names of fields that are identified as\n            dimensions.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"dimension_foreground": {
									// Property: DimensionForeground
									Description: "<p>The foreground color that applies to any text or other elements that appear over the\n            dimension color.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"measure": {
									// Property: Measure
									Description: "<p>The color that applies to the names of fields that are identified as measures.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"measure_foreground": {
									// Property: MeasureForeground
									Description: "<p>The foreground color that applies to any text or other elements that appear over the\n            measure color.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"primary_background": {
									// Property: PrimaryBackground
									Description: "<p>The background color that applies to visuals and other high emphasis UI.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"primary_foreground": {
									// Property: PrimaryForeground
									Description: "<p>The color of text and other foreground elements that appear over the primary\n            background regions, such as grid lines, borders, table banding, icons, and so on.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"secondary_background": {
									// Property: SecondaryBackground
									Description: "<p>The background color that applies to the sheet background and sheet controls.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"secondary_foreground": {
									// Property: SecondaryForeground
									Description: "<p>The foreground color that applies to any sheet title, sheet control text, or UI that\n            appears over the secondary background.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"success": {
									// Property: Success
									Description: "<p>The color that applies to success messages, for example the check mark for a\n            successful download.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"success_foreground": {
									// Property: SuccessForeground
									Description: "<p>The foreground color that applies to any text or other elements that appear over the\n            success color.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"warning": {
									// Property: Warning
									Description: "<p>This color that applies to warning and informational messages.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"warning_foreground": {
									// Property: WarningForeground
									Description: "<p>The foreground color that applies to any text or other elements that appear over the\n            warning color.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
							},
						),
						Computed: true,
					},
				},
			),
			Computed: true,
		},
		"created_time": {
			// Property: CreatedTime
			// CloudFormation resource type schema:
			// {
			//   "description": "\u003cp\u003eThe date and time that the theme was created.\u003c/p\u003e",
			//   "format": "string",
			//   "type": "string"
			// }
			Description: "<p>The date and time that the theme was created.</p>",
			Type:        types.StringType,
			Computed:    true,
		},
		"last_updated_time": {
			// Property: LastUpdatedTime
			// CloudFormation resource type schema:
			// {
			//   "description": "\u003cp\u003eThe date and time that the theme was last updated.\u003c/p\u003e",
			//   "format": "string",
			//   "type": "string"
			// }
			Description: "<p>The date and time that the theme was last updated.</p>",
			Type:        types.StringType,
			Computed:    true,
		},
		"name": {
			// Property: Name
			// CloudFormation resource type schema:
			// {
			//   "description": "\u003cp\u003eA display name for the theme.\u003c/p\u003e",
			//   "maxLength": 2048,
			//   "minLength": 1,
			//   "type": "string"
			// }
			Description: "<p>A display name for the theme.</p>",
			Type:        types.StringType,
			Computed:    true,
		},
		"permissions": {
			// Property: Permissions
			// CloudFormation resource type schema:
			// {
			//   "description": "\u003cp\u003eA valid grouping of resource permissions to apply to the new theme.\n\t\t\t\u003c/p\u003e",
			//   "items": {
			//     "additionalProperties": false,
			//     "description": "\u003cp\u003ePermission for the resource.\u003c/p\u003e",
			//     "properties": {
			//       "Actions": {
			//         "description": "\u003cp\u003eThe IAM action to grant or revoke permissions on.\u003c/p\u003e",
			//         "items": {
			//           "type": "string"
			//         },
			//         "maxItems": 16,
			//         "minItems": 1,
			//         "type": "array"
			//       },
			//       "Principal": {
			//         "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:\u003c/p\u003e\n        \u003cul\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)\u003c/p\u003e\n            \u003c/li\u003e\n            \u003cli\u003e\n                \u003cp\u003eThe ARN of an AWS account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across AWS accounts.\n                    (This is less common.) \u003c/p\u003e\n            \u003c/li\u003e\n         \u003c/ul\u003e",
			//         "maxLength": 256,
			//         "minLength": 1,
			//         "type": "string"
			//       }
			//     },
			//     "required": [
			//       "Actions",
			//       "Principal"
			//     ],
			//     "type": "object"
			//   },
			//   "maxItems": 64,
			//   "minItems": 1,
			//   "type": "array"
			// }
			Description: "<p>A valid grouping of resource permissions to apply to the new theme.\n\t\t\t</p>",
			Attributes: tfsdk.ListNestedAttributes(
				map[string]tfsdk.Attribute{
					"actions": {
						// Property: Actions
						Description: "<p>The IAM action to grant or revoke permissions on.</p>",
						Type:        types.ListType{ElemType: types.StringType},
						Computed:    true,
					},
					"principal": {
						// Property: Principal
						Description: "<p>The Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:</p>\n        <ul>\n            <li>\n                <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>\n            </li>\n            <li>\n                <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>\n            </li>\n            <li>\n                <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across AWS accounts.\n                    (This is less common.) </p>\n            </li>\n         </ul>",
						Type:        types.StringType,
						Computed:    true,
					},
				},
				tfsdk.ListNestedAttributesOptions{},
			),
			Computed: true,
		},
		"tags": {
			// Property: Tags
			// CloudFormation resource type schema:
			// {
			//   "description": "\u003cp\u003eA map of the key-value pairs for the resource tag or tags that you want to add to the\n\t\t\tresource.\u003c/p\u003e",
			//   "items": {
			//     "additionalProperties": false,
			//     "description": "\u003cp\u003eThe key or keys of the key-value pairs for the resource tag or tags assigned to the\n            resource.\u003c/p\u003e",
			//     "properties": {
			//       "Key": {
			//         "description": "\u003cp\u003eTag key.\u003c/p\u003e",
			//         "maxLength": 128,
			//         "minLength": 1,
			//         "type": "string"
			//       },
			//       "Value": {
			//         "description": "\u003cp\u003eTag value.\u003c/p\u003e",
			//         "maxLength": 256,
			//         "minLength": 1,
			//         "type": "string"
			//       }
			//     },
			//     "required": [
			//       "Key",
			//       "Value"
			//     ],
			//     "type": "object"
			//   },
			//   "maxItems": 200,
			//   "minItems": 1,
			//   "type": "array"
			// }
			Description: "<p>A map of the key-value pairs for the resource tag or tags that you want to add to the\n\t\t\tresource.</p>",
			Attributes: tfsdk.ListNestedAttributes(
				map[string]tfsdk.Attribute{
					"key": {
						// Property: Key
						Description: "<p>Tag key.</p>",
						Type:        types.StringType,
						Computed:    true,
					},
					"value": {
						// Property: Value
						Description: "<p>Tag value.</p>",
						Type:        types.StringType,
						Computed:    true,
					},
				},
				tfsdk.ListNestedAttributesOptions{},
			),
			Computed: true,
		},
		"theme_id": {
			// Property: ThemeId
			// CloudFormation resource type schema:
			// {
			//   "maxLength": 2048,
			//   "minLength": 1,
			//   "pattern": "",
			//   "type": "string"
			// }
			Type:     types.StringType,
			Computed: true,
		},
		"type": {
			// Property: Type
			// CloudFormation resource type schema:
			// {
			//   "enum": [
			//     "QUICKSIGHT",
			//     "CUSTOM",
			//     "ALL"
			//   ],
			//   "type": "string"
			// }
			Type:     types.StringType,
			Computed: true,
		},
		"version": {
			// Property: Version
			// CloudFormation resource type schema:
			// {
			//   "additionalProperties": false,
			//   "description": "\u003cp\u003eA version of a theme.\u003c/p\u003e",
			//   "properties": {
			//     "Arn": {
			//       "description": "\u003cp\u003eThe Amazon Resource Name (ARN) of the resource.\u003c/p\u003e",
			//       "type": "string"
			//     },
			//     "BaseThemeId": {
			//       "description": "\u003cp\u003eThe Amazon QuickSight-defined ID of the theme that a custom theme inherits from. All\n            themes initially inherit from a default QuickSight theme.\u003c/p\u003e",
			//       "maxLength": 2048,
			//       "minLength": 1,
			//       "pattern": "",
			//       "type": "string"
			//     },
			//     "Configuration": {
			//       "additionalProperties": false,
			//       "description": "\u003cp\u003eThe theme configuration. This configuration contains all of the display properties for\n            a theme.\u003c/p\u003e",
			//       "properties": {
			//         "DataColorPalette": {
			//           "additionalProperties": false,
			//           "description": "\u003cp\u003eThe theme colors that are used for data colors in charts. The colors description is a\n            hexadecimal color code that consists of six alphanumerical characters, prefixed with\n                \u003ccode\u003e#\u003c/code\u003e, for example #37BFF5. \u003c/p\u003e",
			//           "properties": {
			//             "Colors": {
			//               "description": "\u003cp\u003eThe hexadecimal codes for the colors.\u003c/p\u003e",
			//               "items": {
			//                 "pattern": "",
			//                 "type": "string"
			//               },
			//               "maxItems": 100,
			//               "minItems": 0,
			//               "type": "array"
			//             },
			//             "EmptyFillColor": {
			//               "description": "\u003cp\u003eThe hexadecimal code of a color that applies to charts where a lack of data is\n            highlighted.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "MinMaxGradient": {
			//               "description": "\u003cp\u003eThe minimum and maximum hexadecimal codes that describe a color gradient. \u003c/p\u003e",
			//               "items": {
			//                 "pattern": "",
			//                 "type": "string"
			//               },
			//               "maxItems": 100,
			//               "minItems": 0,
			//               "type": "array"
			//             }
			//           },
			//           "type": "object"
			//         },
			//         "Sheet": {
			//           "additionalProperties": false,
			//           "description": "\u003cp\u003eThe theme display options for sheets. \u003c/p\u003e",
			//           "properties": {
			//             "Tile": {
			//               "additionalProperties": false,
			//               "description": "\u003cp\u003eDisplay options related to tiles on a sheet.\u003c/p\u003e",
			//               "properties": {
			//                 "Border": {
			//                   "additionalProperties": false,
			//                   "description": "\u003cp\u003eThe display options for tile borders for visuals.\u003c/p\u003e",
			//                   "properties": {
			//                     "Show": {
			//                       "description": "\u003cp\u003eThe option to enable display of borders for visuals.\u003c/p\u003e",
			//                       "type": "boolean"
			//                     }
			//                   },
			//                   "type": "object"
			//                 }
			//               },
			//               "type": "object"
			//             },
			//             "TileLayout": {
			//               "additionalProperties": false,
			//               "description": "\u003cp\u003eThe display options for the layout of tiles on a sheet.\u003c/p\u003e",
			//               "properties": {
			//                 "Gutter": {
			//                   "additionalProperties": false,
			//                   "description": "\u003cp\u003eThe display options for gutter spacing between tiles on a sheet.\u003c/p\u003e",
			//                   "properties": {
			//                     "Show": {
			//                       "description": "\u003cp\u003eThis Boolean value controls whether to display a gutter space between sheet tiles.\n        \u003c/p\u003e",
			//                       "type": "boolean"
			//                     }
			//                   },
			//                   "type": "object"
			//                 },
			//                 "Margin": {
			//                   "additionalProperties": false,
			//                   "description": "\u003cp\u003eThe display options for margins around the outside edge of sheets.\u003c/p\u003e",
			//                   "properties": {
			//                     "Show": {
			//                       "description": "\u003cp\u003eThis Boolean value controls whether to display sheet margins.\u003c/p\u003e",
			//                       "type": "boolean"
			//                     }
			//                   },
			//                   "type": "object"
			//                 }
			//               },
			//               "type": "object"
			//             }
			//           },
			//           "type": "object"
			//         },
			//         "Typography": {
			//           "additionalProperties": false,
			//           "properties": {
			//             "FontFamilies": {
			//               "items": {
			//                 "additionalProperties": false,
			//                 "properties": {
			//                   "FontFamily": {
			//                     "type": "string"
			//                   }
			//                 },
			//                 "type": "object"
			//               },
			//               "maxItems": 5,
			//               "minItems": 0,
			//               "type": "array"
			//             }
			//           },
			//           "type": "object"
			//         },
			//         "UIColorPalette": {
			//           "additionalProperties": false,
			//           "description": "\u003cp\u003eThe theme colors that apply to UI and to charts, excluding data colors. The colors\n            description is a hexadecimal color code that consists of six alphanumerical characters,\n            prefixed with \u003ccode\u003e#\u003c/code\u003e, for example #37BFF5. For more information, see \u003ca href=\"https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html\"\u003eUsing Themes in Amazon QuickSight\u003c/a\u003e in the \u003ci\u003eAmazon QuickSight User\n                Guide.\u003c/i\u003e\n        \u003c/p\u003e",
			//           "properties": {
			//             "Accent": {
			//               "description": "\u003cp\u003eThis color is that applies to selected states and buttons.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "AccentForeground": {
			//               "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            accent color.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "Danger": {
			//               "description": "\u003cp\u003eThe color that applies to error messages.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "DangerForeground": {
			//               "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            error color.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "Dimension": {
			//               "description": "\u003cp\u003eThe color that applies to the names of fields that are identified as\n            dimensions.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "DimensionForeground": {
			//               "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            dimension color.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "Measure": {
			//               "description": "\u003cp\u003eThe color that applies to the names of fields that are identified as measures.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "MeasureForeground": {
			//               "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            measure color.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "PrimaryBackground": {
			//               "description": "\u003cp\u003eThe background color that applies to visuals and other high emphasis UI.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "PrimaryForeground": {
			//               "description": "\u003cp\u003eThe color of text and other foreground elements that appear over the primary\n            background regions, such as grid lines, borders, table banding, icons, and so on.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "SecondaryBackground": {
			//               "description": "\u003cp\u003eThe background color that applies to the sheet background and sheet controls.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "SecondaryForeground": {
			//               "description": "\u003cp\u003eThe foreground color that applies to any sheet title, sheet control text, or UI that\n            appears over the secondary background.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "Success": {
			//               "description": "\u003cp\u003eThe color that applies to success messages, for example the check mark for a\n            successful download.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "SuccessForeground": {
			//               "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            success color.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "Warning": {
			//               "description": "\u003cp\u003eThis color that applies to warning and informational messages.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             },
			//             "WarningForeground": {
			//               "description": "\u003cp\u003eThe foreground color that applies to any text or other elements that appear over the\n            warning color.\u003c/p\u003e",
			//               "pattern": "",
			//               "type": "string"
			//             }
			//           },
			//           "type": "object"
			//         }
			//       },
			//       "type": "object"
			//     },
			//     "CreatedTime": {
			//       "description": "\u003cp\u003eThe date and time that this theme version was created.\u003c/p\u003e",
			//       "format": "string",
			//       "type": "string"
			//     },
			//     "Description": {
			//       "description": "\u003cp\u003eThe description of the theme.\u003c/p\u003e",
			//       "maxLength": 512,
			//       "minLength": 1,
			//       "type": "string"
			//     },
			//     "Errors": {
			//       "description": "\u003cp\u003eErrors associated with the theme.\u003c/p\u003e",
			//       "items": {
			//         "additionalProperties": false,
			//         "description": "\u003cp\u003eTheme error.\u003c/p\u003e",
			//         "properties": {
			//           "Message": {
			//             "description": "\u003cp\u003eThe error message.\u003c/p\u003e",
			//             "pattern": "",
			//             "type": "string"
			//           },
			//           "Type": {
			//             "enum": [
			//               "INTERNAL_FAILURE"
			//             ],
			//             "type": "string"
			//           }
			//         },
			//         "type": "object"
			//       },
			//       "minItems": 1,
			//       "type": "array"
			//     },
			//     "Status": {
			//       "enum": [
			//         "CREATION_IN_PROGRESS",
			//         "CREATION_SUCCESSFUL",
			//         "CREATION_FAILED",
			//         "UPDATE_IN_PROGRESS",
			//         "UPDATE_SUCCESSFUL",
			//         "UPDATE_FAILED",
			//         "DELETED"
			//       ],
			//       "type": "string"
			//     },
			//     "VersionNumber": {
			//       "description": "\u003cp\u003eThe version number of the theme.\u003c/p\u003e",
			//       "minimum": 1,
			//       "type": "number"
			//     }
			//   },
			//   "type": "object"
			// }
			Description: "<p>A version of a theme.</p>",
			Attributes: tfsdk.SingleNestedAttributes(
				map[string]tfsdk.Attribute{
					"arn": {
						// Property: Arn
						Description: "<p>The Amazon Resource Name (ARN) of the resource.</p>",
						Type:        types.StringType,
						Computed:    true,
					},
					"base_theme_id": {
						// Property: BaseThemeId
						Description: "<p>The Amazon QuickSight-defined ID of the theme that a custom theme inherits from. All\n            themes initially inherit from a default QuickSight theme.</p>",
						Type:        types.StringType,
						Computed:    true,
					},
					"configuration": {
						// Property: Configuration
						Description: "<p>The theme configuration. This configuration contains all of the display properties for\n            a theme.</p>",
						Attributes: tfsdk.SingleNestedAttributes(
							map[string]tfsdk.Attribute{
								"data_color_palette": {
									// Property: DataColorPalette
									Description: "<p>The theme colors that are used for data colors in charts. The colors description is a\n            hexadecimal color code that consists of six alphanumerical characters, prefixed with\n                <code>#</code>, for example #37BFF5. </p>",
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"colors": {
												// Property: Colors
												Description: "<p>The hexadecimal codes for the colors.</p>",
												Type:        types.ListType{ElemType: types.StringType},
												Computed:    true,
											},
											"empty_fill_color": {
												// Property: EmptyFillColor
												Description: "<p>The hexadecimal code of a color that applies to charts where a lack of data is\n            highlighted.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"min_max_gradient": {
												// Property: MinMaxGradient
												Description: "<p>The minimum and maximum hexadecimal codes that describe a color gradient. </p>",
												Type:        types.ListType{ElemType: types.StringType},
												Computed:    true,
											},
										},
									),
									Computed: true,
								},
								"sheet": {
									// Property: Sheet
									Description: "<p>The theme display options for sheets. </p>",
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"tile": {
												// Property: Tile
												Description: "<p>Display options related to tiles on a sheet.</p>",
												Attributes: tfsdk.SingleNestedAttributes(
													map[string]tfsdk.Attribute{
														"border": {
															// Property: Border
															Description: "<p>The display options for tile borders for visuals.</p>",
															Attributes: tfsdk.SingleNestedAttributes(
																map[string]tfsdk.Attribute{
																	"show": {
																		// Property: Show
																		Description: "<p>The option to enable display of borders for visuals.</p>",
																		Type:        types.BoolType,
																		Computed:    true,
																	},
																},
															),
															Computed: true,
														},
													},
												),
												Computed: true,
											},
											"tile_layout": {
												// Property: TileLayout
												Description: "<p>The display options for the layout of tiles on a sheet.</p>",
												Attributes: tfsdk.SingleNestedAttributes(
													map[string]tfsdk.Attribute{
														"gutter": {
															// Property: Gutter
															Description: "<p>The display options for gutter spacing between tiles on a sheet.</p>",
															Attributes: tfsdk.SingleNestedAttributes(
																map[string]tfsdk.Attribute{
																	"show": {
																		// Property: Show
																		Description: "<p>This Boolean value controls whether to display a gutter space between sheet tiles.\n        </p>",
																		Type:        types.BoolType,
																		Computed:    true,
																	},
																},
															),
															Computed: true,
														},
														"margin": {
															// Property: Margin
															Description: "<p>The display options for margins around the outside edge of sheets.</p>",
															Attributes: tfsdk.SingleNestedAttributes(
																map[string]tfsdk.Attribute{
																	"show": {
																		// Property: Show
																		Description: "<p>This Boolean value controls whether to display sheet margins.</p>",
																		Type:        types.BoolType,
																		Computed:    true,
																	},
																},
															),
															Computed: true,
														},
													},
												),
												Computed: true,
											},
										},
									),
									Computed: true,
								},
								"typography": {
									// Property: Typography
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"font_families": {
												// Property: FontFamilies
												Attributes: tfsdk.ListNestedAttributes(
													map[string]tfsdk.Attribute{
														"font_family": {
															// Property: FontFamily
															Type:     types.StringType,
															Computed: true,
														},
													},
													tfsdk.ListNestedAttributesOptions{},
												),
												Computed: true,
											},
										},
									),
									Computed: true,
								},
								"ui_color_palette": {
									// Property: UIColorPalette
									Description: "<p>The theme colors that apply to UI and to charts, excluding data colors. The colors\n            description is a hexadecimal color code that consists of six alphanumerical characters,\n            prefixed with <code>#</code>, for example #37BFF5. For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html\">Using Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User\n                Guide.</i>\n        </p>",
									Attributes: tfsdk.SingleNestedAttributes(
										map[string]tfsdk.Attribute{
											"accent": {
												// Property: Accent
												Description: "<p>This color is that applies to selected states and buttons.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"accent_foreground": {
												// Property: AccentForeground
												Description: "<p>The foreground color that applies to any text or other elements that appear over the\n            accent color.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"danger": {
												// Property: Danger
												Description: "<p>The color that applies to error messages.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"danger_foreground": {
												// Property: DangerForeground
												Description: "<p>The foreground color that applies to any text or other elements that appear over the\n            error color.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"dimension": {
												// Property: Dimension
												Description: "<p>The color that applies to the names of fields that are identified as\n            dimensions.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"dimension_foreground": {
												// Property: DimensionForeground
												Description: "<p>The foreground color that applies to any text or other elements that appear over the\n            dimension color.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"measure": {
												// Property: Measure
												Description: "<p>The color that applies to the names of fields that are identified as measures.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"measure_foreground": {
												// Property: MeasureForeground
												Description: "<p>The foreground color that applies to any text or other elements that appear over the\n            measure color.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"primary_background": {
												// Property: PrimaryBackground
												Description: "<p>The background color that applies to visuals and other high emphasis UI.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"primary_foreground": {
												// Property: PrimaryForeground
												Description: "<p>The color of text and other foreground elements that appear over the primary\n            background regions, such as grid lines, borders, table banding, icons, and so on.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"secondary_background": {
												// Property: SecondaryBackground
												Description: "<p>The background color that applies to the sheet background and sheet controls.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"secondary_foreground": {
												// Property: SecondaryForeground
												Description: "<p>The foreground color that applies to any sheet title, sheet control text, or UI that\n            appears over the secondary background.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"success": {
												// Property: Success
												Description: "<p>The color that applies to success messages, for example the check mark for a\n            successful download.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"success_foreground": {
												// Property: SuccessForeground
												Description: "<p>The foreground color that applies to any text or other elements that appear over the\n            success color.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"warning": {
												// Property: Warning
												Description: "<p>This color that applies to warning and informational messages.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
											"warning_foreground": {
												// Property: WarningForeground
												Description: "<p>The foreground color that applies to any text or other elements that appear over the\n            warning color.</p>",
												Type:        types.StringType,
												Computed:    true,
											},
										},
									),
									Computed: true,
								},
							},
						),
						Computed: true,
					},
					"created_time": {
						// Property: CreatedTime
						Description: "<p>The date and time that this theme version was created.</p>",
						Type:        types.StringType,
						Computed:    true,
					},
					"description": {
						// Property: Description
						Description: "<p>The description of the theme.</p>",
						Type:        types.StringType,
						Computed:    true,
					},
					"errors": {
						// Property: Errors
						Description: "<p>Errors associated with the theme.</p>",
						Attributes: tfsdk.ListNestedAttributes(
							map[string]tfsdk.Attribute{
								"message": {
									// Property: Message
									Description: "<p>The error message.</p>",
									Type:        types.StringType,
									Computed:    true,
								},
								"type": {
									// Property: Type
									Type:     types.StringType,
									Computed: true,
								},
							},
							tfsdk.ListNestedAttributesOptions{},
						),
						Computed: true,
					},
					"status": {
						// Property: Status
						Type:     types.StringType,
						Computed: true,
					},
					"version_number": {
						// Property: VersionNumber
						Description: "<p>The version number of the theme.</p>",
						Type:        types.NumberType,
						Computed:    true,
					},
				},
			),
			Computed: true,
		},
		"version_description": {
			// Property: VersionDescription
			// CloudFormation resource type schema:
			// {
			//   "description": "\u003cp\u003eA description of the first version of the theme that you're creating. Every time\n\t\t\t\t\u003ccode\u003eUpdateTheme\u003c/code\u003e is called, a new version is created. Each version of the\n\t\t\ttheme has a description of the version in the \u003ccode\u003eVersionDescription\u003c/code\u003e\n\t\t\tfield.\u003c/p\u003e",
			//   "maxLength": 512,
			//   "minLength": 1,
			//   "type": "string"
			// }
			Description: "<p>A description of the first version of the theme that you're creating. Every time\n\t\t\t\t<code>UpdateTheme</code> is called, a new version is created. Each version of the\n\t\t\ttheme has a description of the version in the <code>VersionDescription</code>\n\t\t\tfield.</p>",
			Type:        types.StringType,
			Computed:    true,
		},
	}

	attributes["id"] = tfsdk.Attribute{
		Description: "Uniquely identifies the resource.",
		Type:        types.StringType,
		Required:    true,
	}

	schema := tfsdk.Schema{
		Description: "Data Source schema for AWS::QuickSight::Theme",
		Version:     1,
		Attributes:  attributes,
	}

	var opts DataSourceTypeOptions

	opts = opts.WithCloudFormationTypeName("AWS::QuickSight::Theme").WithTerraformTypeName("awscc_quicksight_theme")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"accent":               "Accent",
		"accent_foreground":    "AccentForeground",
		"actions":              "Actions",
		"arn":                  "Arn",
		"aws_account_id":       "AwsAccountId",
		"base_theme_id":        "BaseThemeId",
		"border":               "Border",
		"colors":               "Colors",
		"configuration":        "Configuration",
		"created_time":         "CreatedTime",
		"danger":               "Danger",
		"danger_foreground":    "DangerForeground",
		"data_color_palette":   "DataColorPalette",
		"description":          "Description",
		"dimension":            "Dimension",
		"dimension_foreground": "DimensionForeground",
		"empty_fill_color":     "EmptyFillColor",
		"errors":               "Errors",
		"font_families":        "FontFamilies",
		"font_family":          "FontFamily",
		"gutter":               "Gutter",
		"key":                  "Key",
		"last_updated_time":    "LastUpdatedTime",
		"margin":               "Margin",
		"measure":              "Measure",
		"measure_foreground":   "MeasureForeground",
		"message":              "Message",
		"min_max_gradient":     "MinMaxGradient",
		"name":                 "Name",
		"permissions":          "Permissions",
		"primary_background":   "PrimaryBackground",
		"primary_foreground":   "PrimaryForeground",
		"principal":            "Principal",
		"secondary_background": "SecondaryBackground",
		"secondary_foreground": "SecondaryForeground",
		"sheet":                "Sheet",
		"show":                 "Show",
		"status":               "Status",
		"success":              "Success",
		"success_foreground":   "SuccessForeground",
		"tags":                 "Tags",
		"theme_id":             "ThemeId",
		"tile":                 "Tile",
		"tile_layout":          "TileLayout",
		"type":                 "Type",
		"typography":           "Typography",
		"ui_color_palette":     "UIColorPalette",
		"value":                "Value",
		"version":              "Version",
		"version_description":  "VersionDescription",
		"version_number":       "VersionNumber",
		"warning":              "Warning",
		"warning_foreground":   "WarningForeground",
	})

	singularDataSourceType, err := NewSingularDataSourceType(ctx, opts...)

	if err != nil {
		return nil, err
	}

	tflog.Debug(ctx, "Generated schema", "tfTypeName", "awscc_quicksight_theme", "schema", hclog.Fmt("%v", schema))

	return singularDataSourceType, nil
}
