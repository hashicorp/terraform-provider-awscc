// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package quicksight

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_quicksight_topic", topicDataSource)
}

// topicDataSource returns the Terraform awscc_quicksight_topic data source.
// This Terraform data source corresponds to the CloudFormation AWS::QuickSight::Topic resource.
func topicDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: Arn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "type": "string"
		//	}
		"arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: AwsAccountId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "maxLength": 12,
		//	  "minLength": 12,
		//	  "pattern": "^[0-9]{12}$",
		//	  "type": "string"
		//	}
		"aws_account_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: ConfigOptions
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Model for configuration of a Topic",
		//	  "properties": {
		//	    "QBusinessInsightsEnabled": {
		//	      "type": "boolean"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"config_options": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: QBusinessInsightsEnabled
				"q_business_insights_enabled": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Computed: true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Model for configuration of a Topic",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CustomInstructions
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "properties": {
		//	    "CustomInstructionsString": {
		//	      "maxLength": 5000,
		//	      "minLength": 0,
		//	      "type": "string"
		//	    }
		//	  },
		//	  "required": [
		//	    "CustomInstructionsString"
		//	  ],
		//	  "type": "object"
		//	}
		"custom_instructions": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: CustomInstructionsString
				"custom_instructions_string": schema.StringAttribute{ /*START ATTRIBUTE*/
					Computed: true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: DataSets
		// CloudFormation resource type schema:
		//
		//	{
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "properties": {
		//	      "CalculatedFields": {
		//	        "items": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "Aggregation": {
		//	              "enum": [
		//	                "SUM",
		//	                "MAX",
		//	                "MIN",
		//	                "COUNT",
		//	                "DISTINCT_COUNT",
		//	                "AVERAGE",
		//	                "MEDIAN",
		//	                "STDEV",
		//	                "STDEVP",
		//	                "VAR",
		//	                "VARP"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "AllowedAggregations": {
		//	              "items": {
		//	                "enum": [
		//	                  "COUNT",
		//	                  "DISTINCT_COUNT",
		//	                  "MIN",
		//	                  "MAX",
		//	                  "MEDIAN",
		//	                  "SUM",
		//	                  "AVERAGE",
		//	                  "STDEV",
		//	                  "STDEVP",
		//	                  "VAR",
		//	                  "VARP",
		//	                  "PERCENTILE"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "type": "array"
		//	            },
		//	            "CalculatedFieldDescription": {
		//	              "maxLength": 256,
		//	              "minLength": 0,
		//	              "type": "string"
		//	            },
		//	            "CalculatedFieldName": {
		//	              "maxLength": 256,
		//	              "minLength": 0,
		//	              "type": "string"
		//	            },
		//	            "CalculatedFieldSynonyms": {
		//	              "items": {
		//	                "maxLength": 256,
		//	                "minLength": 0,
		//	                "type": "string"
		//	              },
		//	              "type": "array"
		//	            },
		//	            "CellValueSynonyms": {
		//	              "items": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "CellValue": {
		//	                    "maxLength": 256,
		//	                    "minLength": 0,
		//	                    "type": "string"
		//	                  },
		//	                  "Synonyms": {
		//	                    "items": {
		//	                      "type": "string"
		//	                    },
		//	                    "type": "array"
		//	                  }
		//	                },
		//	                "type": "object"
		//	              },
		//	              "type": "array"
		//	            },
		//	            "ColumnDataRole": {
		//	              "enum": [
		//	                "DIMENSION",
		//	                "MEASURE"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "ComparativeOrder": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "SpecifedOrder": {
		//	                  "items": {
		//	                    "type": "string"
		//	                  },
		//	                  "type": "array"
		//	                },
		//	                "TreatUndefinedSpecifiedValues": {
		//	                  "enum": [
		//	                    "LEAST",
		//	                    "MOST"
		//	                  ],
		//	                  "type": "string"
		//	                },
		//	                "UseOrdering": {
		//	                  "enum": [
		//	                    "GREATER_IS_BETTER",
		//	                    "LESSER_IS_BETTER",
		//	                    "SPECIFIED"
		//	                  ],
		//	                  "type": "string"
		//	                }
		//	              },
		//	              "type": "object"
		//	            },
		//	            "DefaultFormatting": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "DisplayFormat": {
		//	                  "enum": [
		//	                    "AUTO",
		//	                    "PERCENT",
		//	                    "CURRENCY",
		//	                    "NUMBER",
		//	                    "DATE",
		//	                    "STRING"
		//	                  ],
		//	                  "type": "string"
		//	                },
		//	                "DisplayFormatOptions": {
		//	                  "additionalProperties": false,
		//	                  "properties": {
		//	                    "BlankCellFormat": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    },
		//	                    "CurrencySymbol": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    },
		//	                    "DateFormat": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    },
		//	                    "DecimalSeparator": {
		//	                      "enum": [
		//	                        "COMMA",
		//	                        "DOT"
		//	                      ],
		//	                      "type": "string"
		//	                    },
		//	                    "FractionDigits": {
		//	                      "default": 0,
		//	                      "type": "number"
		//	                    },
		//	                    "GroupingSeparator": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    },
		//	                    "NegativeFormat": {
		//	                      "additionalProperties": false,
		//	                      "properties": {
		//	                        "Prefix": {
		//	                          "maxLength": 256,
		//	                          "minLength": 0,
		//	                          "type": "string"
		//	                        },
		//	                        "Suffix": {
		//	                          "maxLength": 256,
		//	                          "minLength": 0,
		//	                          "type": "string"
		//	                        }
		//	                      },
		//	                      "type": "object"
		//	                    },
		//	                    "Prefix": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    },
		//	                    "Suffix": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    },
		//	                    "UnitScaler": {
		//	                      "enum": [
		//	                        "NONE",
		//	                        "AUTO",
		//	                        "THOUSANDS",
		//	                        "MILLIONS",
		//	                        "BILLIONS",
		//	                        "TRILLIONS",
		//	                        "LAKHS",
		//	                        "CRORES"
		//	                      ],
		//	                      "type": "string"
		//	                    },
		//	                    "UseBlankCellFormat": {
		//	                      "default": false,
		//	                      "type": "boolean"
		//	                    },
		//	                    "UseGrouping": {
		//	                      "default": false,
		//	                      "type": "boolean"
		//	                    }
		//	                  },
		//	                  "type": "object"
		//	                }
		//	              },
		//	              "type": "object"
		//	            },
		//	            "DisableIndexing": {
		//	              "type": "boolean"
		//	            },
		//	            "Expression": {
		//	              "maxLength": 4096,
		//	              "minLength": 1,
		//	              "type": "string"
		//	            },
		//	            "IsIncludedInTopic": {
		//	              "default": false,
		//	              "type": "boolean"
		//	            },
		//	            "NeverAggregateInFilter": {
		//	              "default": false,
		//	              "type": "boolean"
		//	            },
		//	            "NonAdditive": {
		//	              "default": false,
		//	              "type": "boolean"
		//	            },
		//	            "NotAllowedAggregations": {
		//	              "items": {
		//	                "enum": [
		//	                  "COUNT",
		//	                  "DISTINCT_COUNT",
		//	                  "MIN",
		//	                  "MAX",
		//	                  "MEDIAN",
		//	                  "SUM",
		//	                  "AVERAGE",
		//	                  "STDEV",
		//	                  "STDEVP",
		//	                  "VAR",
		//	                  "VARP",
		//	                  "PERCENTILE"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "type": "array"
		//	            },
		//	            "SemanticType": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "FalseyCellValue": {
		//	                  "type": "string"
		//	                },
		//	                "FalseyCellValueSynonyms": {
		//	                  "items": {
		//	                    "type": "string"
		//	                  },
		//	                  "type": "array"
		//	                },
		//	                "SubTypeName": {
		//	                  "maxLength": 256,
		//	                  "minLength": 0,
		//	                  "type": "string"
		//	                },
		//	                "TruthyCellValue": {
		//	                  "type": "string"
		//	                },
		//	                "TruthyCellValueSynonyms": {
		//	                  "items": {
		//	                    "type": "string"
		//	                  },
		//	                  "type": "array"
		//	                },
		//	                "TypeName": {
		//	                  "maxLength": 256,
		//	                  "minLength": 0,
		//	                  "type": "string"
		//	                },
		//	                "TypeParameters": {
		//	                  "additionalProperties": false,
		//	                  "patternProperties": {
		//	                    "": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    }
		//	                  },
		//	                  "type": "object"
		//	                }
		//	              },
		//	              "type": "object"
		//	            },
		//	            "TimeGranularity": {
		//	              "enum": [
		//	                "SECOND",
		//	                "MINUTE",
		//	                "HOUR",
		//	                "DAY",
		//	                "WEEK",
		//	                "MONTH",
		//	                "QUARTER",
		//	                "YEAR"
		//	              ],
		//	              "type": "string"
		//	            }
		//	          },
		//	          "required": [
		//	            "CalculatedFieldName",
		//	            "Expression"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "type": "array"
		//	      },
		//	      "Columns": {
		//	        "items": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "Aggregation": {
		//	              "enum": [
		//	                "SUM",
		//	                "MAX",
		//	                "MIN",
		//	                "COUNT",
		//	                "DISTINCT_COUNT",
		//	                "AVERAGE",
		//	                "MEDIAN",
		//	                "STDEV",
		//	                "STDEVP",
		//	                "VAR",
		//	                "VARP"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "AllowedAggregations": {
		//	              "items": {
		//	                "enum": [
		//	                  "COUNT",
		//	                  "DISTINCT_COUNT",
		//	                  "MIN",
		//	                  "MAX",
		//	                  "MEDIAN",
		//	                  "SUM",
		//	                  "AVERAGE",
		//	                  "STDEV",
		//	                  "STDEVP",
		//	                  "VAR",
		//	                  "VARP",
		//	                  "PERCENTILE"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "type": "array"
		//	            },
		//	            "CellValueSynonyms": {
		//	              "items": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "CellValue": {
		//	                    "maxLength": 256,
		//	                    "minLength": 0,
		//	                    "type": "string"
		//	                  },
		//	                  "Synonyms": {
		//	                    "items": {
		//	                      "type": "string"
		//	                    },
		//	                    "type": "array"
		//	                  }
		//	                },
		//	                "type": "object"
		//	              },
		//	              "type": "array"
		//	            },
		//	            "ColumnDataRole": {
		//	              "enum": [
		//	                "DIMENSION",
		//	                "MEASURE"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "ColumnDescription": {
		//	              "maxLength": 256,
		//	              "minLength": 0,
		//	              "type": "string"
		//	            },
		//	            "ColumnFriendlyName": {
		//	              "maxLength": 256,
		//	              "minLength": 0,
		//	              "type": "string"
		//	            },
		//	            "ColumnName": {
		//	              "maxLength": 256,
		//	              "minLength": 0,
		//	              "type": "string"
		//	            },
		//	            "ColumnSynonyms": {
		//	              "items": {
		//	                "maxLength": 256,
		//	                "minLength": 0,
		//	                "type": "string"
		//	              },
		//	              "type": "array"
		//	            },
		//	            "ComparativeOrder": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "SpecifedOrder": {
		//	                  "items": {
		//	                    "type": "string"
		//	                  },
		//	                  "type": "array"
		//	                },
		//	                "TreatUndefinedSpecifiedValues": {
		//	                  "enum": [
		//	                    "LEAST",
		//	                    "MOST"
		//	                  ],
		//	                  "type": "string"
		//	                },
		//	                "UseOrdering": {
		//	                  "enum": [
		//	                    "GREATER_IS_BETTER",
		//	                    "LESSER_IS_BETTER",
		//	                    "SPECIFIED"
		//	                  ],
		//	                  "type": "string"
		//	                }
		//	              },
		//	              "type": "object"
		//	            },
		//	            "DefaultFormatting": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "DisplayFormat": {
		//	                  "enum": [
		//	                    "AUTO",
		//	                    "PERCENT",
		//	                    "CURRENCY",
		//	                    "NUMBER",
		//	                    "DATE",
		//	                    "STRING"
		//	                  ],
		//	                  "type": "string"
		//	                },
		//	                "DisplayFormatOptions": {
		//	                  "additionalProperties": false,
		//	                  "properties": {
		//	                    "BlankCellFormat": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    },
		//	                    "CurrencySymbol": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    },
		//	                    "DateFormat": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    },
		//	                    "DecimalSeparator": {
		//	                      "enum": [
		//	                        "COMMA",
		//	                        "DOT"
		//	                      ],
		//	                      "type": "string"
		//	                    },
		//	                    "FractionDigits": {
		//	                      "default": 0,
		//	                      "type": "number"
		//	                    },
		//	                    "GroupingSeparator": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    },
		//	                    "NegativeFormat": {
		//	                      "additionalProperties": false,
		//	                      "properties": {
		//	                        "Prefix": {
		//	                          "maxLength": 256,
		//	                          "minLength": 0,
		//	                          "type": "string"
		//	                        },
		//	                        "Suffix": {
		//	                          "maxLength": 256,
		//	                          "minLength": 0,
		//	                          "type": "string"
		//	                        }
		//	                      },
		//	                      "type": "object"
		//	                    },
		//	                    "Prefix": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    },
		//	                    "Suffix": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    },
		//	                    "UnitScaler": {
		//	                      "enum": [
		//	                        "NONE",
		//	                        "AUTO",
		//	                        "THOUSANDS",
		//	                        "MILLIONS",
		//	                        "BILLIONS",
		//	                        "TRILLIONS",
		//	                        "LAKHS",
		//	                        "CRORES"
		//	                      ],
		//	                      "type": "string"
		//	                    },
		//	                    "UseBlankCellFormat": {
		//	                      "default": false,
		//	                      "type": "boolean"
		//	                    },
		//	                    "UseGrouping": {
		//	                      "default": false,
		//	                      "type": "boolean"
		//	                    }
		//	                  },
		//	                  "type": "object"
		//	                }
		//	              },
		//	              "type": "object"
		//	            },
		//	            "DisableIndexing": {
		//	              "type": "boolean"
		//	            },
		//	            "IsIncludedInTopic": {
		//	              "default": false,
		//	              "type": "boolean"
		//	            },
		//	            "NeverAggregateInFilter": {
		//	              "default": false,
		//	              "type": "boolean"
		//	            },
		//	            "NonAdditive": {
		//	              "default": false,
		//	              "type": "boolean"
		//	            },
		//	            "NotAllowedAggregations": {
		//	              "items": {
		//	                "enum": [
		//	                  "COUNT",
		//	                  "DISTINCT_COUNT",
		//	                  "MIN",
		//	                  "MAX",
		//	                  "MEDIAN",
		//	                  "SUM",
		//	                  "AVERAGE",
		//	                  "STDEV",
		//	                  "STDEVP",
		//	                  "VAR",
		//	                  "VARP",
		//	                  "PERCENTILE"
		//	                ],
		//	                "type": "string"
		//	              },
		//	              "type": "array"
		//	            },
		//	            "SemanticType": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "FalseyCellValue": {
		//	                  "type": "string"
		//	                },
		//	                "FalseyCellValueSynonyms": {
		//	                  "items": {
		//	                    "type": "string"
		//	                  },
		//	                  "type": "array"
		//	                },
		//	                "SubTypeName": {
		//	                  "maxLength": 256,
		//	                  "minLength": 0,
		//	                  "type": "string"
		//	                },
		//	                "TruthyCellValue": {
		//	                  "type": "string"
		//	                },
		//	                "TruthyCellValueSynonyms": {
		//	                  "items": {
		//	                    "type": "string"
		//	                  },
		//	                  "type": "array"
		//	                },
		//	                "TypeName": {
		//	                  "maxLength": 256,
		//	                  "minLength": 0,
		//	                  "type": "string"
		//	                },
		//	                "TypeParameters": {
		//	                  "additionalProperties": false,
		//	                  "patternProperties": {
		//	                    "": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    }
		//	                  },
		//	                  "type": "object"
		//	                }
		//	              },
		//	              "type": "object"
		//	            },
		//	            "TimeGranularity": {
		//	              "enum": [
		//	                "SECOND",
		//	                "MINUTE",
		//	                "HOUR",
		//	                "DAY",
		//	                "WEEK",
		//	                "MONTH",
		//	                "QUARTER",
		//	                "YEAR"
		//	              ],
		//	              "type": "string"
		//	            }
		//	          },
		//	          "required": [
		//	            "ColumnName"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "type": "array"
		//	      },
		//	      "DataAggregation": {
		//	        "additionalProperties": false,
		//	        "properties": {
		//	          "DatasetRowDateGranularity": {
		//	            "enum": [
		//	              "SECOND",
		//	              "MINUTE",
		//	              "HOUR",
		//	              "DAY",
		//	              "WEEK",
		//	              "MONTH",
		//	              "QUARTER",
		//	              "YEAR"
		//	            ],
		//	            "type": "string"
		//	          },
		//	          "DefaultDateColumnName": {
		//	            "maxLength": 256,
		//	            "minLength": 0,
		//	            "type": "string"
		//	          }
		//	        },
		//	        "type": "object"
		//	      },
		//	      "DatasetArn": {
		//	        "type": "string"
		//	      },
		//	      "DatasetDescription": {
		//	        "maxLength": 256,
		//	        "minLength": 0,
		//	        "type": "string"
		//	      },
		//	      "DatasetName": {
		//	        "maxLength": 256,
		//	        "minLength": 0,
		//	        "type": "string"
		//	      },
		//	      "Filters": {
		//	        "items": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "CategoryFilter": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "CategoryFilterFunction": {
		//	                  "enum": [
		//	                    "EXACT",
		//	                    "CONTAINS"
		//	                  ],
		//	                  "type": "string"
		//	                },
		//	                "CategoryFilterType": {
		//	                  "enum": [
		//	                    "CUSTOM_FILTER",
		//	                    "CUSTOM_FILTER_LIST",
		//	                    "FILTER_LIST"
		//	                  ],
		//	                  "type": "string"
		//	                },
		//	                "Constant": {
		//	                  "additionalProperties": false,
		//	                  "properties": {
		//	                    "CollectiveConstant": {
		//	                      "additionalProperties": false,
		//	                      "properties": {
		//	                        "ValueList": {
		//	                          "items": {
		//	                            "type": "string"
		//	                          },
		//	                          "type": "array"
		//	                        }
		//	                      },
		//	                      "type": "object"
		//	                    },
		//	                    "ConstantType": {
		//	                      "enum": [
		//	                        "SINGULAR",
		//	                        "RANGE",
		//	                        "COLLECTIVE"
		//	                      ],
		//	                      "type": "string"
		//	                    },
		//	                    "SingularConstant": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    }
		//	                  },
		//	                  "type": "object"
		//	                },
		//	                "Inverse": {
		//	                  "default": false,
		//	                  "type": "boolean"
		//	                }
		//	              },
		//	              "type": "object"
		//	            },
		//	            "DateRangeFilter": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "Constant": {
		//	                  "additionalProperties": false,
		//	                  "properties": {
		//	                    "ConstantType": {
		//	                      "enum": [
		//	                        "SINGULAR",
		//	                        "RANGE",
		//	                        "COLLECTIVE"
		//	                      ],
		//	                      "type": "string"
		//	                    },
		//	                    "RangeConstant": {
		//	                      "additionalProperties": false,
		//	                      "properties": {
		//	                        "Maximum": {
		//	                          "maxLength": 256,
		//	                          "minLength": 0,
		//	                          "type": "string"
		//	                        },
		//	                        "Minimum": {
		//	                          "maxLength": 256,
		//	                          "minLength": 0,
		//	                          "type": "string"
		//	                        }
		//	                      },
		//	                      "type": "object"
		//	                    }
		//	                  },
		//	                  "type": "object"
		//	                },
		//	                "Inclusive": {
		//	                  "default": false,
		//	                  "type": "boolean"
		//	                }
		//	              },
		//	              "type": "object"
		//	            },
		//	            "FilterClass": {
		//	              "enum": [
		//	                "ENFORCED_VALUE_FILTER",
		//	                "CONDITIONAL_VALUE_FILTER",
		//	                "NAMED_VALUE_FILTER"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "FilterDescription": {
		//	              "maxLength": 256,
		//	              "minLength": 0,
		//	              "type": "string"
		//	            },
		//	            "FilterName": {
		//	              "maxLength": 256,
		//	              "minLength": 0,
		//	              "type": "string"
		//	            },
		//	            "FilterSynonyms": {
		//	              "items": {
		//	                "maxLength": 256,
		//	                "minLength": 0,
		//	                "type": "string"
		//	              },
		//	              "type": "array"
		//	            },
		//	            "FilterType": {
		//	              "enum": [
		//	                "CATEGORY_FILTER",
		//	                "NUMERIC_EQUALITY_FILTER",
		//	                "NUMERIC_RANGE_FILTER",
		//	                "DATE_RANGE_FILTER",
		//	                "RELATIVE_DATE_FILTER"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "NumericEqualityFilter": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "Aggregation": {
		//	                  "enum": [
		//	                    "NO_AGGREGATION",
		//	                    "SUM",
		//	                    "AVERAGE",
		//	                    "COUNT",
		//	                    "DISTINCT_COUNT",
		//	                    "MAX",
		//	                    "MEDIAN",
		//	                    "MIN",
		//	                    "STDEV",
		//	                    "STDEVP",
		//	                    "VAR",
		//	                    "VARP"
		//	                  ],
		//	                  "type": "string"
		//	                },
		//	                "Constant": {
		//	                  "additionalProperties": false,
		//	                  "properties": {
		//	                    "ConstantType": {
		//	                      "enum": [
		//	                        "SINGULAR",
		//	                        "RANGE",
		//	                        "COLLECTIVE"
		//	                      ],
		//	                      "type": "string"
		//	                    },
		//	                    "SingularConstant": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    }
		//	                  },
		//	                  "type": "object"
		//	                }
		//	              },
		//	              "type": "object"
		//	            },
		//	            "NumericRangeFilter": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "Aggregation": {
		//	                  "enum": [
		//	                    "NO_AGGREGATION",
		//	                    "SUM",
		//	                    "AVERAGE",
		//	                    "COUNT",
		//	                    "DISTINCT_COUNT",
		//	                    "MAX",
		//	                    "MEDIAN",
		//	                    "MIN",
		//	                    "STDEV",
		//	                    "STDEVP",
		//	                    "VAR",
		//	                    "VARP"
		//	                  ],
		//	                  "type": "string"
		//	                },
		//	                "Constant": {
		//	                  "additionalProperties": false,
		//	                  "properties": {
		//	                    "ConstantType": {
		//	                      "enum": [
		//	                        "SINGULAR",
		//	                        "RANGE",
		//	                        "COLLECTIVE"
		//	                      ],
		//	                      "type": "string"
		//	                    },
		//	                    "RangeConstant": {
		//	                      "additionalProperties": false,
		//	                      "properties": {
		//	                        "Maximum": {
		//	                          "maxLength": 256,
		//	                          "minLength": 0,
		//	                          "type": "string"
		//	                        },
		//	                        "Minimum": {
		//	                          "maxLength": 256,
		//	                          "minLength": 0,
		//	                          "type": "string"
		//	                        }
		//	                      },
		//	                      "type": "object"
		//	                    }
		//	                  },
		//	                  "type": "object"
		//	                },
		//	                "Inclusive": {
		//	                  "default": false,
		//	                  "type": "boolean"
		//	                }
		//	              },
		//	              "type": "object"
		//	            },
		//	            "OperandFieldName": {
		//	              "maxLength": 256,
		//	              "minLength": 0,
		//	              "type": "string"
		//	            },
		//	            "RelativeDateFilter": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "Constant": {
		//	                  "additionalProperties": false,
		//	                  "properties": {
		//	                    "ConstantType": {
		//	                      "enum": [
		//	                        "SINGULAR",
		//	                        "RANGE",
		//	                        "COLLECTIVE"
		//	                      ],
		//	                      "type": "string"
		//	                    },
		//	                    "SingularConstant": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    }
		//	                  },
		//	                  "type": "object"
		//	                },
		//	                "RelativeDateFilterFunction": {
		//	                  "enum": [
		//	                    "PREVIOUS",
		//	                    "THIS",
		//	                    "LAST",
		//	                    "NEXT",
		//	                    "NOW"
		//	                  ],
		//	                  "type": "string"
		//	                },
		//	                "TimeGranularity": {
		//	                  "enum": [
		//	                    "SECOND",
		//	                    "MINUTE",
		//	                    "HOUR",
		//	                    "DAY",
		//	                    "WEEK",
		//	                    "MONTH",
		//	                    "QUARTER",
		//	                    "YEAR"
		//	                  ],
		//	                  "type": "string"
		//	                }
		//	              },
		//	              "type": "object"
		//	            }
		//	          },
		//	          "required": [
		//	            "FilterName",
		//	            "OperandFieldName"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "type": "array"
		//	      },
		//	      "NamedEntities": {
		//	        "items": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "Definition": {
		//	              "items": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "FieldName": {
		//	                    "maxLength": 256,
		//	                    "minLength": 0,
		//	                    "type": "string"
		//	                  },
		//	                  "Metric": {
		//	                    "additionalProperties": false,
		//	                    "properties": {
		//	                      "Aggregation": {
		//	                        "enum": [
		//	                          "SUM",
		//	                          "MIN",
		//	                          "MAX",
		//	                          "COUNT",
		//	                          "AVERAGE",
		//	                          "DISTINCT_COUNT",
		//	                          "STDEV",
		//	                          "STDEVP",
		//	                          "VAR",
		//	                          "VARP",
		//	                          "PERCENTILE",
		//	                          "MEDIAN",
		//	                          "CUSTOM"
		//	                        ],
		//	                        "type": "string"
		//	                      },
		//	                      "AggregationFunctionParameters": {
		//	                        "additionalProperties": false,
		//	                        "patternProperties": {
		//	                          "": {
		//	                            "maxLength": 256,
		//	                            "minLength": 0,
		//	                            "type": "string"
		//	                          }
		//	                        },
		//	                        "type": "object"
		//	                      }
		//	                    },
		//	                    "type": "object"
		//	                  },
		//	                  "PropertyName": {
		//	                    "maxLength": 256,
		//	                    "minLength": 0,
		//	                    "type": "string"
		//	                  },
		//	                  "PropertyRole": {
		//	                    "enum": [
		//	                      "PRIMARY",
		//	                      "ID"
		//	                    ],
		//	                    "type": "string"
		//	                  },
		//	                  "PropertyUsage": {
		//	                    "enum": [
		//	                      "INHERIT",
		//	                      "DIMENSION",
		//	                      "MEASURE"
		//	                    ],
		//	                    "type": "string"
		//	                  }
		//	                },
		//	                "type": "object"
		//	              },
		//	              "type": "array"
		//	            },
		//	            "EntityDescription": {
		//	              "maxLength": 256,
		//	              "minLength": 0,
		//	              "type": "string"
		//	            },
		//	            "EntityName": {
		//	              "maxLength": 256,
		//	              "minLength": 0,
		//	              "type": "string"
		//	            },
		//	            "EntitySynonyms": {
		//	              "items": {
		//	                "maxLength": 256,
		//	                "minLength": 0,
		//	                "type": "string"
		//	              },
		//	              "type": "array"
		//	            },
		//	            "SemanticEntityType": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "SubTypeName": {
		//	                  "maxLength": 256,
		//	                  "minLength": 0,
		//	                  "type": "string"
		//	                },
		//	                "TypeName": {
		//	                  "maxLength": 256,
		//	                  "minLength": 0,
		//	                  "type": "string"
		//	                },
		//	                "TypeParameters": {
		//	                  "additionalProperties": false,
		//	                  "patternProperties": {
		//	                    "": {
		//	                      "maxLength": 256,
		//	                      "minLength": 0,
		//	                      "type": "string"
		//	                    }
		//	                  },
		//	                  "type": "object"
		//	                }
		//	              },
		//	              "type": "object"
		//	            }
		//	          },
		//	          "required": [
		//	            "EntityName"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "type": "array"
		//	      }
		//	    },
		//	    "required": [
		//	      "DatasetArn"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array"
		//	}
		"data_sets": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: CalculatedFields
					"calculated_fields": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
						NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: Aggregation
								"aggregation": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: AllowedAggregations
								"allowed_aggregations": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: CalculatedFieldDescription
								"calculated_field_description": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: CalculatedFieldName
								"calculated_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: CalculatedFieldSynonyms
								"calculated_field_synonyms": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: CellValueSynonyms
								"cell_value_synonyms": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
									NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: CellValue
											"cell_value": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: Synonyms
											"synonyms": schema.ListAttribute{ /*START ATTRIBUTE*/
												ElementType: types.StringType,
												Computed:    true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
									}, /*END NESTED OBJECT*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: ColumnDataRole
								"column_data_role": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: ComparativeOrder
								"comparative_order": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: SpecifedOrder
										"specifed_order": schema.ListAttribute{ /*START ATTRIBUTE*/
											ElementType: types.StringType,
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: TreatUndefinedSpecifiedValues
										"treat_undefined_specified_values": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: UseOrdering
										"use_ordering": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: DefaultFormatting
								"default_formatting": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: DisplayFormat
										"display_format": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: DisplayFormatOptions
										"display_format_options": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
											Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
												// Property: BlankCellFormat
												"blank_cell_format": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: CurrencySymbol
												"currency_symbol": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: DateFormat
												"date_format": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: DecimalSeparator
												"decimal_separator": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: FractionDigits
												"fraction_digits": schema.Float64Attribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: GroupingSeparator
												"grouping_separator": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: NegativeFormat
												"negative_format": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
													Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
														// Property: Prefix
														"prefix": schema.StringAttribute{ /*START ATTRIBUTE*/
															Computed: true,
														}, /*END ATTRIBUTE*/
														// Property: Suffix
														"suffix": schema.StringAttribute{ /*START ATTRIBUTE*/
															Computed: true,
														}, /*END ATTRIBUTE*/
													}, /*END SCHEMA*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: Prefix
												"prefix": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: Suffix
												"suffix": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: UnitScaler
												"unit_scaler": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: UseBlankCellFormat
												"use_blank_cell_format": schema.BoolAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: UseGrouping
												"use_grouping": schema.BoolAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
											}, /*END SCHEMA*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: DisableIndexing
								"disable_indexing": schema.BoolAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: Expression
								"expression": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: IsIncludedInTopic
								"is_included_in_topic": schema.BoolAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: NeverAggregateInFilter
								"never_aggregate_in_filter": schema.BoolAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: NonAdditive
								"non_additive": schema.BoolAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: NotAllowedAggregations
								"not_allowed_aggregations": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SemanticType
								"semantic_type": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: FalseyCellValue
										"falsey_cell_value": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: FalseyCellValueSynonyms
										"falsey_cell_value_synonyms": schema.ListAttribute{ /*START ATTRIBUTE*/
											ElementType: types.StringType,
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: SubTypeName
										"sub_type_name": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: TruthyCellValue
										"truthy_cell_value": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: TruthyCellValueSynonyms
										"truthy_cell_value_synonyms": schema.ListAttribute{ /*START ATTRIBUTE*/
											ElementType: types.StringType,
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: TypeName
										"type_name": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: TypeParameters
										"type_parameters":   // Pattern: ""
										schema.MapAttribute{ /*START ATTRIBUTE*/
											ElementType: types.StringType,
											Computed:    true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: TimeGranularity
								"time_granularity": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
						}, /*END NESTED OBJECT*/
						Computed: true,
					}, /*END ATTRIBUTE*/
					// Property: Columns
					"columns": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
						NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: Aggregation
								"aggregation": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: AllowedAggregations
								"allowed_aggregations": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: CellValueSynonyms
								"cell_value_synonyms": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
									NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: CellValue
											"cell_value": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: Synonyms
											"synonyms": schema.ListAttribute{ /*START ATTRIBUTE*/
												ElementType: types.StringType,
												Computed:    true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
									}, /*END NESTED OBJECT*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: ColumnDataRole
								"column_data_role": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: ColumnDescription
								"column_description": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: ColumnFriendlyName
								"column_friendly_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: ColumnName
								"column_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: ColumnSynonyms
								"column_synonyms": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: ComparativeOrder
								"comparative_order": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: SpecifedOrder
										"specifed_order": schema.ListAttribute{ /*START ATTRIBUTE*/
											ElementType: types.StringType,
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: TreatUndefinedSpecifiedValues
										"treat_undefined_specified_values": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: UseOrdering
										"use_ordering": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: DefaultFormatting
								"default_formatting": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: DisplayFormat
										"display_format": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: DisplayFormatOptions
										"display_format_options": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
											Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
												// Property: BlankCellFormat
												"blank_cell_format": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: CurrencySymbol
												"currency_symbol": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: DateFormat
												"date_format": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: DecimalSeparator
												"decimal_separator": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: FractionDigits
												"fraction_digits": schema.Float64Attribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: GroupingSeparator
												"grouping_separator": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: NegativeFormat
												"negative_format": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
													Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
														// Property: Prefix
														"prefix": schema.StringAttribute{ /*START ATTRIBUTE*/
															Computed: true,
														}, /*END ATTRIBUTE*/
														// Property: Suffix
														"suffix": schema.StringAttribute{ /*START ATTRIBUTE*/
															Computed: true,
														}, /*END ATTRIBUTE*/
													}, /*END SCHEMA*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: Prefix
												"prefix": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: Suffix
												"suffix": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: UnitScaler
												"unit_scaler": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: UseBlankCellFormat
												"use_blank_cell_format": schema.BoolAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: UseGrouping
												"use_grouping": schema.BoolAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
											}, /*END SCHEMA*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: DisableIndexing
								"disable_indexing": schema.BoolAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: IsIncludedInTopic
								"is_included_in_topic": schema.BoolAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: NeverAggregateInFilter
								"never_aggregate_in_filter": schema.BoolAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: NonAdditive
								"non_additive": schema.BoolAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: NotAllowedAggregations
								"not_allowed_aggregations": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SemanticType
								"semantic_type": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: FalseyCellValue
										"falsey_cell_value": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: FalseyCellValueSynonyms
										"falsey_cell_value_synonyms": schema.ListAttribute{ /*START ATTRIBUTE*/
											ElementType: types.StringType,
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: SubTypeName
										"sub_type_name": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: TruthyCellValue
										"truthy_cell_value": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: TruthyCellValueSynonyms
										"truthy_cell_value_synonyms": schema.ListAttribute{ /*START ATTRIBUTE*/
											ElementType: types.StringType,
											Computed:    true,
										}, /*END ATTRIBUTE*/
										// Property: TypeName
										"type_name": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: TypeParameters
										"type_parameters":   // Pattern: ""
										schema.MapAttribute{ /*START ATTRIBUTE*/
											ElementType: types.StringType,
											Computed:    true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: TimeGranularity
								"time_granularity": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
						}, /*END NESTED OBJECT*/
						Computed: true,
					}, /*END ATTRIBUTE*/
					// Property: DataAggregation
					"data_aggregation": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: DatasetRowDateGranularity
							"dataset_row_date_granularity": schema.StringAttribute{ /*START ATTRIBUTE*/
								Computed: true,
							}, /*END ATTRIBUTE*/
							// Property: DefaultDateColumnName
							"default_date_column_name": schema.StringAttribute{ /*START ATTRIBUTE*/
								Computed: true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Computed: true,
					}, /*END ATTRIBUTE*/
					// Property: DatasetArn
					"dataset_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
						Computed: true,
					}, /*END ATTRIBUTE*/
					// Property: DatasetDescription
					"dataset_description": schema.StringAttribute{ /*START ATTRIBUTE*/
						Computed: true,
					}, /*END ATTRIBUTE*/
					// Property: DatasetName
					"dataset_name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Computed: true,
					}, /*END ATTRIBUTE*/
					// Property: Filters
					"filters": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
						NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: CategoryFilter
								"category_filter": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: CategoryFilterFunction
										"category_filter_function": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: CategoryFilterType
										"category_filter_type": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: Constant
										"constant": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
											Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
												// Property: CollectiveConstant
												"collective_constant": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
													Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
														// Property: ValueList
														"value_list": schema.ListAttribute{ /*START ATTRIBUTE*/
															ElementType: types.StringType,
															Computed:    true,
														}, /*END ATTRIBUTE*/
													}, /*END SCHEMA*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: ConstantType
												"constant_type": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: SingularConstant
												"singular_constant": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
											}, /*END SCHEMA*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: Inverse
										"inverse": schema.BoolAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: DateRangeFilter
								"date_range_filter": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: Constant
										"constant": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
											Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
												// Property: ConstantType
												"constant_type": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: RangeConstant
												"range_constant": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
													Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
														// Property: Maximum
														"maximum": schema.StringAttribute{ /*START ATTRIBUTE*/
															Computed: true,
														}, /*END ATTRIBUTE*/
														// Property: Minimum
														"minimum": schema.StringAttribute{ /*START ATTRIBUTE*/
															Computed: true,
														}, /*END ATTRIBUTE*/
													}, /*END SCHEMA*/
													Computed: true,
												}, /*END ATTRIBUTE*/
											}, /*END SCHEMA*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: Inclusive
										"inclusive": schema.BoolAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: FilterClass
								"filter_class": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: FilterDescription
								"filter_description": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: FilterName
								"filter_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: FilterSynonyms
								"filter_synonyms": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: FilterType
								"filter_type": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: NumericEqualityFilter
								"numeric_equality_filter": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: Aggregation
										"aggregation": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: Constant
										"constant": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
											Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
												// Property: ConstantType
												"constant_type": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: SingularConstant
												"singular_constant": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
											}, /*END SCHEMA*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: NumericRangeFilter
								"numeric_range_filter": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: Aggregation
										"aggregation": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: Constant
										"constant": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
											Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
												// Property: ConstantType
												"constant_type": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: RangeConstant
												"range_constant": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
													Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
														// Property: Maximum
														"maximum": schema.StringAttribute{ /*START ATTRIBUTE*/
															Computed: true,
														}, /*END ATTRIBUTE*/
														// Property: Minimum
														"minimum": schema.StringAttribute{ /*START ATTRIBUTE*/
															Computed: true,
														}, /*END ATTRIBUTE*/
													}, /*END SCHEMA*/
													Computed: true,
												}, /*END ATTRIBUTE*/
											}, /*END SCHEMA*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: Inclusive
										"inclusive": schema.BoolAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: OperandFieldName
								"operand_field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: RelativeDateFilter
								"relative_date_filter": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: Constant
										"constant": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
											Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
												// Property: ConstantType
												"constant_type": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
												// Property: SingularConstant
												"singular_constant": schema.StringAttribute{ /*START ATTRIBUTE*/
													Computed: true,
												}, /*END ATTRIBUTE*/
											}, /*END SCHEMA*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: RelativeDateFilterFunction
										"relative_date_filter_function": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: TimeGranularity
										"time_granularity": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
						}, /*END NESTED OBJECT*/
						Computed: true,
					}, /*END ATTRIBUTE*/
					// Property: NamedEntities
					"named_entities": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
						NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: Definition
								"definition": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
									NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: FieldName
											"field_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: Metric
											"metric": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
												Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
													// Property: Aggregation
													"aggregation": schema.StringAttribute{ /*START ATTRIBUTE*/
														Computed: true,
													}, /*END ATTRIBUTE*/
													// Property: AggregationFunctionParameters
													"aggregation_function_parameters": // Pattern: ""
													schema.MapAttribute{               /*START ATTRIBUTE*/
														ElementType: types.StringType,
														Computed:    true,
													}, /*END ATTRIBUTE*/
												}, /*END SCHEMA*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: PropertyName
											"property_name": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: PropertyRole
											"property_role": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
											// Property: PropertyUsage
											"property_usage": schema.StringAttribute{ /*START ATTRIBUTE*/
												Computed: true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
									}, /*END NESTED OBJECT*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: EntityDescription
								"entity_description": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: EntityName
								"entity_name": schema.StringAttribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
								// Property: EntitySynonyms
								"entity_synonyms": schema.ListAttribute{ /*START ATTRIBUTE*/
									ElementType: types.StringType,
									Computed:    true,
								}, /*END ATTRIBUTE*/
								// Property: SemanticEntityType
								"semantic_entity_type": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: SubTypeName
										"sub_type_name": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: TypeName
										"type_name": schema.StringAttribute{ /*START ATTRIBUTE*/
											Computed: true,
										}, /*END ATTRIBUTE*/
										// Property: TypeParameters
										"type_parameters":   // Pattern: ""
										schema.MapAttribute{ /*START ATTRIBUTE*/
											ElementType: types.StringType,
											Computed:    true,
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
						}, /*END NESTED OBJECT*/
						Computed: true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: Description
		// CloudFormation resource type schema:
		//
		//	{
		//	  "maxLength": 256,
		//	  "minLength": 0,
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: FolderArns
		// CloudFormation resource type schema:
		//
		//	{
		//	  "items": {
		//	    "type": "string"
		//	  },
		//	  "maxItems": 20,
		//	  "minItems": 0,
		//	  "type": "array"
		//	}
		"folder_arns": schema.ListAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Name
		// CloudFormation resource type schema:
		//
		//	{
		//	  "maxLength": 128,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "\u003cp\u003eThe key or keys of the key-value pairs for the resource tag or tags assigned to the\n            resource.\u003c/p\u003e",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "\u003cp\u003eTag key.\u003c/p\u003e",
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "\u003cp\u003eTag value.\u003c/p\u003e",
		//	        "maxLength": 256,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "maxItems": 200,
		//	  "minItems": 1,
		//	  "type": "array"
		//	}
		"tags": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "<p>Tag key.</p>",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "<p>Tag value.</p>",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: TopicId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "maxLength": 256,
		//	  "minLength": 0,
		//	  "pattern": "^[A-Za-z0-9-_.\\\\+]*$",
		//	  "type": "string"
		//	}
		"topic_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: UserExperienceVersion
		// CloudFormation resource type schema:
		//
		//	{
		//	  "enum": [
		//	    "LEGACY",
		//	    "NEW_READER_EXPERIENCE"
		//	  ],
		//	  "type": "string"
		//	}
		"user_experience_version": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::QuickSight::Topic",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::QuickSight::Topic").WithTerraformTypeName("awscc_quicksight_topic")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"aggregation":                      "Aggregation",
		"aggregation_function_parameters":  "AggregationFunctionParameters",
		"allowed_aggregations":             "AllowedAggregations",
		"arn":                              "Arn",
		"aws_account_id":                   "AwsAccountId",
		"blank_cell_format":                "BlankCellFormat",
		"calculated_field_description":     "CalculatedFieldDescription",
		"calculated_field_name":            "CalculatedFieldName",
		"calculated_field_synonyms":        "CalculatedFieldSynonyms",
		"calculated_fields":                "CalculatedFields",
		"category_filter":                  "CategoryFilter",
		"category_filter_function":         "CategoryFilterFunction",
		"category_filter_type":             "CategoryFilterType",
		"cell_value":                       "CellValue",
		"cell_value_synonyms":              "CellValueSynonyms",
		"collective_constant":              "CollectiveConstant",
		"column_data_role":                 "ColumnDataRole",
		"column_description":               "ColumnDescription",
		"column_friendly_name":             "ColumnFriendlyName",
		"column_name":                      "ColumnName",
		"column_synonyms":                  "ColumnSynonyms",
		"columns":                          "Columns",
		"comparative_order":                "ComparativeOrder",
		"config_options":                   "ConfigOptions",
		"constant":                         "Constant",
		"constant_type":                    "ConstantType",
		"currency_symbol":                  "CurrencySymbol",
		"custom_instructions":              "CustomInstructions",
		"custom_instructions_string":       "CustomInstructionsString",
		"data_aggregation":                 "DataAggregation",
		"data_sets":                        "DataSets",
		"dataset_arn":                      "DatasetArn",
		"dataset_description":              "DatasetDescription",
		"dataset_name":                     "DatasetName",
		"dataset_row_date_granularity":     "DatasetRowDateGranularity",
		"date_format":                      "DateFormat",
		"date_range_filter":                "DateRangeFilter",
		"decimal_separator":                "DecimalSeparator",
		"default_date_column_name":         "DefaultDateColumnName",
		"default_formatting":               "DefaultFormatting",
		"definition":                       "Definition",
		"description":                      "Description",
		"disable_indexing":                 "DisableIndexing",
		"display_format":                   "DisplayFormat",
		"display_format_options":           "DisplayFormatOptions",
		"entity_description":               "EntityDescription",
		"entity_name":                      "EntityName",
		"entity_synonyms":                  "EntitySynonyms",
		"expression":                       "Expression",
		"falsey_cell_value":                "FalseyCellValue",
		"falsey_cell_value_synonyms":       "FalseyCellValueSynonyms",
		"field_name":                       "FieldName",
		"filter_class":                     "FilterClass",
		"filter_description":               "FilterDescription",
		"filter_name":                      "FilterName",
		"filter_synonyms":                  "FilterSynonyms",
		"filter_type":                      "FilterType",
		"filters":                          "Filters",
		"folder_arns":                      "FolderArns",
		"fraction_digits":                  "FractionDigits",
		"grouping_separator":               "GroupingSeparator",
		"inclusive":                        "Inclusive",
		"inverse":                          "Inverse",
		"is_included_in_topic":             "IsIncludedInTopic",
		"key":                              "Key",
		"maximum":                          "Maximum",
		"metric":                           "Metric",
		"minimum":                          "Minimum",
		"name":                             "Name",
		"named_entities":                   "NamedEntities",
		"negative_format":                  "NegativeFormat",
		"never_aggregate_in_filter":        "NeverAggregateInFilter",
		"non_additive":                     "NonAdditive",
		"not_allowed_aggregations":         "NotAllowedAggregations",
		"numeric_equality_filter":          "NumericEqualityFilter",
		"numeric_range_filter":             "NumericRangeFilter",
		"operand_field_name":               "OperandFieldName",
		"prefix":                           "Prefix",
		"property_name":                    "PropertyName",
		"property_role":                    "PropertyRole",
		"property_usage":                   "PropertyUsage",
		"q_business_insights_enabled":      "QBusinessInsightsEnabled",
		"range_constant":                   "RangeConstant",
		"relative_date_filter":             "RelativeDateFilter",
		"relative_date_filter_function":    "RelativeDateFilterFunction",
		"semantic_entity_type":             "SemanticEntityType",
		"semantic_type":                    "SemanticType",
		"singular_constant":                "SingularConstant",
		"specifed_order":                   "SpecifedOrder",
		"sub_type_name":                    "SubTypeName",
		"suffix":                           "Suffix",
		"synonyms":                         "Synonyms",
		"tags":                             "Tags",
		"time_granularity":                 "TimeGranularity",
		"topic_id":                         "TopicId",
		"treat_undefined_specified_values": "TreatUndefinedSpecifiedValues",
		"truthy_cell_value":                "TruthyCellValue",
		"truthy_cell_value_synonyms":       "TruthyCellValueSynonyms",
		"type_name":                        "TypeName",
		"type_parameters":                  "TypeParameters",
		"unit_scaler":                      "UnitScaler",
		"use_blank_cell_format":            "UseBlankCellFormat",
		"use_grouping":                     "UseGrouping",
		"use_ordering":                     "UseOrdering",
		"user_experience_version":          "UserExperienceVersion",
		"value":                            "Value",
		"value_list":                       "ValueList",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
