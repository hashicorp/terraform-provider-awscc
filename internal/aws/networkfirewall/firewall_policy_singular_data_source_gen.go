// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package networkfirewall

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_networkfirewall_firewall_policy", firewallPolicyDataSource)
}

// firewallPolicyDataSource returns the Terraform awscc_networkfirewall_firewall_policy data source.
// This Terraform data source corresponds to the CloudFormation AWS::NetworkFirewall::FirewallPolicy resource.
func firewallPolicyDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: Description
		// CloudFormation resource type schema:
		//
		//	{
		//	  "maxLength": 512,
		//	  "minLength": 1,
		//	  "pattern": "^.*$",
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: FirewallPolicy
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "properties": {
		//	    "PolicyVariables": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "RuleVariables": {
		//	          "additionalProperties": false,
		//	          "patternProperties": {
		//	            "": {
		//	              "additionalProperties": false,
		//	              "properties": {
		//	                "Definition": {
		//	                  "insertionOrder": true,
		//	                  "items": {
		//	                    "minLength": 1,
		//	                    "pattern": "^.*$",
		//	                    "type": "string"
		//	                  },
		//	                  "type": "array",
		//	                  "uniqueItems": false
		//	                }
		//	              },
		//	              "type": "object"
		//	            }
		//	          },
		//	          "type": "object"
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "StatefulDefaultActions": {
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "type": "string"
		//	      },
		//	      "type": "array",
		//	      "uniqueItems": false
		//	    },
		//	    "StatefulEngineOptions": {
		//	      "additionalProperties": false,
		//	      "properties": {
		//	        "FlowTimeouts": {
		//	          "additionalProperties": false,
		//	          "properties": {
		//	            "TcpIdleTimeoutSeconds": {
		//	              "maximum": 6000,
		//	              "minimum": 60,
		//	              "type": "integer"
		//	            }
		//	          },
		//	          "type": "object"
		//	        },
		//	        "RuleOrder": {
		//	          "enum": [
		//	            "DEFAULT_ACTION_ORDER",
		//	            "STRICT_ORDER"
		//	          ],
		//	          "type": "string"
		//	        },
		//	        "StreamExceptionPolicy": {
		//	          "enum": [
		//	            "DROP",
		//	            "CONTINUE",
		//	            "REJECT"
		//	          ],
		//	          "type": "string"
		//	        }
		//	      },
		//	      "type": "object"
		//	    },
		//	    "StatefulRuleGroupReferences": {
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "properties": {
		//	          "DeepThreatInspection": {
		//	            "type": "boolean"
		//	          },
		//	          "Override": {
		//	            "additionalProperties": false,
		//	            "properties": {
		//	              "Action": {
		//	                "enum": [
		//	                  "DROP_TO_ALERT"
		//	                ],
		//	                "type": "string"
		//	              }
		//	            },
		//	            "type": "object"
		//	          },
		//	          "Priority": {
		//	            "maximum": 65535,
		//	            "minimum": 1,
		//	            "type": "integer"
		//	          },
		//	          "ResourceArn": {
		//	            "description": "A resource ARN.",
		//	            "maxLength": 256,
		//	            "minLength": 1,
		//	            "pattern": "^(arn:aws.*)$",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "ResourceArn"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "type": "array",
		//	      "uniqueItems": false
		//	    },
		//	    "StatelessCustomActions": {
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "properties": {
		//	          "ActionDefinition": {
		//	            "additionalProperties": false,
		//	            "properties": {
		//	              "PublishMetricAction": {
		//	                "additionalProperties": false,
		//	                "properties": {
		//	                  "Dimensions": {
		//	                    "insertionOrder": true,
		//	                    "items": {
		//	                      "additionalProperties": false,
		//	                      "properties": {
		//	                        "Value": {
		//	                          "maxLength": 128,
		//	                          "minLength": 1,
		//	                          "pattern": "^[a-zA-Z0-9-_ ]+$",
		//	                          "type": "string"
		//	                        }
		//	                      },
		//	                      "required": [
		//	                        "Value"
		//	                      ],
		//	                      "type": "object"
		//	                    },
		//	                    "type": "array",
		//	                    "uniqueItems": false
		//	                  }
		//	                },
		//	                "required": [
		//	                  "Dimensions"
		//	                ],
		//	                "type": "object"
		//	              }
		//	            },
		//	            "type": "object"
		//	          },
		//	          "ActionName": {
		//	            "maxLength": 128,
		//	            "minLength": 1,
		//	            "pattern": "^[a-zA-Z0-9]+$",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "ActionName",
		//	          "ActionDefinition"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "type": "array",
		//	      "uniqueItems": false
		//	    },
		//	    "StatelessDefaultActions": {
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "type": "string"
		//	      },
		//	      "type": "array",
		//	      "uniqueItems": false
		//	    },
		//	    "StatelessFragmentDefaultActions": {
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "type": "string"
		//	      },
		//	      "type": "array",
		//	      "uniqueItems": false
		//	    },
		//	    "StatelessRuleGroupReferences": {
		//	      "insertionOrder": true,
		//	      "items": {
		//	        "additionalProperties": false,
		//	        "properties": {
		//	          "Priority": {
		//	            "maximum": 65535,
		//	            "minimum": 1,
		//	            "type": "integer"
		//	          },
		//	          "ResourceArn": {
		//	            "description": "A resource ARN.",
		//	            "maxLength": 256,
		//	            "minLength": 1,
		//	            "pattern": "^(arn:aws.*)$",
		//	            "type": "string"
		//	          }
		//	        },
		//	        "required": [
		//	          "ResourceArn",
		//	          "Priority"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "type": "array",
		//	      "uniqueItems": false
		//	    },
		//	    "TLSInspectionConfigurationArn": {
		//	      "description": "A resource ARN.",
		//	      "maxLength": 256,
		//	      "minLength": 1,
		//	      "pattern": "^(arn:aws.*)$",
		//	      "type": "string"
		//	    }
		//	  },
		//	  "required": [
		//	    "StatelessDefaultActions",
		//	    "StatelessFragmentDefaultActions"
		//	  ],
		//	  "type": "object"
		//	}
		"firewall_policy": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: PolicyVariables
				"policy_variables": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: RuleVariables
						"rule_variables":          // Pattern: ""
						schema.MapNestedAttribute{ /*START ATTRIBUTE*/
							NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: Definition
									"definition": schema.ListAttribute{ /*START ATTRIBUTE*/
										ElementType: types.StringType,
										Computed:    true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
							}, /*END NESTED OBJECT*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: StatefulDefaultActions
				"stateful_default_actions": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: StatefulEngineOptions
				"stateful_engine_options": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: FlowTimeouts
						"flow_timeouts": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: TcpIdleTimeoutSeconds
								"tcp_idle_timeout_seconds": schema.Int64Attribute{ /*START ATTRIBUTE*/
									Computed: true,
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: RuleOrder
						"rule_order": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
						// Property: StreamExceptionPolicy
						"stream_exception_policy": schema.StringAttribute{ /*START ATTRIBUTE*/
							Computed: true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: StatefulRuleGroupReferences
				"stateful_rule_group_references": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: DeepThreatInspection
							"deep_threat_inspection": schema.BoolAttribute{ /*START ATTRIBUTE*/
								Computed: true,
							}, /*END ATTRIBUTE*/
							// Property: Override
							"override": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: Action
									"action": schema.StringAttribute{ /*START ATTRIBUTE*/
										Computed: true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Computed: true,
							}, /*END ATTRIBUTE*/
							// Property: Priority
							"priority": schema.Int64Attribute{ /*START ATTRIBUTE*/
								Computed: true,
							}, /*END ATTRIBUTE*/
							// Property: ResourceArn
							"resource_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "A resource ARN.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: StatelessCustomActions
				"stateless_custom_actions": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: ActionDefinition
							"action_definition": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
								Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
									// Property: PublishMetricAction
									"publish_metric_action": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
										Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
											// Property: Dimensions
											"dimensions": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
												NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
													Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
														// Property: Value
														"value": schema.StringAttribute{ /*START ATTRIBUTE*/
															Computed: true,
														}, /*END ATTRIBUTE*/
													}, /*END SCHEMA*/
												}, /*END NESTED OBJECT*/
												Computed: true,
											}, /*END ATTRIBUTE*/
										}, /*END SCHEMA*/
										Computed: true,
									}, /*END ATTRIBUTE*/
								}, /*END SCHEMA*/
								Computed: true,
							}, /*END ATTRIBUTE*/
							// Property: ActionName
							"action_name": schema.StringAttribute{ /*START ATTRIBUTE*/
								Computed: true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: StatelessDefaultActions
				"stateless_default_actions": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: StatelessFragmentDefaultActions
				"stateless_fragment_default_actions": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: StatelessRuleGroupReferences
				"stateless_rule_group_references": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
					NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Priority
							"priority": schema.Int64Attribute{ /*START ATTRIBUTE*/
								Computed: true,
							}, /*END ATTRIBUTE*/
							// Property: ResourceArn
							"resource_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
								Description: "A resource ARN.",
								Computed:    true,
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
					}, /*END NESTED OBJECT*/
					Computed: true,
				}, /*END ATTRIBUTE*/
				// Property: TLSInspectionConfigurationArn
				"tls_inspection_configuration_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "A resource ARN.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: FirewallPolicyArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "A resource ARN.",
		//	  "maxLength": 256,
		//	  "minLength": 1,
		//	  "pattern": "^(arn:aws.*)$",
		//	  "type": "string"
		//	}
		"firewall_policy_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "A resource ARN.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: FirewallPolicyId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "maxLength": 36,
		//	  "minLength": 36,
		//	  "pattern": "^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$",
		//	  "type": "string"
		//	}
		"firewall_policy_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: FirewallPolicyName
		// CloudFormation resource type schema:
		//
		//	{
		//	  "maxLength": 128,
		//	  "minLength": 1,
		//	  "pattern": "^[a-zA-Z0-9-]+$",
		//	  "type": "string"
		//	}
		"firewall_policy_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Computed: true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "properties": {
		//	      "Key": {
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "pattern": "^.*$",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "maxLength": 255,
		//	        "minLength": 0,
		//	        "pattern": "^.*$",
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Computed: true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Computed: true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Computed: true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::NetworkFirewall::FirewallPolicy",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::NetworkFirewall::FirewallPolicy").WithTerraformTypeName("awscc_networkfirewall_firewall_policy")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"action":                             "Action",
		"action_definition":                  "ActionDefinition",
		"action_name":                        "ActionName",
		"deep_threat_inspection":             "DeepThreatInspection",
		"definition":                         "Definition",
		"description":                        "Description",
		"dimensions":                         "Dimensions",
		"firewall_policy":                    "FirewallPolicy",
		"firewall_policy_arn":                "FirewallPolicyArn",
		"firewall_policy_id":                 "FirewallPolicyId",
		"firewall_policy_name":               "FirewallPolicyName",
		"flow_timeouts":                      "FlowTimeouts",
		"key":                                "Key",
		"override":                           "Override",
		"policy_variables":                   "PolicyVariables",
		"priority":                           "Priority",
		"publish_metric_action":              "PublishMetricAction",
		"resource_arn":                       "ResourceArn",
		"rule_order":                         "RuleOrder",
		"rule_variables":                     "RuleVariables",
		"stateful_default_actions":           "StatefulDefaultActions",
		"stateful_engine_options":            "StatefulEngineOptions",
		"stateful_rule_group_references":     "StatefulRuleGroupReferences",
		"stateless_custom_actions":           "StatelessCustomActions",
		"stateless_default_actions":          "StatelessDefaultActions",
		"stateless_fragment_default_actions": "StatelessFragmentDefaultActions",
		"stateless_rule_group_references":    "StatelessRuleGroupReferences",
		"stream_exception_policy":            "StreamExceptionPolicy",
		"tags":                               "Tags",
		"tcp_idle_timeout_seconds":           "TcpIdleTimeoutSeconds",
		"tls_inspection_configuration_arn":   "TLSInspectionConfigurationArn",
		"value":                              "Value",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
