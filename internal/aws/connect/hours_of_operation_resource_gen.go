// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/resource/main.go; DO NOT EDIT.

package connect

import (
	"context"
	"regexp"

	"github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
	"github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/setvalidator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/listplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/objectplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/setplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
	fwvalidators "github.com/hashicorp/terraform-provider-awscc/internal/validators"
)

func init() {
	registry.AddResourceFactory("awscc_connect_hours_of_operation", hoursOfOperationResource)
}

// hoursOfOperationResource returns the Terraform awscc_connect_hours_of_operation resource.
// This Terraform resource corresponds to the CloudFormation AWS::Connect::HoursOfOperation resource.
func hoursOfOperationResource(ctx context.Context) (resource.Resource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: Config
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Configuration information for the hours of operation: day, start time, and end time.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "Contains information about the hours of operation.",
		//	    "properties": {
		//	      "Day": {
		//	        "description": "The day that the hours of operation applies to.",
		//	        "enum": [
		//	          "SUNDAY",
		//	          "MONDAY",
		//	          "TUESDAY",
		//	          "WEDNESDAY",
		//	          "THURSDAY",
		//	          "FRIDAY",
		//	          "SATURDAY"
		//	        ],
		//	        "type": "string"
		//	      },
		//	      "EndTime": {
		//	        "additionalProperties": false,
		//	        "description": "The end time that your contact center closes.",
		//	        "properties": {
		//	          "Hours": {
		//	            "description": "The hours.",
		//	            "maximum": 23,
		//	            "minimum": 0,
		//	            "type": "integer"
		//	          },
		//	          "Minutes": {
		//	            "description": "The minutes.",
		//	            "maximum": 59,
		//	            "minimum": 0,
		//	            "type": "integer"
		//	          }
		//	        },
		//	        "required": [
		//	          "Hours",
		//	          "Minutes"
		//	        ],
		//	        "type": "object"
		//	      },
		//	      "StartTime": {
		//	        "additionalProperties": false,
		//	        "description": "The start time that your contact center opens.",
		//	        "properties": {
		//	          "Hours": {
		//	            "description": "The hours.",
		//	            "maximum": 23,
		//	            "minimum": 0,
		//	            "type": "integer"
		//	          },
		//	          "Minutes": {
		//	            "description": "The minutes.",
		//	            "maximum": 59,
		//	            "minimum": 0,
		//	            "type": "integer"
		//	          }
		//	        },
		//	        "required": [
		//	          "Hours",
		//	          "Minutes"
		//	        ],
		//	        "type": "object"
		//	      }
		//	    },
		//	    "required": [
		//	      "Day",
		//	      "StartTime",
		//	      "EndTime"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "maxItems": 100,
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"config": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Day
					"day": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The day that the hours of operation applies to.",
						Required:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.OneOf(
								"SUNDAY",
								"MONDAY",
								"TUESDAY",
								"WEDNESDAY",
								"THURSDAY",
								"FRIDAY",
								"SATURDAY",
							),
						}, /*END VALIDATORS*/
					}, /*END ATTRIBUTE*/
					// Property: EndTime
					"end_time": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Hours
							"hours": schema.Int64Attribute{ /*START ATTRIBUTE*/
								Description: "The hours.",
								Required:    true,
								Validators: []validator.Int64{ /*START VALIDATORS*/
									int64validator.Between(0, 23),
								}, /*END VALIDATORS*/
							}, /*END ATTRIBUTE*/
							// Property: Minutes
							"minutes": schema.Int64Attribute{ /*START ATTRIBUTE*/
								Description: "The minutes.",
								Required:    true,
								Validators: []validator.Int64{ /*START VALIDATORS*/
									int64validator.Between(0, 59),
								}, /*END VALIDATORS*/
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Description: "The end time that your contact center closes.",
						Required:    true,
					}, /*END ATTRIBUTE*/
					// Property: StartTime
					"start_time": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
						Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
							// Property: Hours
							"hours": schema.Int64Attribute{ /*START ATTRIBUTE*/
								Description: "The hours.",
								Required:    true,
								Validators: []validator.Int64{ /*START VALIDATORS*/
									int64validator.Between(0, 23),
								}, /*END VALIDATORS*/
							}, /*END ATTRIBUTE*/
							// Property: Minutes
							"minutes": schema.Int64Attribute{ /*START ATTRIBUTE*/
								Description: "The minutes.",
								Required:    true,
								Validators: []validator.Int64{ /*START VALIDATORS*/
									int64validator.Between(0, 59),
								}, /*END VALIDATORS*/
							}, /*END ATTRIBUTE*/
						}, /*END SCHEMA*/
						Description: "The start time that your contact center opens.",
						Required:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "Configuration information for the hours of operation: day, start time, and end time.",
			Required:    true,
			Validators: []validator.Set{ /*START VALIDATORS*/
				setvalidator.SizeAtMost(100),
			}, /*END VALIDATORS*/
		}, /*END ATTRIBUTE*/
		// Property: Description
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The description of the hours of operation.",
		//	  "maxLength": 250,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The description of the hours of operation.",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.LengthBetween(1, 250),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: HoursOfOperationArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Amazon Resource Name (ARN) for the hours of operation.",
		//	  "pattern": "^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/operating-hours/[-a-zA-Z0-9]*$",
		//	  "type": "string"
		//	}
		"hours_of_operation_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Amazon Resource Name (ARN) for the hours of operation.",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: HoursOfOperationOverrides
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "One or more hours of operation overrides assigned to an hour of operation.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "Overrides attached to the hours of operation.",
		//	    "properties": {
		//	      "EffectiveFrom": {
		//	        "description": "The date from which the hours of operation override would be effective.",
		//	        "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
		//	        "type": "string"
		//	      },
		//	      "EffectiveTill": {
		//	        "description": "The date till which the hours of operation override would be effective.",
		//	        "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
		//	        "type": "string"
		//	      },
		//	      "HoursOfOperationOverrideId": {
		//	        "description": "The Resource Identifier for the hours of operation override.",
		//	        "pattern": "^[-a-zA-Z0-9]*$",
		//	        "type": "string"
		//	      },
		//	      "OverrideConfig": {
		//	        "description": "Configuration information for the hours of operation override: day, start time, and end time.",
		//	        "insertionOrder": false,
		//	        "items": {
		//	          "additionalProperties": false,
		//	          "description": "Contains information about the hours of operation override.",
		//	          "properties": {
		//	            "Day": {
		//	              "description": "The day that the hours of operation override applies to.",
		//	              "enum": [
		//	                "SUNDAY",
		//	                "MONDAY",
		//	                "TUESDAY",
		//	                "WEDNESDAY",
		//	                "THURSDAY",
		//	                "FRIDAY",
		//	                "SATURDAY"
		//	              ],
		//	              "type": "string"
		//	            },
		//	            "EndTime": {
		//	              "additionalProperties": false,
		//	              "description": "The new end time that your contact center closes for the overriden days.",
		//	              "properties": {
		//	                "Hours": {
		//	                  "description": "The hours.",
		//	                  "maximum": 23,
		//	                  "minimum": 0,
		//	                  "type": "integer"
		//	                },
		//	                "Minutes": {
		//	                  "description": "The minutes.",
		//	                  "maximum": 59,
		//	                  "minimum": 0,
		//	                  "type": "integer"
		//	                }
		//	              },
		//	              "required": [
		//	                "Hours",
		//	                "Minutes"
		//	              ],
		//	              "type": "object"
		//	            },
		//	            "StartTime": {
		//	              "additionalProperties": false,
		//	              "description": "The new start time that your contact center opens for the overriden days.",
		//	              "properties": {
		//	                "Hours": {
		//	                  "description": "The hours.",
		//	                  "maximum": 23,
		//	                  "minimum": 0,
		//	                  "type": "integer"
		//	                },
		//	                "Minutes": {
		//	                  "description": "The minutes.",
		//	                  "maximum": 59,
		//	                  "minimum": 0,
		//	                  "type": "integer"
		//	                }
		//	              },
		//	              "required": [
		//	                "Hours",
		//	                "Minutes"
		//	              ],
		//	              "type": "object"
		//	            }
		//	          },
		//	          "required": [
		//	            "Day",
		//	            "StartTime",
		//	            "EndTime"
		//	          ],
		//	          "type": "object"
		//	        },
		//	        "maxItems": 100,
		//	        "type": "array",
		//	        "uniqueItems": true
		//	      },
		//	      "OverrideDescription": {
		//	        "description": "The description of the hours of operation override.",
		//	        "maxLength": 250,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      },
		//	      "OverrideName": {
		//	        "description": "The name of the hours of operation override.",
		//	        "maxLength": 127,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "OverrideName",
		//	      "EffectiveFrom",
		//	      "EffectiveTill",
		//	      "OverrideConfig"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "maxItems": 50,
		//	  "type": "array"
		//	}
		"hours_of_operation_overrides": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: EffectiveFrom
					"effective_from": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The date from which the hours of operation override would be effective.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.RegexMatches(regexp.MustCompile("^\\d{4}-\\d{2}-\\d{2}$"), ""),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: EffectiveTill
					"effective_till": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The date till which the hours of operation override would be effective.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.RegexMatches(regexp.MustCompile("^\\d{4}-\\d{2}-\\d{2}$"), ""),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: HoursOfOperationOverrideId
					"hours_of_operation_override_id": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The Resource Identifier for the hours of operation override.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.RegexMatches(regexp.MustCompile("^[-a-zA-Z0-9]*$"), ""),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: OverrideConfig
					"override_config": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
						NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
							Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
								// Property: Day
								"day": schema.StringAttribute{ /*START ATTRIBUTE*/
									Description: "The day that the hours of operation override applies to.",
									Optional:    true,
									Computed:    true,
									Validators: []validator.String{ /*START VALIDATORS*/
										stringvalidator.OneOf(
											"SUNDAY",
											"MONDAY",
											"TUESDAY",
											"WEDNESDAY",
											"THURSDAY",
											"FRIDAY",
											"SATURDAY",
										),
										fwvalidators.NotNullString(),
									}, /*END VALIDATORS*/
									PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
										stringplanmodifier.UseStateForUnknown(),
									}, /*END PLAN MODIFIERS*/
								}, /*END ATTRIBUTE*/
								// Property: EndTime
								"end_time": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: Hours
										"hours": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The hours.",
											Optional:    true,
											Computed:    true,
											Validators: []validator.Int64{ /*START VALIDATORS*/
												int64validator.Between(0, 23),
												fwvalidators.NotNullInt64(),
											}, /*END VALIDATORS*/
											PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
												int64planmodifier.UseStateForUnknown(),
											}, /*END PLAN MODIFIERS*/
										}, /*END ATTRIBUTE*/
										// Property: Minutes
										"minutes": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The minutes.",
											Optional:    true,
											Computed:    true,
											Validators: []validator.Int64{ /*START VALIDATORS*/
												int64validator.Between(0, 59),
												fwvalidators.NotNullInt64(),
											}, /*END VALIDATORS*/
											PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
												int64planmodifier.UseStateForUnknown(),
											}, /*END PLAN MODIFIERS*/
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Description: "The new end time that your contact center closes for the overriden days.",
									Optional:    true,
									Computed:    true,
									Validators: []validator.Object{ /*START VALIDATORS*/
										fwvalidators.NotNullObject(),
									}, /*END VALIDATORS*/
									PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
										objectplanmodifier.UseStateForUnknown(),
									}, /*END PLAN MODIFIERS*/
								}, /*END ATTRIBUTE*/
								// Property: StartTime
								"start_time": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
									Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
										// Property: Hours
										"hours": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The hours.",
											Optional:    true,
											Computed:    true,
											Validators: []validator.Int64{ /*START VALIDATORS*/
												int64validator.Between(0, 23),
												fwvalidators.NotNullInt64(),
											}, /*END VALIDATORS*/
											PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
												int64planmodifier.UseStateForUnknown(),
											}, /*END PLAN MODIFIERS*/
										}, /*END ATTRIBUTE*/
										// Property: Minutes
										"minutes": schema.Int64Attribute{ /*START ATTRIBUTE*/
											Description: "The minutes.",
											Optional:    true,
											Computed:    true,
											Validators: []validator.Int64{ /*START VALIDATORS*/
												int64validator.Between(0, 59),
												fwvalidators.NotNullInt64(),
											}, /*END VALIDATORS*/
											PlanModifiers: []planmodifier.Int64{ /*START PLAN MODIFIERS*/
												int64planmodifier.UseStateForUnknown(),
											}, /*END PLAN MODIFIERS*/
										}, /*END ATTRIBUTE*/
									}, /*END SCHEMA*/
									Description: "The new start time that your contact center opens for the overriden days.",
									Optional:    true,
									Computed:    true,
									Validators: []validator.Object{ /*START VALIDATORS*/
										fwvalidators.NotNullObject(),
									}, /*END VALIDATORS*/
									PlanModifiers: []planmodifier.Object{ /*START PLAN MODIFIERS*/
										objectplanmodifier.UseStateForUnknown(),
									}, /*END PLAN MODIFIERS*/
								}, /*END ATTRIBUTE*/
							}, /*END SCHEMA*/
						}, /*END NESTED OBJECT*/
						Description: "Configuration information for the hours of operation override: day, start time, and end time.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.Set{ /*START VALIDATORS*/
							setvalidator.SizeAtMost(100),
							fwvalidators.NotNullSet(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
							setplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: OverrideDescription
					"override_description": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The description of the hours of operation override.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(1, 250),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: OverrideName
					"override_name": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The name of the hours of operation override.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(1, 127),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "One or more hours of operation overrides assigned to an hour of operation.",
			Optional:    true,
			Computed:    true,
			Validators: []validator.List{ /*START VALIDATORS*/
				listvalidator.SizeAtMost(50),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.List{ /*START PLAN MODIFIERS*/
				generic.Multiset(),
				listplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: InstanceArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The identifier of the Amazon Connect instance.",
		//	  "pattern": "^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$",
		//	  "type": "string"
		//	}
		"instance_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The identifier of the Amazon Connect instance.",
			Required:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.RegexMatches(regexp.MustCompile("^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$"), ""),
			}, /*END VALIDATORS*/
		}, /*END ATTRIBUTE*/
		// Property: Name
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The name of the hours of operation.",
		//	  "maxLength": 127,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The name of the hours of operation.",
			Required:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.LengthBetween(1, 127),
			}, /*END VALIDATORS*/
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "One or more tags.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "A key-value pair to associate with a resource.",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "pattern": "",
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
		//	        "maxLength": 256,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "maxItems": 50,
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(1, 128),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthAtMost(256),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "One or more tags.",
			Optional:    true,
			Computed:    true,
			Validators: []validator.Set{ /*START VALIDATORS*/
				setvalidator.SizeAtMost(50),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: TimeZone
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The time zone of the hours of operation.",
		//	  "type": "string"
		//	}
		"time_zone": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The time zone of the hours of operation.",
			Required:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	// Corresponds to CloudFormation primaryIdentifier.
	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Computed:    true,
		PlanModifiers: []planmodifier.String{
			stringplanmodifier.UseStateForUnknown(),
		},
	}

	schema := schema.Schema{
		Description: "Resource Type definition for AWS::Connect::HoursOfOperation",
		Version:     1,
		Attributes:  attributes,
	}

	var opts generic.ResourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::Connect::HoursOfOperation").WithTerraformTypeName("awscc_connect_hours_of_operation")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"config":                         "Config",
		"day":                            "Day",
		"description":                    "Description",
		"effective_from":                 "EffectiveFrom",
		"effective_till":                 "EffectiveTill",
		"end_time":                       "EndTime",
		"hours":                          "Hours",
		"hours_of_operation_arn":         "HoursOfOperationArn",
		"hours_of_operation_override_id": "HoursOfOperationOverrideId",
		"hours_of_operation_overrides":   "HoursOfOperationOverrides",
		"instance_arn":                   "InstanceArn",
		"key":                            "Key",
		"minutes":                        "Minutes",
		"name":                           "Name",
		"override_config":                "OverrideConfig",
		"override_description":           "OverrideDescription",
		"override_name":                  "OverrideName",
		"start_time":                     "StartTime",
		"tags":                           "Tags",
		"time_zone":                      "TimeZone",
		"value":                          "Value",
	})

	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	v, err := generic.NewResource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
