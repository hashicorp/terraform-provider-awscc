// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/resource/main.go; DO NOT EDIT.

package connect

import (
	"context"
	"regexp"

	"github.com/hashicorp/terraform-plugin-framework-timetypes/timetypes"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/boolplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/setplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
	fwvalidators "github.com/hashicorp/terraform-provider-awscc/internal/validators"
)

func init() {
	registry.AddResourceFactory("awscc_connect_instance", instanceResource)
}

// instanceResource returns the Terraform awscc_connect_instance resource.
// This Terraform resource corresponds to the CloudFormation AWS::Connect::Instance resource.
func instanceResource(ctx context.Context) (resource.Resource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: Arn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "An instanceArn is automatically generated on creation based on instanceId.",
		//	  "pattern": "^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$",
		//	  "type": "string"
		//	}
		"arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "An instanceArn is automatically generated on creation based on instanceId.",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Attributes
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "The attributes for the instance.",
		//	  "properties": {
		//	    "AutoResolveBestVoices": {
		//	      "description": "Boolean flag which enables AUTO_RESOLVE_BEST_VOICES on an instance.",
		//	      "type": "boolean"
		//	    },
		//	    "ContactLens": {
		//	      "description": "Boolean flag which enables CONTACT_LENS on an instance.",
		//	      "type": "boolean"
		//	    },
		//	    "ContactflowLogs": {
		//	      "description": "Boolean flag which enables CONTACTFLOW_LOGS on an instance.",
		//	      "type": "boolean"
		//	    },
		//	    "EarlyMedia": {
		//	      "description": "Boolean flag which enables EARLY_MEDIA on an instance.",
		//	      "type": "boolean"
		//	    },
		//	    "EnhancedChatMonitoring": {
		//	      "description": "Boolean flag which enables ENHANCED_CHAT_MONITORING on an instance.",
		//	      "type": "boolean"
		//	    },
		//	    "EnhancedContactMonitoring": {
		//	      "description": "Boolean flag which enables ENHANCED_CONTACT_MONITORING on an instance.",
		//	      "type": "boolean"
		//	    },
		//	    "HighVolumeOutBound": {
		//	      "description": "Boolean flag which enables HIGH_VOLUME_OUTBOUND on an instance.",
		//	      "type": "boolean"
		//	    },
		//	    "InboundCalls": {
		//	      "description": "Mandatory element which enables inbound calls on new instance.",
		//	      "type": "boolean"
		//	    },
		//	    "MultiPartyChatConference": {
		//	      "description": "Boolean flag which enables MULTI_PARTY_CHAT_CONFERENCE on an instance.",
		//	      "type": "boolean"
		//	    },
		//	    "MultiPartyConference": {
		//	      "description": "Boolean flag which enables MULTI_PARTY_CONFERENCE on an instance.",
		//	      "type": "boolean"
		//	    },
		//	    "OutboundCalls": {
		//	      "description": "Mandatory element which enables outbound calls on new instance.",
		//	      "type": "boolean"
		//	    },
		//	    "UseCustomTTSVoices": {
		//	      "description": "Boolean flag which enables USE_CUSTOM_TTS_VOICES on an instance.",
		//	      "type": "boolean"
		//	    }
		//	  },
		//	  "required": [
		//	    "InboundCalls",
		//	    "OutboundCalls"
		//	  ],
		//	  "type": "object"
		//	}
		"attributes": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: AutoResolveBestVoices
				"auto_resolve_best_voices": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "Boolean flag which enables AUTO_RESOLVE_BEST_VOICES on an instance.",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
						boolplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: ContactLens
				"contact_lens": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "Boolean flag which enables CONTACT_LENS on an instance.",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
						boolplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: ContactflowLogs
				"contactflow_logs": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "Boolean flag which enables CONTACTFLOW_LOGS on an instance.",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
						boolplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: EarlyMedia
				"early_media": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "Boolean flag which enables EARLY_MEDIA on an instance.",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
						boolplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: EnhancedChatMonitoring
				"enhanced_chat_monitoring": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "Boolean flag which enables ENHANCED_CHAT_MONITORING on an instance.",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
						boolplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: EnhancedContactMonitoring
				"enhanced_contact_monitoring": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "Boolean flag which enables ENHANCED_CONTACT_MONITORING on an instance.",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
						boolplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: HighVolumeOutBound
				"high_volume_out_bound": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "Boolean flag which enables HIGH_VOLUME_OUTBOUND on an instance.",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
						boolplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: InboundCalls
				"inbound_calls": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "Mandatory element which enables inbound calls on new instance.",
					Required:    true,
				}, /*END ATTRIBUTE*/
				// Property: MultiPartyChatConference
				"multi_party_chat_conference": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "Boolean flag which enables MULTI_PARTY_CHAT_CONFERENCE on an instance.",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
						boolplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: MultiPartyConference
				"multi_party_conference": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "Boolean flag which enables MULTI_PARTY_CONFERENCE on an instance.",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
						boolplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
				// Property: OutboundCalls
				"outbound_calls": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "Mandatory element which enables outbound calls on new instance.",
					Required:    true,
				}, /*END ATTRIBUTE*/
				// Property: UseCustomTTSVoices
				"use_custom_tts_voices": schema.BoolAttribute{ /*START ATTRIBUTE*/
					Description: "Boolean flag which enables USE_CUSTOM_TTS_VOICES on an instance.",
					Optional:    true,
					Computed:    true,
					PlanModifiers: []planmodifier.Bool{ /*START PLAN MODIFIERS*/
						boolplanmodifier.UseStateForUnknown(),
					}, /*END PLAN MODIFIERS*/
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "The attributes for the instance.",
			Required:    true,
		}, /*END ATTRIBUTE*/
		// Property: CreatedTime
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Timestamp of instance creation logged as part of instance creation.",
		//	  "format": "date-time",
		//	  "type": "string"
		//	}
		"created_time": schema.StringAttribute{ /*START ATTRIBUTE*/
			CustomType:  timetypes.RFC3339Type{},
			Description: "Timestamp of instance creation logged as part of instance creation.",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: DirectoryId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Existing directoryId user wants to map to the new Connect instance.",
		//	  "maxLength": 12,
		//	  "minLength": 12,
		//	  "pattern": "^d-[0-9a-f]{10}$",
		//	  "type": "string"
		//	}
		"directory_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Existing directoryId user wants to map to the new Connect instance.",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.LengthBetween(12, 12),
				stringvalidator.RegexMatches(regexp.MustCompile("^d-[0-9a-f]{10}$"), ""),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
			// DirectoryId is a write-only property.
		}, /*END ATTRIBUTE*/
		// Property: Id
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "An instanceId is automatically generated on creation and assigned as the unique identifier.",
		//	  "type": "string"
		//	}
		"instance_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "An instanceId is automatically generated on creation and assigned as the unique identifier.",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: IdentityManagementType
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Specifies the type of directory integration for new instance.",
		//	  "enum": [
		//	    "SAML",
		//	    "CONNECT_MANAGED",
		//	    "EXISTING_DIRECTORY"
		//	  ],
		//	  "type": "string"
		//	}
		"identity_management_type": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Specifies the type of directory integration for new instance.",
			Required:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.OneOf(
					"SAML",
					"CONNECT_MANAGED",
					"EXISTING_DIRECTORY",
				),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.RequiresReplace(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: InstanceAlias
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Alias of the new directory created as part of new instance creation.",
		//	  "maxLength": 45,
		//	  "minLength": 1,
		//	  "pattern": "",
		//	  "type": "string"
		//	}
		"instance_alias": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Alias of the new directory created as part of new instance creation.",
			Optional:    true,
			Computed:    true,
			Validators: []validator.String{ /*START VALIDATORS*/
				stringvalidator.LengthBetween(1, 45),
			}, /*END VALIDATORS*/
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
				stringplanmodifier.RequiresReplaceIfConfigured(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: InstanceStatus
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Specifies the creation status of new instance.",
		//	  "enum": [
		//	    "CREATION_IN_PROGRESS",
		//	    "CREATION_FAILED",
		//	    "ACTIVE"
		//	  ],
		//	  "type": "string"
		//	}
		"instance_status": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Specifies the creation status of new instance.",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: ServiceRole
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Service linked role created as part of instance creation.",
		//	  "type": "string"
		//	}
		"service_role": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "Service linked role created as part of instance creation.",
			Computed:    true,
			PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
				stringplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "An array of key-value pairs to apply to this resource.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "A key-value pair to associate with a resource.",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
		//	        "maxLength": 256,
		//	        "minLength": 0,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key",
		//	      "Value"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": true
		//	}
		"tags": schema.SetNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(1, 128),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
						Optional:    true,
						Computed:    true,
						Validators: []validator.String{ /*START VALIDATORS*/
							stringvalidator.LengthBetween(0, 256),
							fwvalidators.NotNullString(),
						}, /*END VALIDATORS*/
						PlanModifiers: []planmodifier.String{ /*START PLAN MODIFIERS*/
							stringplanmodifier.UseStateForUnknown(),
						}, /*END PLAN MODIFIERS*/
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "An array of key-value pairs to apply to this resource.",
			Optional:    true,
			Computed:    true,
			PlanModifiers: []planmodifier.Set{ /*START PLAN MODIFIERS*/
				setplanmodifier.UseStateForUnknown(),
			}, /*END PLAN MODIFIERS*/
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	// Corresponds to CloudFormation primaryIdentifier.
	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Computed:    true,
		PlanModifiers: []planmodifier.String{
			stringplanmodifier.UseStateForUnknown(),
		},
	}

	schema := schema.Schema{
		Description: "Resource Type definition for AWS::Connect::Instance",
		Version:     1,
		Attributes:  attributes,
	}

	var opts generic.ResourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::Connect::Instance").WithTerraformTypeName("awscc_connect_instance")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"arn":                         "Arn",
		"attributes":                  "Attributes",
		"auto_resolve_best_voices":    "AutoResolveBestVoices",
		"contact_lens":                "ContactLens",
		"contactflow_logs":            "ContactflowLogs",
		"created_time":                "CreatedTime",
		"directory_id":                "DirectoryId",
		"early_media":                 "EarlyMedia",
		"enhanced_chat_monitoring":    "EnhancedChatMonitoring",
		"enhanced_contact_monitoring": "EnhancedContactMonitoring",
		"high_volume_out_bound":       "HighVolumeOutBound",
		"identity_management_type":    "IdentityManagementType",
		"inbound_calls":               "InboundCalls",
		"instance_alias":              "InstanceAlias",
		"instance_id":                 "Id",
		"instance_status":             "InstanceStatus",
		"key":                         "Key",
		"multi_party_chat_conference": "MultiPartyChatConference",
		"multi_party_conference":      "MultiPartyConference",
		"outbound_calls":              "OutboundCalls",
		"service_role":                "ServiceRole",
		"tags":                        "Tags",
		"use_custom_tts_voices":       "UseCustomTTSVoices",
		"value":                       "Value",
	})

	opts = opts.WithWriteOnlyPropertyPaths([]string{
		"/properties/DirectoryId",
	})
	opts = opts.WithCreateTimeoutInMinutes(0).WithDeleteTimeoutInMinutes(0)

	opts = opts.WithUpdateTimeoutInMinutes(0)

	v, err := generic.NewResource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
