// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package connect

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_connect_user_hierarchy_structure", userHierarchyStructureDataSource)
}

// userHierarchyStructureDataSource returns the Terraform awscc_connect_user_hierarchy_structure data source.
// This Terraform data source corresponds to the CloudFormation AWS::Connect::UserHierarchyStructure resource.
func userHierarchyStructureDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: InstanceArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The identifier of the Amazon Connect instance.",
		//	  "pattern": "^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$",
		//	  "type": "string"
		//	}
		"instance_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The identifier of the Amazon Connect instance.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: UserHierarchyStructure
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "Information about the hierarchy structure.",
		//	  "properties": {
		//	    "LevelFive": {
		//	      "additionalProperties": false,
		//	      "description": "Information about level five.",
		//	      "properties": {
		//	        "HierarchyLevelArn": {
		//	          "description": "The Amazon Resource Name (ARN) of the hierarchy level.",
		//	          "pattern": "^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent-group-level/[-0-9]*$",
		//	          "type": "string"
		//	        },
		//	        "HierarchyLevelId": {
		//	          "description": "The identifier of the hierarchy level.",
		//	          "type": "string"
		//	        },
		//	        "Name": {
		//	          "description": "The name of the hierarchy level.",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "Name"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "LevelFour": {
		//	      "additionalProperties": false,
		//	      "description": "Information about level four.",
		//	      "properties": {
		//	        "HierarchyLevelArn": {
		//	          "description": "The Amazon Resource Name (ARN) of the hierarchy level.",
		//	          "pattern": "^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent-group-level/[-0-9]*$",
		//	          "type": "string"
		//	        },
		//	        "HierarchyLevelId": {
		//	          "description": "The identifier of the hierarchy level.",
		//	          "type": "string"
		//	        },
		//	        "Name": {
		//	          "description": "The name of the hierarchy level.",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "Name"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "LevelOne": {
		//	      "additionalProperties": false,
		//	      "description": "Information about level one.",
		//	      "properties": {
		//	        "HierarchyLevelArn": {
		//	          "description": "The Amazon Resource Name (ARN) of the hierarchy level.",
		//	          "pattern": "^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent-group-level/[-0-9]*$",
		//	          "type": "string"
		//	        },
		//	        "HierarchyLevelId": {
		//	          "description": "The identifier of the hierarchy level.",
		//	          "type": "string"
		//	        },
		//	        "Name": {
		//	          "description": "The name of the hierarchy level.",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "Name"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "LevelThree": {
		//	      "additionalProperties": false,
		//	      "description": "Information about level three.",
		//	      "properties": {
		//	        "HierarchyLevelArn": {
		//	          "description": "The Amazon Resource Name (ARN) of the hierarchy level.",
		//	          "pattern": "^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent-group-level/[-0-9]*$",
		//	          "type": "string"
		//	        },
		//	        "HierarchyLevelId": {
		//	          "description": "The identifier of the hierarchy level.",
		//	          "type": "string"
		//	        },
		//	        "Name": {
		//	          "description": "The name of the hierarchy level.",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "Name"
		//	      ],
		//	      "type": "object"
		//	    },
		//	    "LevelTwo": {
		//	      "additionalProperties": false,
		//	      "description": "Information about level two.",
		//	      "properties": {
		//	        "HierarchyLevelArn": {
		//	          "description": "The Amazon Resource Name (ARN) of the hierarchy level.",
		//	          "pattern": "^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent-group-level/[-0-9]*$",
		//	          "type": "string"
		//	        },
		//	        "HierarchyLevelId": {
		//	          "description": "The identifier of the hierarchy level.",
		//	          "type": "string"
		//	        },
		//	        "Name": {
		//	          "description": "The name of the hierarchy level.",
		//	          "type": "string"
		//	        }
		//	      },
		//	      "required": [
		//	        "Name"
		//	      ],
		//	      "type": "object"
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"user_hierarchy_structure": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: LevelFive
				"level_five": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: HierarchyLevelArn
						"hierarchy_level_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The Amazon Resource Name (ARN) of the hierarchy level.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: HierarchyLevelId
						"hierarchy_level_id": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The identifier of the hierarchy level.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Name
						"name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The name of the hierarchy level.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "Information about level five.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: LevelFour
				"level_four": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: HierarchyLevelArn
						"hierarchy_level_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The Amazon Resource Name (ARN) of the hierarchy level.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: HierarchyLevelId
						"hierarchy_level_id": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The identifier of the hierarchy level.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Name
						"name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The name of the hierarchy level.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "Information about level four.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: LevelOne
				"level_one": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: HierarchyLevelArn
						"hierarchy_level_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The Amazon Resource Name (ARN) of the hierarchy level.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: HierarchyLevelId
						"hierarchy_level_id": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The identifier of the hierarchy level.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Name
						"name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The name of the hierarchy level.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "Information about level one.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: LevelThree
				"level_three": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: HierarchyLevelArn
						"hierarchy_level_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The Amazon Resource Name (ARN) of the hierarchy level.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: HierarchyLevelId
						"hierarchy_level_id": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The identifier of the hierarchy level.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Name
						"name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The name of the hierarchy level.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "Information about level three.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: LevelTwo
				"level_two": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
					Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
						// Property: HierarchyLevelArn
						"hierarchy_level_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The Amazon Resource Name (ARN) of the hierarchy level.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: HierarchyLevelId
						"hierarchy_level_id": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The identifier of the hierarchy level.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
						// Property: Name
						"name": schema.StringAttribute{ /*START ATTRIBUTE*/
							Description: "The name of the hierarchy level.",
							Computed:    true,
						}, /*END ATTRIBUTE*/
					}, /*END SCHEMA*/
					Description: "Information about level two.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "Information about the hierarchy structure.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: UserHierarchyStructureArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The identifier of the User Hierarchy Structure.",
		//	  "pattern": "^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/user-hierarchy-structure",
		//	  "type": "string"
		//	}
		"user_hierarchy_structure_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The identifier of the User Hierarchy Structure.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::Connect::UserHierarchyStructure",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::Connect::UserHierarchyStructure").WithTerraformTypeName("awscc_connect_user_hierarchy_structure")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"hierarchy_level_arn":          "HierarchyLevelArn",
		"hierarchy_level_id":           "HierarchyLevelId",
		"instance_arn":                 "InstanceArn",
		"level_five":                   "LevelFive",
		"level_four":                   "LevelFour",
		"level_one":                    "LevelOne",
		"level_three":                  "LevelThree",
		"level_two":                    "LevelTwo",
		"name":                         "Name",
		"user_hierarchy_structure":     "UserHierarchyStructure",
		"user_hierarchy_structure_arn": "UserHierarchyStructureArn",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
