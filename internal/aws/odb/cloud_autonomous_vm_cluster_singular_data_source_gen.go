// Copyright (c) HashiCorp, Inc.
// SPDX-License-Identifier: MPL-2.0

// Code generated by generators/singular-data-source/main.go; DO NOT EDIT.

package odb

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-provider-awscc/internal/generic"
	"github.com/hashicorp/terraform-provider-awscc/internal/registry"
)

func init() {
	registry.AddDataSourceFactory("awscc_odb_cloud_autonomous_vm_cluster", cloudAutonomousVmClusterDataSource)
}

// cloudAutonomousVmClusterDataSource returns the Terraform awscc_odb_cloud_autonomous_vm_cluster data source.
// This Terraform data source corresponds to the CloudFormation AWS::ODB::CloudAutonomousVmCluster resource.
func cloudAutonomousVmClusterDataSource(ctx context.Context) (datasource.DataSource, error) {
	attributes := map[string]schema.Attribute{ /*START SCHEMA*/
		// Property: AutonomousDataStoragePercentage
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The percentage of data storage currently in use for Autonomous Databases in the Autonomous VM cluster.",
		//	  "type": "number"
		//	}
		"autonomous_data_storage_percentage": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "The percentage of data storage currently in use for Autonomous Databases in the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: AutonomousDataStorageSizeInTBs
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The data storage size allocated for Autonomous Databases in the Autonomous VM cluster, in TB.",
		//	  "type": "number"
		//	}
		"autonomous_data_storage_size_in_t_bs": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "The data storage size allocated for Autonomous Databases in the Autonomous VM cluster, in TB.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: AvailableAutonomousDataStorageSizeInTBs
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The available data storage space for Autonomous Databases in the Autonomous VM cluster, in TB.",
		//	  "type": "number"
		//	}
		"available_autonomous_data_storage_size_in_t_bs": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "The available data storage space for Autonomous Databases in the Autonomous VM cluster, in TB.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: AvailableContainerDatabases
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The number of Autonomous CDBs that you can create with the currently available storage.",
		//	  "type": "integer"
		//	}
		"available_container_databases": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The number of Autonomous CDBs that you can create with the currently available storage.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: AvailableCpus
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The number of CPU cores available for allocation to Autonomous Databases.",
		//	  "type": "number"
		//	}
		"available_cpus": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "The number of CPU cores available for allocation to Autonomous Databases.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CloudAutonomousVmClusterArn
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Amazon Resource Name (ARN) for the Autonomous VM cluster.",
		//	  "type": "string"
		//	}
		"cloud_autonomous_vm_cluster_arn": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Amazon Resource Name (ARN) for the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CloudAutonomousVmClusterId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The unique identifier of the Autonomous VM cluster.",
		//	  "type": "string"
		//	}
		"cloud_autonomous_vm_cluster_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The unique identifier of the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CloudExadataInfrastructureId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The unique identifier of the Cloud Exadata Infrastructure containing this Autonomous VM cluster.",
		//	  "type": "string"
		//	}
		"cloud_exadata_infrastructure_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The unique identifier of the Cloud Exadata Infrastructure containing this Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ComputeModel
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The compute model of the Autonomous VM cluster: ECPU or OCPU.",
		//	  "enum": [
		//	    "ECPU",
		//	    "OCPU"
		//	  ],
		//	  "type": "string"
		//	}
		"compute_model": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The compute model of the Autonomous VM cluster: ECPU or OCPU.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CpuCoreCount
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The total number of CPU cores in the Autonomous VM cluster.",
		//	  "type": "integer"
		//	}
		"cpu_core_count": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The total number of CPU cores in the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CpuCoreCountPerNode
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The number of CPU cores enabled per node in the Autonomous VM cluster.",
		//	  "type": "integer"
		//	}
		"cpu_core_count_per_node": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The number of CPU cores enabled per node in the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: CpuPercentage
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The percentage of total CPU cores currently in use in the Autonomous VM cluster.",
		//	  "type": "number"
		//	}
		"cpu_percentage": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "The percentage of total CPU cores currently in use in the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DataStorageSizeInGBs
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The total data storage allocated to the Autonomous VM cluster, in GB.",
		//	  "type": "number"
		//	}
		"data_storage_size_in_g_bs": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "The total data storage allocated to the Autonomous VM cluster, in GB.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DataStorageSizeInTBs
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The total data storage allocated to the Autonomous VM cluster, in TB.",
		//	  "type": "number"
		//	}
		"data_storage_size_in_t_bs": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "The total data storage allocated to the Autonomous VM cluster, in TB.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DbNodeStorageSizeInGBs
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The local node storage allocated to the Autonomous VM cluster, in gigabytes (GB).",
		//	  "type": "integer"
		//	}
		"db_node_storage_size_in_g_bs": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The local node storage allocated to the Autonomous VM cluster, in gigabytes (GB).",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DbServers
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The list of database servers associated with the Autonomous VM cluster.",
		//	  "items": {
		//	    "type": "string"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": false
		//	}
		"db_servers": schema.ListAttribute{ /*START ATTRIBUTE*/
			ElementType: types.StringType,
			Description: "The list of database servers associated with the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Description
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The user-provided description of the Autonomous VM cluster.",
		//	  "type": "string"
		//	}
		"description": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The user-provided description of the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: DisplayName
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The display name of the Autonomous VM cluster.",
		//	  "maxLength": 255,
		//	  "minLength": 1,
		//	  "pattern": "",
		//	  "type": "string"
		//	}
		"display_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The display name of the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Domain
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The domain name for the Autonomous VM cluster.",
		//	  "type": "string"
		//	}
		"domain": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The domain name for the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ExadataStorageInTBsLowestScaledValue
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The minimum value to which you can scale down the Exadata storage, in TB.",
		//	  "type": "number"
		//	}
		"exadata_storage_in_t_bs_lowest_scaled_value": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "The minimum value to which you can scale down the Exadata storage, in TB.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Hostname
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The hostname for the Autonomous VM cluster.",
		//	  "type": "string"
		//	}
		"hostname": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The hostname for the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: IsMtlsEnabledVmCluster
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "Indicates whether mutual TLS (mTLS) authentication is enabled for the Autonomous VM cluster.",
		//	  "type": "boolean"
		//	}
		"is_mtls_enabled_vm_cluster": schema.BoolAttribute{ /*START ATTRIBUTE*/
			Description: "Indicates whether mutual TLS (mTLS) authentication is enabled for the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: LicenseModel
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Oracle license model that applies to the Autonomous VM cluster. Valid values are LICENSE_INCLUDED or BRING_YOUR_OWN_LICENSE.",
		//	  "enum": [
		//	    "BRING_YOUR_OWN_LICENSE",
		//	    "LICENSE_INCLUDED"
		//	  ],
		//	  "type": "string"
		//	}
		"license_model": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Oracle license model that applies to the Autonomous VM cluster. Valid values are LICENSE_INCLUDED or BRING_YOUR_OWN_LICENSE.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: MaintenanceWindow
		// CloudFormation resource type schema:
		//
		//	{
		//	  "additionalProperties": false,
		//	  "description": "The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window.",
		//	  "properties": {
		//	    "DaysOfWeek": {
		//	      "description": "The days of the week when maintenance can be performed.",
		//	      "items": {
		//	        "enum": [
		//	          "MONDAY",
		//	          "TUESDAY",
		//	          "WEDNESDAY",
		//	          "THURSDAY",
		//	          "FRIDAY",
		//	          "SATURDAY",
		//	          "SUNDAY"
		//	        ],
		//	        "type": "string"
		//	      },
		//	      "type": "array",
		//	      "uniqueItems": false
		//	    },
		//	    "HoursOfDay": {
		//	      "description": "The hours of the day when maintenance can be performed.",
		//	      "items": {
		//	        "type": "integer"
		//	      },
		//	      "type": "array",
		//	      "uniqueItems": false
		//	    },
		//	    "LeadTimeInWeeks": {
		//	      "description": "The lead time in weeks before the maintenance window.",
		//	      "maxLength": 4,
		//	      "minLength": 1,
		//	      "type": "integer"
		//	    },
		//	    "Months": {
		//	      "description": "The months when maintenance can be performed.",
		//	      "items": {
		//	        "enum": [
		//	          "JANUARY",
		//	          "FEBRUARY",
		//	          "MARCH",
		//	          "APRIL",
		//	          "MAY",
		//	          "JUNE",
		//	          "JULY",
		//	          "AUGUST",
		//	          "SEPTEMBER",
		//	          "OCTOBER",
		//	          "NOVEMBER",
		//	          "DECEMBER"
		//	        ],
		//	        "type": "string"
		//	      },
		//	      "type": "array",
		//	      "uniqueItems": false
		//	    },
		//	    "Preference": {
		//	      "description": "The preference for the maintenance window scheduling.",
		//	      "enum": [
		//	        "NO_PREFERENCE",
		//	        "CUSTOM_PREFERENCE"
		//	      ],
		//	      "type": "string"
		//	    },
		//	    "WeeksOfMonth": {
		//	      "description": "The weeks of the month when maintenance can be performed.",
		//	      "items": {
		//	        "type": "integer"
		//	      },
		//	      "type": "array",
		//	      "uniqueItems": false
		//	    }
		//	  },
		//	  "type": "object"
		//	}
		"maintenance_window": schema.SingleNestedAttribute{ /*START ATTRIBUTE*/
			Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
				// Property: DaysOfWeek
				"days_of_week": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Description: "The days of the week when maintenance can be performed.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: HoursOfDay
				"hours_of_day": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.Int64Type,
					Description: "The hours of the day when maintenance can be performed.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: LeadTimeInWeeks
				"lead_time_in_weeks": schema.Int64Attribute{ /*START ATTRIBUTE*/
					Description: "The lead time in weeks before the maintenance window.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Months
				"months": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.StringType,
					Description: "The months when maintenance can be performed.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: Preference
				"preference": schema.StringAttribute{ /*START ATTRIBUTE*/
					Description: "The preference for the maintenance window scheduling.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
				// Property: WeeksOfMonth
				"weeks_of_month": schema.ListAttribute{ /*START ATTRIBUTE*/
					ElementType: types.Int64Type,
					Description: "The weeks of the month when maintenance can be performed.",
					Computed:    true,
				}, /*END ATTRIBUTE*/
			}, /*END SCHEMA*/
			Description: "The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: MaxAcdsLowestScaledValue
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The minimum value to which you can scale down the maximum number of Autonomous CDBs.",
		//	  "type": "integer"
		//	}
		"max_acds_lowest_scaled_value": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The minimum value to which you can scale down the maximum number of Autonomous CDBs.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: MemoryPerOracleComputeUnitInGBs
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The amount of memory allocated per Oracle Compute Unit, in GB.",
		//	  "type": "integer"
		//	}
		"memory_per_oracle_compute_unit_in_g_bs": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The amount of memory allocated per Oracle Compute Unit, in GB.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: MemorySizeInGBs
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The total amount of memory allocated to the Autonomous VM cluster, in gigabytes (GB).",
		//	  "type": "integer"
		//	}
		"memory_size_in_g_bs": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The total amount of memory allocated to the Autonomous VM cluster, in gigabytes (GB).",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: NodeCount
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The number of database server nodes in the Autonomous VM cluster.",
		//	  "type": "integer"
		//	}
		"node_count": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The number of database server nodes in the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: NonProvisionableAutonomousContainerDatabases
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The number of Autonomous CDBs that can't be provisioned because of resource constraints.",
		//	  "type": "integer"
		//	}
		"non_provisionable_autonomous_container_databases": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The number of Autonomous CDBs that can't be provisioned because of resource constraints.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: OciResourceAnchorName
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The name of the OCI resource anchor associated with this Autonomous VM cluster.",
		//	  "type": "string"
		//	}
		"oci_resource_anchor_name": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The name of the OCI resource anchor associated with this Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: OciUrl
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The URL for accessing the OCI console page for this Autonomous VM cluster.",
		//	  "type": "string"
		//	}
		"oci_url": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The URL for accessing the OCI console page for this Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Ocid
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The Oracle Cloud Identifier (OCID) of the Autonomous VM cluster.",
		//	  "type": "string"
		//	}
		"ocid": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The Oracle Cloud Identifier (OCID) of the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: OdbNetworkId
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The unique identifier of the ODB network associated with this Autonomous VM cluster.",
		//	  "type": "string"
		//	}
		"odb_network_id": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The unique identifier of the ODB network associated with this Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ProvisionableAutonomousContainerDatabases
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The number of Autonomous CDBs that can be provisioned in the Autonomous VM cluster.",
		//	  "type": "integer"
		//	}
		"provisionable_autonomous_container_databases": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The number of Autonomous CDBs that can be provisioned in the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ProvisionedAutonomousContainerDatabases
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The number of Autonomous CDBs currently provisioned in the Autonomous VM cluster.",
		//	  "type": "integer"
		//	}
		"provisioned_autonomous_container_databases": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The number of Autonomous CDBs currently provisioned in the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ProvisionedCpus
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The number of CPU cores currently provisioned in the Autonomous VM cluster.",
		//	  "type": "number"
		//	}
		"provisioned_cpus": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "The number of CPU cores currently provisioned in the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ReclaimableCpus
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The number of CPU cores that can be reclaimed from terminated or scaled-down Autonomous Databases.",
		//	  "type": "number"
		//	}
		"reclaimable_cpus": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "The number of CPU cores that can be reclaimed from terminated or scaled-down Autonomous Databases.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ReservedCpus
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The number of CPU cores reserved for system operations and redundancy.",
		//	  "type": "number"
		//	}
		"reserved_cpus": schema.Float64Attribute{ /*START ATTRIBUTE*/
			Description: "The number of CPU cores reserved for system operations and redundancy.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ScanListenerPortNonTls
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The SCAN listener port for non-TLS (TCP) protocol. The default is 1521.",
		//	  "maximum": 8999,
		//	  "minimum": 1024,
		//	  "type": "integer"
		//	}
		"scan_listener_port_non_tls": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The SCAN listener port for non-TLS (TCP) protocol. The default is 1521.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: ScanListenerPortTls
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The SCAN listener port for TLS (TCP) protocol. The default is 2484.",
		//	  "maximum": 8999,
		//	  "minimum": 1024,
		//	  "type": "integer"
		//	}
		"scan_listener_port_tls": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The SCAN listener port for TLS (TCP) protocol. The default is 2484.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Shape
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The shape of the Exadata infrastructure for the Autonomous VM cluster.",
		//	  "type": "string"
		//	}
		"shape": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The shape of the Exadata infrastructure for the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: Tags
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The tags associated with the Autonomous VM cluster.",
		//	  "insertionOrder": false,
		//	  "items": {
		//	    "additionalProperties": false,
		//	    "description": "A key-value pair to associate with a resource.",
		//	    "properties": {
		//	      "Key": {
		//	        "description": "The key name of the tag. You can specify a value that's 1 to 128 Unicode characters in length and can't be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., :, /, =, +, @, -, and \".",
		//	        "maxLength": 128,
		//	        "minLength": 1,
		//	        "type": "string"
		//	      },
		//	      "Value": {
		//	        "description": "The value for the tag. You can specify a value that's 1 to 256 characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
		//	        "maxLength": 256,
		//	        "minLength": 0,
		//	        "type": "string"
		//	      }
		//	    },
		//	    "required": [
		//	      "Key"
		//	    ],
		//	    "type": "object"
		//	  },
		//	  "type": "array",
		//	  "uniqueItems": false
		//	}
		"tags": schema.ListNestedAttribute{ /*START ATTRIBUTE*/
			NestedObject: schema.NestedAttributeObject{ /*START NESTED OBJECT*/
				Attributes: map[string]schema.Attribute{ /*START SCHEMA*/
					// Property: Key
					"key": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The key name of the tag. You can specify a value that's 1 to 128 Unicode characters in length and can't be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., :, /, =, +, @, -, and \".",
						Computed:    true,
					}, /*END ATTRIBUTE*/
					// Property: Value
					"value": schema.StringAttribute{ /*START ATTRIBUTE*/
						Description: "The value for the tag. You can specify a value that's 1 to 256 characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
						Computed:    true,
					}, /*END ATTRIBUTE*/
				}, /*END SCHEMA*/
			}, /*END NESTED OBJECT*/
			Description: "The tags associated with the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: TimeZone
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The time zone of the Autonomous VM cluster.",
		//	  "maxLength": 255,
		//	  "minLength": 1,
		//	  "type": "string"
		//	}
		"time_zone": schema.StringAttribute{ /*START ATTRIBUTE*/
			Description: "The time zone of the Autonomous VM cluster.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
		// Property: TotalContainerDatabases
		// CloudFormation resource type schema:
		//
		//	{
		//	  "description": "The total number of Autonomous Container Databases that can be created with the allocated local storage.",
		//	  "type": "integer"
		//	}
		"total_container_databases": schema.Int64Attribute{ /*START ATTRIBUTE*/
			Description: "The total number of Autonomous Container Databases that can be created with the allocated local storage.",
			Computed:    true,
		}, /*END ATTRIBUTE*/
	} /*END SCHEMA*/

	attributes["id"] = schema.StringAttribute{
		Description: "Uniquely identifies the resource.",
		Required:    true,
	}

	schema := schema.Schema{
		Description: "Data Source schema for AWS::ODB::CloudAutonomousVmCluster",
		Attributes:  attributes,
	}

	var opts generic.DataSourceOptions

	opts = opts.WithCloudFormationTypeName("AWS::ODB::CloudAutonomousVmCluster").WithTerraformTypeName("awscc_odb_cloud_autonomous_vm_cluster")
	opts = opts.WithTerraformSchema(schema)
	opts = opts.WithAttributeNameMap(map[string]string{
		"autonomous_data_storage_percentage":             "AutonomousDataStoragePercentage",
		"autonomous_data_storage_size_in_t_bs":           "AutonomousDataStorageSizeInTBs",
		"available_autonomous_data_storage_size_in_t_bs": "AvailableAutonomousDataStorageSizeInTBs",
		"available_container_databases":                  "AvailableContainerDatabases",
		"available_cpus":                                 "AvailableCpus",
		"cloud_autonomous_vm_cluster_arn":                "CloudAutonomousVmClusterArn",
		"cloud_autonomous_vm_cluster_id":                 "CloudAutonomousVmClusterId",
		"cloud_exadata_infrastructure_id":                "CloudExadataInfrastructureId",
		"compute_model":                                  "ComputeModel",
		"cpu_core_count":                                 "CpuCoreCount",
		"cpu_core_count_per_node":                        "CpuCoreCountPerNode",
		"cpu_percentage":                                 "CpuPercentage",
		"data_storage_size_in_g_bs":                      "DataStorageSizeInGBs",
		"data_storage_size_in_t_bs":                      "DataStorageSizeInTBs",
		"days_of_week":                                   "DaysOfWeek",
		"db_node_storage_size_in_g_bs":                   "DbNodeStorageSizeInGBs",
		"db_servers":                                     "DbServers",
		"description":                                    "Description",
		"display_name":                                   "DisplayName",
		"domain":                                         "Domain",
		"exadata_storage_in_t_bs_lowest_scaled_value":    "ExadataStorageInTBsLowestScaledValue",
		"hostname":                                       "Hostname",
		"hours_of_day":                                   "HoursOfDay",
		"is_mtls_enabled_vm_cluster":                     "IsMtlsEnabledVmCluster",
		"key":                                            "Key",
		"lead_time_in_weeks":                             "LeadTimeInWeeks",
		"license_model":                                  "LicenseModel",
		"maintenance_window":                             "MaintenanceWindow",
		"max_acds_lowest_scaled_value":                   "MaxAcdsLowestScaledValue",
		"memory_per_oracle_compute_unit_in_g_bs":         "MemoryPerOracleComputeUnitInGBs",
		"memory_size_in_g_bs":                            "MemorySizeInGBs",
		"months":                                         "Months",
		"node_count":                                     "NodeCount",
		"non_provisionable_autonomous_container_databases": "NonProvisionableAutonomousContainerDatabases",
		"oci_resource_anchor_name":                         "OciResourceAnchorName",
		"oci_url":                                          "OciUrl",
		"ocid":                                             "Ocid",
		"odb_network_id":                                   "OdbNetworkId",
		"preference":                                       "Preference",
		"provisionable_autonomous_container_databases": "ProvisionableAutonomousContainerDatabases",
		"provisioned_autonomous_container_databases":   "ProvisionedAutonomousContainerDatabases",
		"provisioned_cpus":                             "ProvisionedCpus",
		"reclaimable_cpus":                             "ReclaimableCpus",
		"reserved_cpus":                                "ReservedCpus",
		"scan_listener_port_non_tls":                   "ScanListenerPortNonTls",
		"scan_listener_port_tls":                       "ScanListenerPortTls",
		"shape":                                        "Shape",
		"tags":                                         "Tags",
		"time_zone":                                    "TimeZone",
		"total_container_databases":                    "TotalContainerDatabases",
		"value":                                        "Value",
		"weeks_of_month":                               "WeeksOfMonth",
	})

	v, err := generic.NewSingularDataSource(ctx, opts...)

	if err != nil {
		return nil, err
	}

	return v, nil
}
