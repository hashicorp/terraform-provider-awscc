{
  "tagging": {
    "permissions": [
      "rtbfabric:TagResource",
      "rtbfabric:UntagResource",
      "rtbfabric:ListTagsForResource"
    ],
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "tagProperty": "/properties/Tags",
    "cloudFormationSystemTags": false
  },
  "handlers": {
    "read": {
      "permissions": [
        "rtbfabric:GetResponderGateway",
        "rtbfabric:ListTagsForResource"
      ]
    },
    "create": {
      "permissions": [
        "rtbfabric:CreateResponderGateway",
        "rtbfabric:GetResponderGateway",
        "rtbfabric:TagResource",
        "rtbfabric:ListTagsForResource",
        "iam:CreateServiceLinkedRole"
      ]
    },
    "update": {
      "permissions": [
        "rtbfabric:GetResponderGateway",
        "rtbfabric:TagResource",
        "rtbfabric:UntagResource",
        "rtbfabric:ListTagsForResource"
      ]
    },
    "list": {
      "permissions": [
        "rtbfabric:ListResponderGateways"
      ]
    },
    "delete": {
      "permissions": [
        "rtbfabric:DeleteResponderGateway",
        "rtbfabric:GetResponderGateway"
      ]
    }
  },
  "typeName": "AWS::RTBFabric::ResponderGateway",
  "readOnlyProperties": [
    "/properties/GatewayId",
    "/properties/Arn",
    "/properties/ResponderGatewayStatus",
    "/properties/CreatedTimestamp",
    "/properties/UpdatedTimestamp"
  ],
  "description": "Resource Type definition for AWS::RTBFabric::ResponderGateway Resource Type",
  "additionalIdentifiers": [
    [
      "/properties/GatewayId"
    ]
  ],
  "additionalProperties": false,
  "primaryIdentifier": [
    "/properties/Arn"
  ],
  "definitions": {
    "UpdatedTimestamp": {
      "type": "string"
    },
    "TrustStoreConfiguration": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "CertificateAuthorityCertificates": {
          "$ref": "#/definitions/CertificateAuthorityCertificates"
        }
      },
      "required": [
        "CertificateAuthorityCertificates"
      ]
    },
    "Description": {
      "pattern": "^[A-Za-z0-9 ]+$",
      "type": "string"
    },
    "CreatedTimestamp": {
      "type": "string"
    },
    "DomainName": {
      "pattern": "^(?:[A-Za-z0-9](?:[A-Za-z0-9-]{0,61}[A-Za-z0-9])?)(?:\\.(?:[A-Za-z0-9](?:[A-Za-z0-9-]{0,61}[A-Za-z0-9])?))+$",
      "type": "string"
    },
    "ActiveLinksCount": {
      "type": "integer"
    },
    "AutoScalingGroupsConfiguration": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "AutoScalingGroupNameList": {
          "$ref": "#/definitions/AutoScalingGroupNameList"
        },
        "RoleArn": {
          "type": "string"
        }
      },
      "required": [
        "AutoScalingGroupNameList",
        "RoleArn"
      ]
    },
    "Port": {
      "maximum": 65535,
      "type": "integer",
      "minimum": 1
    },
    "TotalLinksCount": {
      "type": "integer"
    },
    "GatewayId": {
      "pattern": "^(rtbapp-[a-z0-9-]{1,25}|rtb-gw-[a-z0-9-]{1,25})$",
      "type": "string"
    },
    "ManagedEndpointConfiguration": {
      "oneOf": [
        {
          "additionalProperties": false,
          "properties": {
            "AutoScalingGroupsConfiguration": {
              "$ref": "#/definitions/AutoScalingGroupsConfiguration"
            }
          },
          "required": [
            "AutoScalingGroupsConfiguration"
          ]
        },
        {
          "additionalProperties": false,
          "properties": {
            "EksEndpointsConfiguration": {
              "$ref": "#/definitions/EksEndpointsConfiguration"
            }
          },
          "required": [
            "EksEndpointsConfiguration"
          ]
        }
      ],
      "type": "object"
    },
    "SubnetIds": {
      "minItems": 1,
      "uniqueItems": true,
      "description": "The ID of one or more subnets in order to create a gateway.",
      "insertionOrder": false,
      "type": "array",
      "items": {
        "relationshipRef": {
          "typeName": "AWS::EC2::Subnet",
          "propertyPath": "/properties/SubnetId"
        },
        "type": "string"
      }
    },
    "SecurityGroupIds": {
      "minItems": 1,
      "uniqueItems": true,
      "description": "The ID of one or more security groups in order to create a gateway.",
      "insertionOrder": false,
      "type": "array",
      "items": {
        "anyOf": [
          {
            "relationshipRef": {
              "typeName": "AWS::EC2::SecurityGroup",
              "propertyPath": "/properties/GroupId"
            }
          },
          {
            "relationshipRef": {
              "typeName": "AWS::EC2::SecurityGroup",
              "propertyPath": "/properties/Id"
            }
          }
        ],
        "type": "string"
      }
    },
    "Base64EncodedCertificateChain": {
      "minLength": 1,
      "type": "string",
      "maxLength": 2097152
    },
    "EksEndpointsConfiguration": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ClusterApiServerCaCertificateChain": {
          "minLength": 1,
          "type": "string",
          "maxLength": 2097152
        },
        "EndpointsResourceName": {
          "pattern": "^[A-Za-z0-9][A-Za-z0-9-]{0,61}[A-Za-z0-9]$",
          "type": "string"
        },
        "ClusterApiServerEndpointUri": {
          "minLength": 0,
          "pattern": "^(https|http)://(?:[A-Za-z0-9](?:[A-Za-z0-9-]{0,61}[A-Za-z0-9])?)(?:\\.(?:[A-Za-z0-9](?:[A-Za-z0-9-]{0,61}[A-Za-z0-9])?))+$",
          "type": "string",
          "maxLength": 255
        },
        "ClusterName": {
          "pattern": "^[A-Za-z0-9][A-Za-z0-9-]{0,61}[A-Za-z0-9]$",
          "type": "string"
        },
        "EndpointsResourceNamespace": {
          "pattern": "^[A-Za-z0-9][A-Za-z0-9-]{0,61}[A-Za-z0-9]$",
          "type": "string"
        },
        "RoleArn": {
          "type": "string"
        }
      },
      "required": [
        "EndpointsResourceName",
        "EndpointsResourceNamespace",
        "ClusterApiServerEndpointUri",
        "ClusterApiServerCaCertificateChain",
        "ClusterName",
        "RoleArn"
      ]
    },
    "VpcId": {
      "relationshipRef": {
        "typeName": "AWS::EC2::VPC",
        "propertyPath": "/properties/VpcId"
      },
      "minLength": 5,
      "type": "string",
      "maxLength": 50
    },
    "ResponderGatewayStatus": {
      "type": "string",
      "enum": [
        "PENDING_CREATION",
        "ACTIVE",
        "PENDING_DELETION",
        "DELETED",
        "ERROR",
        "PENDING_UPDATE",
        "ISOLATED",
        "PENDING_ISOLATION",
        "PENDING_RESTORATION"
      ]
    },
    "CertificateAuthorityCertificates": {
      "minItems": 0,
      "maxItems": 1,
      "uniqueItems": true,
      "insertionOrder": false,
      "type": "array",
      "items": {
        "$ref": "#/definitions/Base64EncodedCertificateChain"
      }
    },
    "AutoScalingGroupNameList": {
      "uniqueItems": true,
      "insertionOrder": false,
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Value": {
          "minLength": 0,
          "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
          "type": "string",
          "maxLength": 256
        },
        "Key": {
          "minLength": 1,
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
          "type": "string",
          "maxLength": 128
        }
      },
      "required": [
        "Key"
      ]
    },
    "Arn": {
      "minLength": 20,
      "pattern": "^arn:aws:(rtbfabric|rtbfabric):[a-zA-Z0-9_-]+:[0-9]{12}:gateway/[a-zA-Z0-9-]+$",
      "type": "string",
      "maxLength": 2048
    },
    "Protocol": {
      "type": "string",
      "enum": [
        "HTTP",
        "HTTPS"
      ]
    },
    "Tags": {
      "minItems": 0,
      "maxItems": 50,
      "uniqueItems": true,
      "description": "Tags to assign to the Responder Gateway.",
      "insertionOrder": false,
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      }
    },
    "InboundLinksCount": {
      "type": "integer"
    }
  },
  "properties": {
    "UpdatedTimestamp": {
      "$ref": "#/definitions/UpdatedTimestamp"
    },
    "TrustStoreConfiguration": {
      "$ref": "#/definitions/TrustStoreConfiguration"
    },
    "Description": {
      "$ref": "#/definitions/Description"
    },
    "CreatedTimestamp": {
      "$ref": "#/definitions/CreatedTimestamp"
    },
    "DomainName": {
      "$ref": "#/definitions/DomainName"
    },
    "Port": {
      "$ref": "#/definitions/Port"
    },
    "GatewayId": {
      "$ref": "#/definitions/GatewayId"
    },
    "ManagedEndpointConfiguration": {
      "$ref": "#/definitions/ManagedEndpointConfiguration"
    },
    "SubnetIds": {
      "$ref": "#/definitions/SubnetIds"
    },
    "SecurityGroupIds": {
      "$ref": "#/definitions/SecurityGroupIds"
    },
    "VpcId": {
      "$ref": "#/definitions/VpcId"
    },
    "ResponderGatewayStatus": {
      "$ref": "#/definitions/ResponderGatewayStatus"
    },
    "Arn": {
      "$ref": "#/definitions/Arn"
    },
    "Protocol": {
      "$ref": "#/definitions/Protocol"
    },
    "Tags": {
      "$ref": "#/definitions/Tags"
    }
  },
  "required": [
    "VpcId",
    "SubnetIds",
    "SecurityGroupIds",
    "Port",
    "Protocol"
  ],
  "conditionalCreateOnlyProperties": [
    "/properties/Description",
    "/properties/VpcId",
    "/properties/SubnetIds",
    "/properties/SecurityGroupIds",
    "/properties/Port",
    "/properties/Protocol",
    "/properties/DomainName",
    "/properties/TrustStoreConfiguration",
    "/properties/ManagedEndpointConfiguration"
  ]
}
