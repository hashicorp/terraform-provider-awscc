# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

#
# For future consideration, this list could be automatically generated
# via the AWS SDK service list.
#

locals {
  service_labels = toset([
    "accessanalyzer",
    "acmpca",
    "amplify",
    "apigateway",
    "apigatewayv2",
    "appconfig",
    "appflow",
    "appintegrations",
    "applicationautoscaling",
    "applicationinsights",
    "appconfig",
    "apprunner",
    "appstream",
    "appsync",
    "aps",
    "arczonalshift",
    "athena",
    "auditmanager",
    "autoscaling",
    "b2bi",
    "backup",
    "backupgateway",
    "batch",
    "bedrock",
    "billingconductor",
    "budgets",
    "cassandra",
    "ce",
    "certificatemanager",
    "chatbot",
    "cleanrooms",
    "cleanroomsml",
    "cloudformation",
    "cloudfront",
    "cloudtrail",
    "cloudwatch",
    "codeartifact",
    "codebuild",
    "codeconnections",
    "codedeploy",
    "codeguruprofiler",
    "codegurureviewer",
    "codepipeline",
    "codestarconnections",
    "codestarnotifications",
    "cognito",
    "comprehend",
    "config",
    "connect",
    "connectcampaigns",
    "controltower",
    "cur",
    "customerprofiles",
    "databrew",
    "datapipeline",
    "datasync",
    "datazone",
    "deadline",
    "detective",
    "devopsguru",
    "directoryservice",
    "dms",
    "docdbelastic",
    "dynamodb",
    "ec2",
    "ecr",
    "ecs",
    "efs",
    "eks",
    "elasticache",
    "elasticbeanstalk",
    "elasticloadbalancingv2",
    "emr",
    "emrcontainers",
    "emrserverless",
    "entityresolution",
    "events",
    "eventschemas",
    "evidently",
    "finspace",
    "fis",
    "fms",
    "forecast",
    "frauddetector",
    "fsx",
    "gamelift",
    "globalaccelerator",
    "glue",
    "grafana",
    "greengrassv2",
    "groundstation",
    "guardduty",
    "healthimaging",
    "healthlake",
    "iam",
    "identitystore",
    "imagebuilder",
    "inspector",
    "inspectorv2",
    "internetmonitor",
    "invoicing",
    "iot",
    "iotanalytics",
    "iotcoredeviceadvisor",
    "iotevents",
    "iotfleethub",
    "iotfleetwise",
    "iotsitewise",
    "iottwinmaker",
    "iotwireless",
    "ivs",
    "ivschat",
    "kafkaconnect",
    "kendra",
    "kendraranking",
    "kinesis",
    "kinesisanalyticsv2",
    "kinesisfirehose",
    "kinesisvideo",
    "kms",
    "lakeformation",
    "lambda",
    "lex",
    "licensemanager",
    "lightsail",
    "location",
    "logs",
    "lookoutequipment",
    "lookoutmetrics",
    "lookoutvision",
    "m2",
    "macie",
    "managedblockchain",
    "mediaconnect",
    "medialive",
    "mediapackage",
    "mediapackagev2",
    "mediatailor",
    "memorydb",
    "msk",
    "mwaa",
    "neptune",
    "neptunegraph",
    "networkfirewall",
    "networkmanager",
    "nimblestudio",
    "oam",
    "omics",
    "opensearchserverless",
    "opensearchservice",
    "opsworkscm",
    "organizations",
    "osis",
    "panorama",
    "paymentcryptography",
    "pcaconnectorad",
    "pcs",
    "personalize",
    "pinpoint",
    "pipes",
    "proton",
    "qbusiness",
    "qldb",
    "quicksight",
    "qbusiness",
    "ram",
    "rds",
    "redshift",
    "redshiftserverless",
    "refactorspaces",
    "rekognition",
    "resiliencehub",
    "resourceexplorer2",
    "resourcegroups",
    "robomaker",
    "rolesanywhere",
    "route53",
    "route53profiles",
    "route53recoverycontrol",
    "route53recoveryreadiness",
    "route53resolver",
    "rum",
    "s3",
    "s3express",
    "s3objectlambda",
    "s3outposts",
    "s3tables",
    "sagemaker",
    "scheduler",
    "secretsmanager",
    "securityhub",
    "securitylake",
    "servicecatalog",
    "servicecatalogappregistry",
    "ses",
    "shield",
    "signer",
    "simspaceweaver",
    "sns",
    "sqs",
    "ssm",
    "ssmcontacts",
    "ssmincidents",
    "ssmquicksetup",
    "sso",
    "stepfunctions",
    "supportapp",
    "synthetics",
    "systemsmanagersap",
    "timestream",
    "transfer",
    "verifiedpermissions",
    "voiceid",
    "vpc",
    "vpclattice",
    "wafv2",
    "wisdom",
    "workspaces",
    "workspacesthinclient",
    "workspacesweb",
    "xray",
  ])
}

resource "github_issue_label" "service" {
  for_each = local.service_labels

  repository = "terraform-provider-awscc"
  name       = "service/${each.value}"
  color      = "7b42bc" # color:terraform (logomark)
}
